"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fr = exports.net = exports.com = exports.khttp = exports.java = exports.org = void 0;
const AbstractArrow_js_1 = require("./org/bukkit/entity/AbstractArrow.js");
const AbstractArrow_PickupStatus_js_1 = require("./org/bukkit/entity/AbstractArrow$PickupStatus.js");
const AbstractHorse_js_1 = require("./org/bukkit/entity/AbstractHorse.js");
const AbstractHorseInventory_js_1 = require("./org/bukkit/inventory/AbstractHorseInventory.js");
const AbstractInterruptibleChannel_js_1 = require("./java/nio/channels/spi/AbstractInterruptibleChannel.js");
const AbstractVillager_js_1 = require("./org/bukkit/entity/AbstractVillager.js");
const AccessMode_js_1 = require("./java/nio/file/AccessMode.js");
const Action_js_1 = require("./org/bukkit/event/block/Action.js");
const Advancement_js_1 = require("./org/bukkit/advancement/Advancement.js");
const AdvancementProgress_js_1 = require("./org/bukkit/advancement/AdvancementProgress.js");
const Ageable_js_1 = require("./org/bukkit/entity/Ageable.js");
const Ageable_js_2 = require("./org/bukkit/block/data/Ageable.js");
const Ambient_js_1 = require("./org/bukkit/entity/Ambient.js");
const AnaloguePowerable_js_1 = require("./org/bukkit/block/data/AnaloguePowerable.js");
const AnimalTamer_js_1 = require("./org/bukkit/entity/AnimalTamer.js");
const Animals_js_1 = require("./org/bukkit/entity/Animals.js");
const AnvilInventory_js_1 = require("./org/bukkit/inventory/AnvilInventory.js");
const AreaEffectCloud_js_1 = require("./org/bukkit/entity/AreaEffectCloud.js");
const AreaEffectCloudApplyEvent_js_1 = require("./org/bukkit/event/entity/AreaEffectCloudApplyEvent.js");
const ArmorStand_js_1 = require("./org/bukkit/entity/ArmorStand.js");
const ArmorStand_LockType_js_1 = require("./org/bukkit/entity/ArmorStand$LockType.js");
const Arrow_js_1 = require("./org/bukkit/entity/Arrow.js");
const Art_js_1 = require("./org/bukkit/Art.js");
const AsyncPlayerChatEvent_js_1 = require("./org/bukkit/event/player/AsyncPlayerChatEvent.js");
const AsyncPlayerPreLoginEvent_js_1 = require("./org/bukkit/event/player/AsyncPlayerPreLoginEvent.js");
const AsyncPlayerPreLoginEvent_Result_js_1 = require("./org/bukkit/event/player/AsyncPlayerPreLoginEvent$Result.js");
const AsynchronousChannel_js_1 = require("./java/nio/channels/AsynchronousChannel.js");
const AsynchronousFileChannel_js_1 = require("./java/nio/channels/AsynchronousFileChannel.js");
const Attachable_js_1 = require("./org/bukkit/block/data/Attachable.js");
const Attachable_js_2 = require("./org/bukkit/material/Attachable.js");
const Attributable_js_1 = require("./org/bukkit/attribute/Attributable.js");
const Attribute_js_1 = require("./org/bukkit/attribute/Attribute.js");
const AttributeInstance_js_1 = require("./org/bukkit/attribute/AttributeInstance.js");
const AttributeModifier_js_1 = require("./org/bukkit/attribute/AttributeModifier.js");
const AttributeModifier_Operation_js_1 = require("./org/bukkit/attribute/AttributeModifier$Operation.js");
const AttributeView_js_1 = require("./java/nio/file/attribute/AttributeView.js");
const AuthorNagException_js_1 = require("./org/bukkit/plugin/AuthorNagException.js");
const Authorization_js_1 = require("./khttp/structures/authorization/Authorization.js");
const Axis_js_1 = require("./org/bukkit/Axis.js");
const Bamboo_js_1 = require("./org/bukkit/block/data/type/Bamboo.js");
const Bamboo_Leaves_js_1 = require("./org/bukkit/block/data/type/Bamboo$Leaves.js");
const BanEntry_js_1 = require("./org/bukkit/BanEntry.js");
const BanList_js_1 = require("./org/bukkit/BanList.js");
const BanList_Type_js_1 = require("./org/bukkit/BanList$Type.js");
const Banner_js_1 = require("./org/bukkit/material/Banner.js");
const Banner_js_2 = require("./org/bukkit/block/Banner.js");
const BannerMeta_js_1 = require("./org/bukkit/inventory/meta/BannerMeta.js");
const BarColor_js_1 = require("./org/bukkit/boss/BarColor.js");
const BarFlag_js_1 = require("./org/bukkit/boss/BarFlag.js");
const BarStyle_js_1 = require("./org/bukkit/boss/BarStyle.js");
const Barrel_js_1 = require("./org/bukkit/block/Barrel.js");
const BaseCommand_js_1 = require("./com/pixlfox/scriptablemc/acf/BaseCommand.js");
const BaseComponent_js_1 = require("./net/md_5/bungee/api/chat/BaseComponent.js");
const BasicAuthorization_js_1 = require("./khttp/structures/authorization/BasicAuthorization.js");
const BasicFileAttributes_js_1 = require("./java/nio/file/attribute/BasicFileAttributes.js");
const Bat_js_1 = require("./org/bukkit/entity/Bat.js");
const BatToggleSleepEvent_js_1 = require("./org/bukkit/event/entity/BatToggleSleepEvent.js");
const Beacon_js_1 = require("./org/bukkit/block/Beacon.js");
const BeaconInventory_js_1 = require("./org/bukkit/inventory/BeaconInventory.js");
const Bed_js_1 = require("./org/bukkit/material/Bed.js");
const Bed_js_2 = require("./org/bukkit/block/Bed.js");
const Bed_js_3 = require("./org/bukkit/block/data/type/Bed.js");
const Bed_Part_js_1 = require("./org/bukkit/block/data/type/Bed$Part.js");
const Bee_js_1 = require("./org/bukkit/entity/Bee.js");
const Beehive_js_1 = require("./org/bukkit/block/Beehive.js");
const Beehive_js_2 = require("./org/bukkit/block/data/type/Beehive.js");
const Bell_js_1 = require("./org/bukkit/block/Bell.js");
const Bell_js_2 = require("./org/bukkit/block/data/type/Bell.js");
const Bell_Attachment_js_1 = require("./org/bukkit/block/data/type/Bell$Attachment.js");
const Biome_js_1 = require("./org/bukkit/block/Biome.js");
const Bisected_js_1 = require("./org/bukkit/block/data/Bisected.js");
const Bisected_Half_js_1 = require("./org/bukkit/block/data/Bisected$Half.js");
const BlastFurnace_js_1 = require("./org/bukkit/block/BlastFurnace.js");
const BlastingRecipe_js_1 = require("./org/bukkit/inventory/BlastingRecipe.js");
const Blaze_js_1 = require("./org/bukkit/entity/Blaze.js");
const Blob_js_1 = require("./java/sql/Blob.js");
const Block_js_1 = require("./org/bukkit/block/Block.js");
const BlockBreakEvent_js_1 = require("./org/bukkit/event/block/BlockBreakEvent.js");
const BlockBurnEvent_js_1 = require("./org/bukkit/event/block/BlockBurnEvent.js");
const BlockCanBuildEvent_js_1 = require("./org/bukkit/event/block/BlockCanBuildEvent.js");
const BlockChangeDelegate_js_1 = require("./org/bukkit/BlockChangeDelegate.js");
const BlockCommandSender_js_1 = require("./org/bukkit/command/BlockCommandSender.js");
const BlockCookEvent_js_1 = require("./org/bukkit/event/block/BlockCookEvent.js");
const BlockDamageEvent_js_1 = require("./org/bukkit/event/block/BlockDamageEvent.js");
const BlockData_js_1 = require("./org/bukkit/block/data/BlockData.js");
const BlockDataMeta_js_1 = require("./org/bukkit/inventory/meta/BlockDataMeta.js");
const BlockDispenseArmorEvent_js_1 = require("./org/bukkit/event/block/BlockDispenseArmorEvent.js");
const BlockDispenseEvent_js_1 = require("./org/bukkit/event/block/BlockDispenseEvent.js");
const BlockDropItemEvent_js_1 = require("./org/bukkit/event/block/BlockDropItemEvent.js");
const BlockEvent_js_1 = require("./org/bukkit/event/block/BlockEvent.js");
const BlockExpEvent_js_1 = require("./org/bukkit/event/block/BlockExpEvent.js");
const BlockExplodeEvent_js_1 = require("./org/bukkit/event/block/BlockExplodeEvent.js");
const BlockFace_js_1 = require("./org/bukkit/block/BlockFace.js");
const BlockFadeEvent_js_1 = require("./org/bukkit/event/block/BlockFadeEvent.js");
const BlockFertilizeEvent_js_1 = require("./org/bukkit/event/block/BlockFertilizeEvent.js");
const BlockFormEvent_js_1 = require("./org/bukkit/event/block/BlockFormEvent.js");
const BlockFromToEvent_js_1 = require("./org/bukkit/event/block/BlockFromToEvent.js");
const BlockGrowEvent_js_1 = require("./org/bukkit/event/block/BlockGrowEvent.js");
const BlockIgniteEvent_js_1 = require("./org/bukkit/event/block/BlockIgniteEvent.js");
const BlockIgniteEvent_IgniteCause_js_1 = require("./org/bukkit/event/block/BlockIgniteEvent$IgniteCause.js");
const BlockInventoryHolder_js_1 = require("./org/bukkit/inventory/BlockInventoryHolder.js");
const BlockIterator_js_1 = require("./org/bukkit/util/BlockIterator.js");
const BlockMultiPlaceEvent_js_1 = require("./org/bukkit/event/block/BlockMultiPlaceEvent.js");
const BlockPhysicsEvent_js_1 = require("./org/bukkit/event/block/BlockPhysicsEvent.js");
const BlockPistonEvent_js_1 = require("./org/bukkit/event/block/BlockPistonEvent.js");
const BlockPistonExtendEvent_js_1 = require("./org/bukkit/event/block/BlockPistonExtendEvent.js");
const BlockPistonRetractEvent_js_1 = require("./org/bukkit/event/block/BlockPistonRetractEvent.js");
const BlockPlaceEvent_js_1 = require("./org/bukkit/event/block/BlockPlaceEvent.js");
const BlockPopulator_js_1 = require("./org/bukkit/generator/BlockPopulator.js");
const BlockProjectileSource_js_1 = require("./org/bukkit/projectiles/BlockProjectileSource.js");
const BlockRedstoneEvent_js_1 = require("./org/bukkit/event/block/BlockRedstoneEvent.js");
const BlockShearEntityEvent_js_1 = require("./org/bukkit/event/block/BlockShearEntityEvent.js");
const BlockSpreadEvent_js_1 = require("./org/bukkit/event/block/BlockSpreadEvent.js");
const BlockState_js_1 = require("./org/bukkit/block/BlockState.js");
const BlockStateMeta_js_1 = require("./org/bukkit/inventory/meta/BlockStateMeta.js");
const BlockVector_js_1 = require("./org/bukkit/util/BlockVector.js");
const Boat_js_1 = require("./org/bukkit/entity/Boat.js");
const BookMeta_js_1 = require("./org/bukkit/inventory/meta/BookMeta.js");
const BookMeta_Generation_js_1 = require("./org/bukkit/inventory/meta/BookMeta$Generation.js");
const BookMeta_Spigot_js_1 = require("./org/bukkit/inventory/meta/BookMeta$Spigot.js");
const BooleanPrompt_js_1 = require("./org/bukkit/conversations/BooleanPrompt.js");
const Boss_js_1 = require("./org/bukkit/entity/Boss.js");
const BossBar_js_1 = require("./org/bukkit/boss/BossBar.js");
const BoundingBox_js_1 = require("./org/bukkit/util/BoundingBox.js");
const Breedable_js_1 = require("./org/bukkit/entity/Breedable.js");
const BrewEvent_js_1 = require("./org/bukkit/event/inventory/BrewEvent.js");
const BrewerInventory_js_1 = require("./org/bukkit/inventory/BrewerInventory.js");
const BrewingStand_js_1 = require("./org/bukkit/block/BrewingStand.js");
const BrewingStand_js_2 = require("./org/bukkit/block/data/type/BrewingStand.js");
const BrewingStandFuelEvent_js_1 = require("./org/bukkit/event/inventory/BrewingStandFuelEvent.js");
const BroadcastMessageEvent_js_1 = require("./org/bukkit/event/server/BroadcastMessageEvent.js");
const BroadcastPermissions_js_1 = require("./org/bukkit/util/permissions/BroadcastPermissions.js");
const BubbleColumn_js_1 = require("./org/bukkit/block/data/type/BubbleColumn.js");
const Buffer_js_1 = require("./java/nio/Buffer.js");
const Bukkit_js_1 = require("./org/bukkit/Bukkit.js");
const BukkitCommand_js_1 = require("./org/bukkit/command/defaults/BukkitCommand.js");
const BukkitCommandCompletionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitCommandCompletionContext.js");
const BukkitCommandExecutionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitCommandExecutionContext.js");
const BukkitCommandIssuer_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitCommandIssuer.js");
const BukkitCommandManager_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitCommandManager.js");
const BukkitConditionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitConditionContext.js");
const BukkitLocales_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitLocales.js");
const BukkitObjectInputStream_js_1 = require("./org/bukkit/util/io/BukkitObjectInputStream.js");
const BukkitObjectOutputStream_js_1 = require("./org/bukkit/util/io/BukkitObjectOutputStream.js");
const BukkitRootCommand_js_1 = require("./com/pixlfox/scriptablemc/acf/BukkitRootCommand.js");
const BukkitRunnable_js_1 = require("./org/bukkit/scheduler/BukkitRunnable.js");
const BukkitScheduler_js_1 = require("./org/bukkit/scheduler/BukkitScheduler.js");
const BukkitTask_js_1 = require("./org/bukkit/scheduler/BukkitTask.js");
const BukkitWorker_js_1 = require("./org/bukkit/scheduler/BukkitWorker.js");
const Button_js_1 = require("./org/bukkit/material/Button.js");
const ByteArrayDataInput_js_1 = require("./com/google/common/io/ByteArrayDataInput.js");
const ByteArrayDataOutput_js_1 = require("./com/google/common/io/ByteArrayDataOutput.js");
const ByteArrayInputStream_js_1 = require("./java/io/ByteArrayInputStream.js");
const ByteArrayOutputStream_js_1 = require("./java/io/ByteArrayOutputStream.js");
const ByteBuffer_js_1 = require("./java/nio/ByteBuffer.js");
const ByteChannel_js_1 = require("./java/nio/channels/ByteChannel.js");
const ByteOrder_js_1 = require("./java/nio/ByteOrder.js");
const ByteProcessor_js_1 = require("./com/google/common/io/ByteProcessor.js");
const ByteStreams_js_1 = require("./com/google/common/io/ByteStreams.js");
const CachedServerIcon_js_1 = require("./org/bukkit/util/CachedServerIcon.js");
const Cake_js_1 = require("./org/bukkit/material/Cake.js");
const Cake_js_2 = require("./org/bukkit/block/data/type/Cake.js");
const CallableStatement_js_1 = require("./java/sql/CallableStatement.js");
const Campfire_js_1 = require("./org/bukkit/block/Campfire.js");
const Campfire_js_2 = require("./org/bukkit/block/data/type/Campfire.js");
const CampfireRecipe_js_1 = require("./org/bukkit/inventory/CampfireRecipe.js");
const Cancellable_js_1 = require("./org/bukkit/event/Cancellable.js");
const CartographyInventory_js_1 = require("./org/bukkit/inventory/CartographyInventory.js");
const CaseInsensitiveMap_js_1 = require("./khttp/structures/maps/CaseInsensitiveMap.js");
const Cat_js_1 = require("./org/bukkit/entity/Cat.js");
const Cat_Type_js_1 = require("./org/bukkit/entity/Cat$Type.js");
const Cauldron_js_1 = require("./org/bukkit/material/Cauldron.js");
const CauldronLevelChangeEvent_js_1 = require("./org/bukkit/event/block/CauldronLevelChangeEvent.js");
const CauldronLevelChangeEvent_ChangeReason_js_1 = require("./org/bukkit/event/block/CauldronLevelChangeEvent$ChangeReason.js");
const CaveSpider_js_1 = require("./org/bukkit/entity/CaveSpider.js");
const Channel_js_1 = require("./java/nio/channels/Channel.js");
const ChannelNameTooLongException_js_1 = require("./org/bukkit/plugin/messaging/ChannelNameTooLongException.js");
const ChannelNotRegisteredException_js_1 = require("./org/bukkit/plugin/messaging/ChannelNotRegisteredException.js");
const CharBuffer_js_1 = require("./java/nio/CharBuffer.js");
const Charset_js_1 = require("./java/nio/charset/Charset.js");
const CharsetDecoder_js_1 = require("./java/nio/charset/CharsetDecoder.js");
const CharsetEncoder_js_1 = require("./java/nio/charset/CharsetEncoder.js");
const ChatColor_js_1 = require("./net/md_5/bungee/api/ChatColor.js");
const ChatColor_js_2 = require("./org/bukkit/ChatColor.js");
const ChatMessageType_js_1 = require("./net/md_5/bungee/api/ChatMessageType.js");
const ChatPaginator_js_1 = require("./org/bukkit/util/ChatPaginator.js");
const ChatPaginator_ChatPage_js_1 = require("./org/bukkit/util/ChatPaginator$ChatPage.js");
const Chest_js_1 = require("./org/bukkit/material/Chest.js");
const Chest_js_2 = require("./org/bukkit/block/Chest.js");
const Chest_js_3 = require("./org/bukkit/block/data/type/Chest.js");
const Chest_Type_js_1 = require("./org/bukkit/block/data/type/Chest$Type.js");
const ChestedHorse_js_1 = require("./org/bukkit/entity/ChestedHorse.js");
const Chicken_js_1 = require("./org/bukkit/entity/Chicken.js");
const Chunk_js_1 = require("./org/bukkit/Chunk.js");
const ChunkEvent_js_1 = require("./org/bukkit/event/world/ChunkEvent.js");
const ChunkGenerator_js_1 = require("./org/bukkit/generator/ChunkGenerator.js");
const ChunkGenerator_BiomeGrid_js_1 = require("./org/bukkit/generator/ChunkGenerator$BiomeGrid.js");
const ChunkGenerator_ChunkData_js_1 = require("./org/bukkit/generator/ChunkGenerator$ChunkData.js");
const ChunkLoadEvent_js_1 = require("./org/bukkit/event/world/ChunkLoadEvent.js");
const ChunkPopulateEvent_js_1 = require("./org/bukkit/event/world/ChunkPopulateEvent.js");
const ChunkSnapshot_js_1 = require("./org/bukkit/ChunkSnapshot.js");
const ChunkUnloadEvent_js_1 = require("./org/bukkit/event/world/ChunkUnloadEvent.js");
const ClickEvent_js_1 = require("./net/md_5/bungee/api/chat/ClickEvent.js");
const ClickEvent_Action_js_1 = require("./net/md_5/bungee/api/chat/ClickEvent$Action.js");
const ClickType_js_1 = require("./org/bukkit/event/inventory/ClickType.js");
const ClickableItem_js_1 = require("./fr/minuskube/inv/ClickableItem.js");
const Clob_js_1 = require("./java/sql/Clob.js");
const Closeable_js_1 = require("./java/io/Closeable.js");
const Coal_js_1 = require("./org/bukkit/material/Coal.js");
const CoalType_js_1 = require("./org/bukkit/CoalType.js");
const Cocoa_js_1 = require("./org/bukkit/block/data/type/Cocoa.js");
const CocoaPlant_js_1 = require("./org/bukkit/material/CocoaPlant.js");
const CocoaPlant_CocoaPlantSize_js_1 = require("./org/bukkit/material/CocoaPlant$CocoaPlantSize.js");
const Cod_js_1 = require("./org/bukkit/entity/Cod.js");
const CoderResult_js_1 = require("./java/nio/charset/CoderResult.js");
const CodingErrorAction_js_1 = require("./java/nio/charset/CodingErrorAction.js");
const Color_js_1 = require("./org/bukkit/Color.js");
const Colorable_js_1 = require("./org/bukkit/material/Colorable.js");
const Command_js_1 = require("./org/bukkit/command/Command.js");
const Command_js_2 = require("./org/bukkit/material/Command.js");
const CommandBlock_js_1 = require("./org/bukkit/block/CommandBlock.js");
const CommandBlock_js_2 = require("./org/bukkit/block/data/type/CommandBlock.js");
const CommandCompletionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandCompletionContext.js");
const CommandCompletions_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandCompletions.js");
const CommandCompletions_AsyncCommandCompletionHandler_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandCompletions$AsyncCommandCompletionHandler.js");
const CommandCompletions_CommandCompletionHandler_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandCompletions$CommandCompletionHandler.js");
const CommandConditions_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandConditions.js");
const CommandConditions_Condition_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandConditions$Condition.js");
const CommandConditions_ParameterCondition_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandConditions$ParameterCondition.js");
const CommandContexts_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandContexts.js");
const CommandException_js_1 = require("./org/bukkit/command/CommandException.js");
const CommandExecutionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandExecutionContext.js");
const CommandExecutor_js_1 = require("./org/bukkit/command/CommandExecutor.js");
const CommandHelp_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandHelp.js");
const CommandHelpFormatter_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandHelpFormatter.js");
const CommandIssuer_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandIssuer.js");
const CommandManager_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandManager.js");
const CommandMap_js_1 = require("./org/bukkit/command/CommandMap.js");
const CommandMinecart_js_1 = require("./org/bukkit/entity/minecart/CommandMinecart.js");
const CommandOperationContext_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandOperationContext.js");
const CommandParameter_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandParameter.js");
const CommandPermissions_js_1 = require("./org/bukkit/util/permissions/CommandPermissions.js");
const CommandReplacements_js_1 = require("./com/pixlfox/scriptablemc/acf/CommandReplacements.js");
const CommandSender_js_1 = require("./org/bukkit/command/CommandSender.js");
const CommandSender_Spigot_js_1 = require("./org/bukkit/command/CommandSender$Spigot.js");
const Comparator_js_1 = require("./org/bukkit/material/Comparator.js");
const Comparator_js_2 = require("./org/bukkit/block/Comparator.js");
const Comparator_js_3 = require("./org/bukkit/block/data/type/Comparator.js");
const Comparator_Mode_js_1 = require("./org/bukkit/block/data/type/Comparator$Mode.js");
const CompletionHandler_js_1 = require("./java/nio/channels/CompletionHandler.js");
const ComplexEntityPart_js_1 = require("./org/bukkit/entity/ComplexEntityPart.js");
const ComplexLivingEntity_js_1 = require("./org/bukkit/entity/ComplexLivingEntity.js");
const ComplexRecipe_js_1 = require("./org/bukkit/inventory/ComplexRecipe.js");
const ComponentBuilder_js_1 = require("./net/md_5/bungee/api/chat/ComponentBuilder.js");
const ComponentBuilder_FormatRetention_js_1 = require("./net/md_5/bungee/api/chat/ComponentBuilder$FormatRetention.js");
const ComponentBuilder_Joiner_js_1 = require("./net/md_5/bungee/api/chat/ComponentBuilder$Joiner.js");
const ConditionContext_js_1 = require("./com/pixlfox/scriptablemc/acf/ConditionContext.js");
const Conduit_js_1 = require("./org/bukkit/block/Conduit.js");
const Configuration_js_1 = require("./org/bukkit/configuration/Configuration.js");
const ConfigurationOptions_js_1 = require("./org/bukkit/configuration/ConfigurationOptions.js");
const ConfigurationSection_js_1 = require("./org/bukkit/configuration/ConfigurationSection.js");
const ConfigurationSerializable_js_1 = require("./org/bukkit/configuration/serialization/ConfigurationSerializable.js");
const ConfigurationSerialization_js_1 = require("./org/bukkit/configuration/serialization/ConfigurationSerialization.js");
const Connection_js_1 = require("./java/sql/Connection.js");
const ConsoleCommandSender_js_1 = require("./org/bukkit/command/ConsoleCommandSender.js");
const Consumer_js_1 = require("./org/bukkit/util/Consumer.js");
const Container_js_1 = require("./org/bukkit/block/Container.js");
const Content_js_1 = require("./net/md_5/bungee/api/chat/hover/content/Content.js");
const ContextResolver_js_1 = require("./com/pixlfox/scriptablemc/acf/contexts/ContextResolver.js");
const Conversable_js_1 = require("./org/bukkit/conversations/Conversable.js");
const Conversation_js_1 = require("./org/bukkit/conversations/Conversation.js");
const Conversation_ConversationState_js_1 = require("./org/bukkit/conversations/Conversation$ConversationState.js");
const ConversationAbandonedEvent_js_1 = require("./org/bukkit/conversations/ConversationAbandonedEvent.js");
const ConversationAbandonedListener_js_1 = require("./org/bukkit/conversations/ConversationAbandonedListener.js");
const ConversationCanceller_js_1 = require("./org/bukkit/conversations/ConversationCanceller.js");
const ConversationContext_js_1 = require("./org/bukkit/conversations/ConversationContext.js");
const ConversationFactory_js_1 = require("./org/bukkit/conversations/ConversationFactory.js");
const ConversationPrefix_js_1 = require("./org/bukkit/conversations/ConversationPrefix.js");
const Cookie_js_1 = require("./khttp/structures/cookie/Cookie.js");
const CookieJar_js_1 = require("./khttp/structures/cookie/CookieJar.js");
const CookingRecipe_js_1 = require("./org/bukkit/inventory/CookingRecipe.js");
const CopyOption_js_1 = require("./java/nio/file/CopyOption.js");
const CoralWallFan_js_1 = require("./org/bukkit/block/data/type/CoralWallFan.js");
const Cow_js_1 = require("./org/bukkit/entity/Cow.js");
const CraftItemEvent_js_1 = require("./org/bukkit/event/inventory/CraftItemEvent.js");
const CraftingInventory_js_1 = require("./org/bukkit/inventory/CraftingInventory.js");
const Creature_js_1 = require("./org/bukkit/entity/Creature.js");
const CreatureSpawnEvent_js_1 = require("./org/bukkit/event/entity/CreatureSpawnEvent.js");
const CreatureSpawnEvent_SpawnReason_js_1 = require("./org/bukkit/event/entity/CreatureSpawnEvent$SpawnReason.js");
const CreatureSpawner_js_1 = require("./org/bukkit/block/CreatureSpawner.js");
const Creeper_js_1 = require("./org/bukkit/entity/Creeper.js");
const CreeperPowerEvent_js_1 = require("./org/bukkit/event/entity/CreeperPowerEvent.js");
const CreeperPowerEvent_PowerCause_js_1 = require("./org/bukkit/event/entity/CreeperPowerEvent$PowerCause.js");
const Criterias_js_1 = require("./org/bukkit/scoreboard/Criterias.js");
const CropState_js_1 = require("./org/bukkit/CropState.js");
const Crops_js_1 = require("./org/bukkit/material/Crops.js");
const CrossbowMeta_js_1 = require("./org/bukkit/inventory/meta/CrossbowMeta.js");
const CustomItemTagContainer_js_1 = require("./org/bukkit/inventory/meta/tags/CustomItemTagContainer.js");
const Damageable_js_1 = require("./org/bukkit/entity/Damageable.js");
const Damageable_js_2 = require("./org/bukkit/inventory/meta/Damageable.js");
const DataInput_js_1 = require("./java/io/DataInput.js");
const DataOutput_js_1 = require("./java/io/DataOutput.js");
const DatabaseMetaData_js_1 = require("./java/sql/DatabaseMetaData.js");
const Date_js_1 = require("./java/sql/Date.js");
const DaylightDetector_js_1 = require("./org/bukkit/block/data/type/DaylightDetector.js");
const DaylightDetector_js_2 = require("./org/bukkit/block/DaylightDetector.js");
const DefaultPermissions_js_1 = require("./org/bukkit/util/permissions/DefaultPermissions.js");
const DelegateDeserialization_js_1 = require("./org/bukkit/configuration/serialization/DelegateDeserialization.js");
const DetectorRail_js_1 = require("./org/bukkit/material/DetectorRail.js");
const Difficulty_js_1 = require("./org/bukkit/Difficulty.js");
const Diode_js_1 = require("./org/bukkit/material/Diode.js");
const Directional_js_1 = require("./org/bukkit/material/Directional.js");
const Directional_js_2 = require("./org/bukkit/block/data/Directional.js");
const DirectionalContainer_js_1 = require("./org/bukkit/material/DirectionalContainer.js");
const DirectoryStream_js_1 = require("./java/nio/file/DirectoryStream.js");
const DirectoryStream_Filter_js_1 = require("./java/nio/file/DirectoryStream$Filter.js");
const Dispenser_js_1 = require("./org/bukkit/material/Dispenser.js");
const Dispenser_js_2 = require("./org/bukkit/block/data/type/Dispenser.js");
const Dispenser_js_3 = require("./org/bukkit/block/Dispenser.js");
const DisplaySlot_js_1 = require("./org/bukkit/scoreboard/DisplaySlot.js");
const Dolphin_js_1 = require("./org/bukkit/entity/Dolphin.js");
const Donkey_js_1 = require("./org/bukkit/entity/Donkey.js");
const Door_js_1 = require("./org/bukkit/material/Door.js");
const Door_js_2 = require("./org/bukkit/block/data/type/Door.js");
const Door_Hinge_js_1 = require("./org/bukkit/block/data/type/Door$Hinge.js");
const DoubleBuffer_js_1 = require("./java/nio/DoubleBuffer.js");
const DoubleChest_js_1 = require("./org/bukkit/block/DoubleChest.js");
const DoubleChestInventory_js_1 = require("./org/bukkit/inventory/DoubleChestInventory.js");
const DragType_js_1 = require("./org/bukkit/event/inventory/DragType.js");
const DragonBattle_js_1 = require("./org/bukkit/boss/DragonBattle.js");
const DragonBattle_RespawnPhase_js_1 = require("./org/bukkit/boss/DragonBattle$RespawnPhase.js");
const DragonFireball_js_1 = require("./org/bukkit/entity/DragonFireball.js");
const Dropper_js_1 = require("./org/bukkit/block/Dropper.js");
const Drowned_js_1 = require("./org/bukkit/entity/Drowned.js");
const Dye_js_1 = require("./org/bukkit/material/Dye.js");
const DyeColor_js_1 = require("./org/bukkit/DyeColor.js");
const Effect_js_1 = require("./org/bukkit/Effect.js");
const Effect_Type_js_1 = require("./org/bukkit/Effect$Type.js");
const Egg_js_1 = require("./org/bukkit/entity/Egg.js");
const ElderGuardian_js_1 = require("./org/bukkit/entity/ElderGuardian.js");
const EnchantItemEvent_js_1 = require("./org/bukkit/event/enchantment/EnchantItemEvent.js");
const EnchantingInventory_js_1 = require("./org/bukkit/inventory/EnchantingInventory.js");
const EnchantingTable_js_1 = require("./org/bukkit/block/EnchantingTable.js");
const Enchantment_js_1 = require("./org/bukkit/enchantments/Enchantment.js");
const EnchantmentOffer_js_1 = require("./org/bukkit/enchantments/EnchantmentOffer.js");
const EnchantmentStorageMeta_js_1 = require("./org/bukkit/inventory/meta/EnchantmentStorageMeta.js");
const EnchantmentTarget_js_1 = require("./org/bukkit/enchantments/EnchantmentTarget.js");
const EnchantmentWrapper_js_1 = require("./org/bukkit/enchantments/EnchantmentWrapper.js");
const EndGateway_js_1 = require("./org/bukkit/block/EndGateway.js");
const EndPortalFrame_js_1 = require("./org/bukkit/block/data/type/EndPortalFrame.js");
const EnderChest_js_1 = require("./org/bukkit/material/EnderChest.js");
const EnderChest_js_2 = require("./org/bukkit/block/data/type/EnderChest.js");
const EnderChest_js_3 = require("./org/bukkit/block/EnderChest.js");
const EnderCrystal_js_1 = require("./org/bukkit/entity/EnderCrystal.js");
const EnderDragon_js_1 = require("./org/bukkit/entity/EnderDragon.js");
const EnderDragon_Phase_js_1 = require("./org/bukkit/entity/EnderDragon$Phase.js");
const EnderDragonChangePhaseEvent_js_1 = require("./org/bukkit/event/entity/EnderDragonChangePhaseEvent.js");
const EnderDragonPart_js_1 = require("./org/bukkit/entity/EnderDragonPart.js");
const EnderPearl_js_1 = require("./org/bukkit/entity/EnderPearl.js");
const EnderSignal_js_1 = require("./org/bukkit/entity/EnderSignal.js");
const Enderman_js_1 = require("./org/bukkit/entity/Enderman.js");
const Endermite_js_1 = require("./org/bukkit/entity/Endermite.js");
const Entity_js_1 = require("./org/bukkit/entity/Entity.js");
const Entity_Spigot_js_1 = require("./org/bukkit/entity/Entity$Spigot.js");
const EntityAirChangeEvent_js_1 = require("./org/bukkit/event/entity/EntityAirChangeEvent.js");
const EntityBlockFormEvent_js_1 = require("./org/bukkit/event/block/EntityBlockFormEvent.js");
const EntityBlockStorage_js_1 = require("./org/bukkit/block/EntityBlockStorage.js");
const EntityBreakDoorEvent_js_1 = require("./org/bukkit/event/entity/EntityBreakDoorEvent.js");
const EntityBreedEvent_js_1 = require("./org/bukkit/event/entity/EntityBreedEvent.js");
const EntityCategory_js_1 = require("./org/bukkit/entity/EntityCategory.js");
const EntityChangeBlockEvent_js_1 = require("./org/bukkit/event/entity/EntityChangeBlockEvent.js");
const EntityCombustByBlockEvent_js_1 = require("./org/bukkit/event/entity/EntityCombustByBlockEvent.js");
const EntityCombustByEntityEvent_js_1 = require("./org/bukkit/event/entity/EntityCombustByEntityEvent.js");
const EntityCombustEvent_js_1 = require("./org/bukkit/event/entity/EntityCombustEvent.js");
const EntityCreatePortalEvent_js_1 = require("./org/bukkit/event/entity/EntityCreatePortalEvent.js");
const EntityDamageByBlockEvent_js_1 = require("./org/bukkit/event/entity/EntityDamageByBlockEvent.js");
const EntityDamageByEntityEvent_js_1 = require("./org/bukkit/event/entity/EntityDamageByEntityEvent.js");
const EntityDamageEvent_js_1 = require("./org/bukkit/event/entity/EntityDamageEvent.js");
const EntityDamageEvent_DamageCause_js_1 = require("./org/bukkit/event/entity/EntityDamageEvent$DamageCause.js");
const EntityDamageEvent_DamageModifier_js_1 = require("./org/bukkit/event/entity/EntityDamageEvent$DamageModifier.js");
const EntityDeathEvent_js_1 = require("./org/bukkit/event/entity/EntityDeathEvent.js");
const EntityDropItemEvent_js_1 = require("./org/bukkit/event/entity/EntityDropItemEvent.js");
const EntityEffect_js_1 = require("./org/bukkit/EntityEffect.js");
const EntityEnterBlockEvent_js_1 = require("./org/bukkit/event/entity/EntityEnterBlockEvent.js");
const EntityEquipment_js_1 = require("./org/bukkit/inventory/EntityEquipment.js");
const EntityEvent_js_1 = require("./org/bukkit/event/entity/EntityEvent.js");
const EntityExplodeEvent_js_1 = require("./org/bukkit/event/entity/EntityExplodeEvent.js");
const EntityInteractEvent_js_1 = require("./org/bukkit/event/entity/EntityInteractEvent.js");
const EntityPickupItemEvent_js_1 = require("./org/bukkit/event/entity/EntityPickupItemEvent.js");
const EntityPlaceEvent_js_1 = require("./org/bukkit/event/entity/EntityPlaceEvent.js");
const EntityPortalEnterEvent_js_1 = require("./org/bukkit/event/entity/EntityPortalEnterEvent.js");
const EntityPortalEvent_js_1 = require("./org/bukkit/event/entity/EntityPortalEvent.js");
const EntityPortalExitEvent_js_1 = require("./org/bukkit/event/entity/EntityPortalExitEvent.js");
const EntityPoseChangeEvent_js_1 = require("./org/bukkit/event/entity/EntityPoseChangeEvent.js");
const EntityPotionEffectEvent_js_1 = require("./org/bukkit/event/entity/EntityPotionEffectEvent.js");
const EntityPotionEffectEvent_Action_js_1 = require("./org/bukkit/event/entity/EntityPotionEffectEvent$Action.js");
const EntityPotionEffectEvent_Cause_js_1 = require("./org/bukkit/event/entity/EntityPotionEffectEvent$Cause.js");
const EntityRegainHealthEvent_js_1 = require("./org/bukkit/event/entity/EntityRegainHealthEvent.js");
const EntityRegainHealthEvent_RegainReason_js_1 = require("./org/bukkit/event/entity/EntityRegainHealthEvent$RegainReason.js");
const EntityResurrectEvent_js_1 = require("./org/bukkit/event/entity/EntityResurrectEvent.js");
const EntityShootBowEvent_js_1 = require("./org/bukkit/event/entity/EntityShootBowEvent.js");
const EntitySpawnEvent_js_1 = require("./org/bukkit/event/entity/EntitySpawnEvent.js");
const EntityTameEvent_js_1 = require("./org/bukkit/event/entity/EntityTameEvent.js");
const EntityTargetEvent_js_1 = require("./org/bukkit/event/entity/EntityTargetEvent.js");
const EntityTargetEvent_TargetReason_js_1 = require("./org/bukkit/event/entity/EntityTargetEvent$TargetReason.js");
const EntityTargetLivingEntityEvent_js_1 = require("./org/bukkit/event/entity/EntityTargetLivingEntityEvent.js");
const EntityTeleportEvent_js_1 = require("./org/bukkit/event/entity/EntityTeleportEvent.js");
const EntityToggleGlideEvent_js_1 = require("./org/bukkit/event/entity/EntityToggleGlideEvent.js");
const EntityToggleSwimEvent_js_1 = require("./org/bukkit/event/entity/EntityToggleSwimEvent.js");
const EntityTransformEvent_js_1 = require("./org/bukkit/event/entity/EntityTransformEvent.js");
const EntityTransformEvent_TransformReason_js_1 = require("./org/bukkit/event/entity/EntityTransformEvent$TransformReason.js");
const EntityType_js_1 = require("./org/bukkit/entity/EntityType.js");
const EntityUnleashEvent_js_1 = require("./org/bukkit/event/entity/EntityUnleashEvent.js");
const EntityUnleashEvent_UnleashReason_js_1 = require("./org/bukkit/event/entity/EntityUnleashEvent$UnleashReason.js");
const EquipmentSlot_js_1 = require("./org/bukkit/inventory/EquipmentSlot.js");
const EulerAngle_js_1 = require("./org/bukkit/util/EulerAngle.js");
const Event_js_1 = require("./org/bukkit/event/Event.js");
const Event_Result_js_1 = require("./org/bukkit/event/Event$Result.js");
const EventException_js_1 = require("./org/bukkit/event/EventException.js");
const EventExecutor_js_1 = require("./org/bukkit/plugin/EventExecutor.js");
const EventHandler_js_1 = require("./org/bukkit/event/EventHandler.js");
const EventPriority_js_1 = require("./org/bukkit/event/EventPriority.js");
const Evoker_js_1 = require("./org/bukkit/entity/Evoker.js");
const Evoker_Spell_js_1 = require("./org/bukkit/entity/Evoker$Spell.js");
const EvokerFangs_js_1 = require("./org/bukkit/entity/EvokerFangs.js");
const ExactMatchConversationCanceller_js_1 = require("./org/bukkit/conversations/ExactMatchConversationCanceller.js");
const ExceptionHandler_js_1 = require("./com/pixlfox/scriptablemc/acf/ExceptionHandler.js");
const ExpBottleEvent_js_1 = require("./org/bukkit/event/entity/ExpBottleEvent.js");
const ExperienceOrb_js_1 = require("./org/bukkit/entity/ExperienceOrb.js");
const ExplosionPrimeEvent_js_1 = require("./org/bukkit/event/entity/ExplosionPrimeEvent.js");
const Explosive_js_1 = require("./org/bukkit/entity/Explosive.js");
const ExplosiveMinecart_js_1 = require("./org/bukkit/entity/minecart/ExplosiveMinecart.js");
const ExtendedRails_js_1 = require("./org/bukkit/material/ExtendedRails.js");
const FaceAttachable_js_1 = require("./org/bukkit/block/data/FaceAttachable.js");
const FaceAttachable_AttachedFace_js_1 = require("./org/bukkit/block/data/FaceAttachable$AttachedFace.js");
const FallingBlock_js_1 = require("./org/bukkit/entity/FallingBlock.js");
const Farmland_js_1 = require("./org/bukkit/block/data/type/Farmland.js");
const Fence_js_1 = require("./org/bukkit/block/data/type/Fence.js");
const File_js_1 = require("./java/io/File.js");
const FileAttribute_js_1 = require("./java/nio/file/attribute/FileAttribute.js");
const FileAttributeView_js_1 = require("./java/nio/file/attribute/FileAttributeView.js");
const FileChannel_js_1 = require("./java/nio/channels/FileChannel.js");
const FileChannel_MapMode_js_1 = require("./java/nio/channels/FileChannel$MapMode.js");
const FileConfiguration_js_1 = require("./org/bukkit/configuration/file/FileConfiguration.js");
const FileConfigurationOptions_js_1 = require("./org/bukkit/configuration/file/FileConfigurationOptions.js");
const FileDescriptor_js_1 = require("./java/io/FileDescriptor.js");
const FileFilter_js_1 = require("./java/io/FileFilter.js");
const FileInputStream_js_1 = require("./java/io/FileInputStream.js");
const FileLike_js_1 = require("./khttp/structures/files/FileLike.js");
const FileLock_js_1 = require("./java/nio/channels/FileLock.js");
const FileOutputStream_js_1 = require("./java/io/FileOutputStream.js");
const FileStore_js_1 = require("./java/nio/file/FileStore.js");
const FileStoreAttributeView_js_1 = require("./java/nio/file/attribute/FileStoreAttributeView.js");
const FileSystem_js_1 = require("./java/nio/file/FileSystem.js");
const FileSystemProvider_js_1 = require("./java/nio/file/spi/FileSystemProvider.js");
const FileTime_js_1 = require("./java/nio/file/attribute/FileTime.js");
const FileUtil_js_1 = require("./org/bukkit/util/FileUtil.js");
const FileUtils_js_1 = require("./org/apache/commons/io/FileUtils.js");
const FilenameFilter_js_1 = require("./java/io/FilenameFilter.js");
const FilterOutputStream_js_1 = require("./java/io/FilterOutputStream.js");
const Fire_js_1 = require("./org/bukkit/block/data/type/Fire.js");
const Fireball_js_1 = require("./org/bukkit/entity/Fireball.js");
const Firework_js_1 = require("./org/bukkit/entity/Firework.js");
const FireworkEffect_js_1 = require("./org/bukkit/FireworkEffect.js");
const FireworkEffect_Builder_js_1 = require("./org/bukkit/FireworkEffect$Builder.js");
const FireworkEffect_Type_js_1 = require("./org/bukkit/FireworkEffect$Type.js");
const FireworkEffectMeta_js_1 = require("./org/bukkit/inventory/meta/FireworkEffectMeta.js");
const FireworkExplodeEvent_js_1 = require("./org/bukkit/event/entity/FireworkExplodeEvent.js");
const FireworkMeta_js_1 = require("./org/bukkit/inventory/meta/FireworkMeta.js");
const Fish_js_1 = require("./org/bukkit/entity/Fish.js");
const FishHook_js_1 = require("./org/bukkit/entity/FishHook.js");
const FishHook_HookState_js_1 = require("./org/bukkit/entity/FishHook$HookState.js");
const FixedMetadataValue_js_1 = require("./org/bukkit/metadata/FixedMetadataValue.js");
const FixedSetPrompt_js_1 = require("./org/bukkit/conversations/FixedSetPrompt.js");
const FloatBuffer_js_1 = require("./java/nio/FloatBuffer.js");
const FlowerPot_js_1 = require("./org/bukkit/material/FlowerPot.js");
const FluidCollisionMode_js_1 = require("./org/bukkit/FluidCollisionMode.js");
const FluidLevelChangeEvent_js_1 = require("./org/bukkit/event/block/FluidLevelChangeEvent.js");
const Flushable_js_1 = require("./java/io/Flushable.js");
const Flying_js_1 = require("./org/bukkit/entity/Flying.js");
const FoodLevelChangeEvent_js_1 = require("./org/bukkit/event/entity/FoodLevelChangeEvent.js");
const FormattedCommandAlias_js_1 = require("./org/bukkit/command/FormattedCommandAlias.js");
const Fox_js_1 = require("./org/bukkit/entity/Fox.js");
const Fox_Type_js_1 = require("./org/bukkit/entity/Fox$Type.js");
const Furnace_js_1 = require("./org/bukkit/block/Furnace.js");
const Furnace_js_2 = require("./org/bukkit/material/Furnace.js");
const Furnace_js_3 = require("./org/bukkit/block/data/type/Furnace.js");
const FurnaceAndDispenser_js_1 = require("./org/bukkit/material/FurnaceAndDispenser.js");
const FurnaceBurnEvent_js_1 = require("./org/bukkit/event/inventory/FurnaceBurnEvent.js");
const FurnaceExtractEvent_js_1 = require("./org/bukkit/event/inventory/FurnaceExtractEvent.js");
const FurnaceInventory_js_1 = require("./org/bukkit/inventory/FurnaceInventory.js");
const FurnaceRecipe_js_1 = require("./org/bukkit/inventory/FurnaceRecipe.js");
const FurnaceSmeltEvent_js_1 = require("./org/bukkit/event/inventory/FurnaceSmeltEvent.js");
const GameMode_js_1 = require("./org/bukkit/GameMode.js");
const GameRule_js_1 = require("./org/bukkit/GameRule.js");
const Gate_js_1 = require("./org/bukkit/material/Gate.js");
const Gate_js_2 = require("./org/bukkit/block/data/type/Gate.js");
const GatheringByteChannel_js_1 = require("./java/nio/channels/GatheringByteChannel.js");
const GenericCommandHelpTopic_js_1 = require("./org/bukkit/help/GenericCommandHelpTopic.js");
const GenericRequest_js_1 = require("./khttp/requests/GenericRequest.js");
const GenericResponse_js_1 = require("./khttp/responses/GenericResponse.js");
const Ghast_js_1 = require("./org/bukkit/entity/Ghast.js");
const Giant_js_1 = require("./org/bukkit/entity/Giant.js");
const GlassPane_js_1 = require("./org/bukkit/block/data/type/GlassPane.js");
const Golem_js_1 = require("./org/bukkit/entity/Golem.js");
const GrassSpecies_js_1 = require("./org/bukkit/GrassSpecies.js");
const GrindstoneInventory_js_1 = require("./org/bukkit/inventory/GrindstoneInventory.js");
const GroupPrincipal_js_1 = require("./java/nio/file/attribute/GroupPrincipal.js");
const Guardian_js_1 = require("./org/bukkit/entity/Guardian.js");
const HandlerList_js_1 = require("./org/bukkit/event/HandlerList.js");
const Hanging_js_1 = require("./org/bukkit/entity/Hanging.js");
const HangingBreakByEntityEvent_js_1 = require("./org/bukkit/event/hanging/HangingBreakByEntityEvent.js");
const HangingBreakEvent_js_1 = require("./org/bukkit/event/hanging/HangingBreakEvent.js");
const HangingBreakEvent_RemoveCause_js_1 = require("./org/bukkit/event/hanging/HangingBreakEvent$RemoveCause.js");
const HangingEvent_js_1 = require("./org/bukkit/event/hanging/HangingEvent.js");
const HangingPlaceEvent_js_1 = require("./org/bukkit/event/hanging/HangingPlaceEvent.js");
const HeightMap_js_1 = require("./org/bukkit/HeightMap.js");
const HelpCommand_js_1 = require("./org/bukkit/command/defaults/HelpCommand.js");
const HelpEntry_js_1 = require("./com/pixlfox/scriptablemc/acf/HelpEntry.js");
const HelpMap_js_1 = require("./org/bukkit/help/HelpMap.js");
const HelpTopic_js_1 = require("./org/bukkit/help/HelpTopic.js");
const HelpTopicComparator_js_1 = require("./org/bukkit/help/HelpTopicComparator.js");
const HelpTopicComparator_TopicNameComparator_js_1 = require("./org/bukkit/help/HelpTopicComparator$TopicNameComparator.js");
const HelpTopicFactory_js_1 = require("./org/bukkit/help/HelpTopicFactory.js");
const Hopper_js_1 = require("./org/bukkit/material/Hopper.js");
const Hopper_js_2 = require("./org/bukkit/block/data/type/Hopper.js");
const Hopper_js_3 = require("./org/bukkit/block/Hopper.js");
const HopperMinecart_js_1 = require("./org/bukkit/entity/minecart/HopperMinecart.js");
const Horse_js_1 = require("./org/bukkit/entity/Horse.js");
const Horse_Color_js_1 = require("./org/bukkit/entity/Horse$Color.js");
const Horse_Style_js_1 = require("./org/bukkit/entity/Horse$Style.js");
const Horse_Variant_js_1 = require("./org/bukkit/entity/Horse$Variant.js");
const HorseInventory_js_1 = require("./org/bukkit/inventory/HorseInventory.js");
const HorseJumpEvent_js_1 = require("./org/bukkit/event/entity/HorseJumpEvent.js");
const HoverEvent_js_1 = require("./net/md_5/bungee/api/chat/HoverEvent.js");
const HoverEvent_Action_js_1 = require("./net/md_5/bungee/api/chat/HoverEvent$Action.js");
const Http_js_1 = require("./com/smc/utils/Http.js");
const HumanEntity_js_1 = require("./org/bukkit/entity/HumanEntity.js");
const Husk_js_1 = require("./org/bukkit/entity/Husk.js");
const IOFileFilter_js_1 = require("./org/apache/commons/io/filefilter/IOFileFilter.js");
const Illager_js_1 = require("./org/bukkit/entity/Illager.js");
const IllegalPluginAccessException_js_1 = require("./org/bukkit/plugin/IllegalPluginAccessException.js");
const Illusioner_js_1 = require("./org/bukkit/entity/Illusioner.js");
const InactivityConversationCanceller_js_1 = require("./org/bukkit/conversations/InactivityConversationCanceller.js");
const IndexHelpTopic_js_1 = require("./org/bukkit/help/IndexHelpTopic.js");
const InputStream_js_1 = require("./java/io/InputStream.js");
const Instrument_js_1 = require("./org/bukkit/Instrument.js");
const IntBuffer_js_1 = require("./java/nio/IntBuffer.js");
const InterruptibleChannel_js_1 = require("./java/nio/channels/InterruptibleChannel.js");
const InvalidConfigurationException_js_1 = require("./org/bukkit/configuration/InvalidConfigurationException.js");
const InvalidDescriptionException_js_1 = require("./org/bukkit/plugin/InvalidDescriptionException.js");
const InvalidPluginException_js_1 = require("./org/bukkit/plugin/InvalidPluginException.js");
const Inventory_js_1 = require("./org/bukkit/inventory/Inventory.js");
const InventoryAction_js_1 = require("./org/bukkit/event/inventory/InventoryAction.js");
const InventoryClickEvent_js_1 = require("./org/bukkit/event/inventory/InventoryClickEvent.js");
const InventoryCloseEvent_js_1 = require("./org/bukkit/event/inventory/InventoryCloseEvent.js");
const InventoryContents_js_1 = require("./fr/minuskube/inv/content/InventoryContents.js");
const InventoryCreativeEvent_js_1 = require("./org/bukkit/event/inventory/InventoryCreativeEvent.js");
const InventoryDragEvent_js_1 = require("./org/bukkit/event/inventory/InventoryDragEvent.js");
const InventoryEvent_js_1 = require("./org/bukkit/event/inventory/InventoryEvent.js");
const InventoryHolder_js_1 = require("./org/bukkit/inventory/InventoryHolder.js");
const InventoryInteractEvent_js_1 = require("./org/bukkit/event/inventory/InventoryInteractEvent.js");
const InventoryListener_js_1 = require("./fr/minuskube/inv/InventoryListener.js");
const InventoryManager_js_1 = require("./fr/minuskube/inv/InventoryManager.js");
const InventoryMoveItemEvent_js_1 = require("./org/bukkit/event/inventory/InventoryMoveItemEvent.js");
const InventoryOpenEvent_js_1 = require("./org/bukkit/event/inventory/InventoryOpenEvent.js");
const InventoryOpener_js_1 = require("./fr/minuskube/inv/opener/InventoryOpener.js");
const InventoryPickupItemEvent_js_1 = require("./org/bukkit/event/inventory/InventoryPickupItemEvent.js");
const InventoryProvider_js_1 = require("./fr/minuskube/inv/content/InventoryProvider.js");
const InventoryType_js_1 = require("./org/bukkit/event/inventory/InventoryType.js");
const InventoryType_SlotType_js_1 = require("./org/bukkit/event/inventory/InventoryType$SlotType.js");
const InventoryView_js_1 = require("./org/bukkit/inventory/InventoryView.js");
const InventoryView_Property_js_1 = require("./org/bukkit/inventory/InventoryView$Property.js");
const IronGolem_js_1 = require("./org/bukkit/entity/IronGolem.js");
const IssuerAwareContextResolver_js_1 = require("./com/pixlfox/scriptablemc/acf/contexts/IssuerAwareContextResolver.js");
const IssuerLocaleChangedCallback_js_1 = require("./com/pixlfox/scriptablemc/acf/IssuerLocaleChangedCallback.js");
const IssuerOnlyContextResolver_js_1 = require("./com/pixlfox/scriptablemc/acf/contexts/IssuerOnlyContextResolver.js");
const Item_js_1 = require("./org/bukkit/entity/Item.js");
const ItemBuilder_js_1 = require("./com/smc/utils/ItemBuilder.js");
const ItemDespawnEvent_js_1 = require("./org/bukkit/event/entity/ItemDespawnEvent.js");
const ItemFactory_js_1 = require("./org/bukkit/inventory/ItemFactory.js");
const ItemFlag_js_1 = require("./org/bukkit/inventory/ItemFlag.js");
const ItemFrame_js_1 = require("./org/bukkit/entity/ItemFrame.js");
const ItemMergeEvent_js_1 = require("./org/bukkit/event/entity/ItemMergeEvent.js");
const ItemMeta_js_1 = require("./org/bukkit/inventory/meta/ItemMeta.js");
const ItemSpawnEvent_js_1 = require("./org/bukkit/event/entity/ItemSpawnEvent.js");
const ItemStack_js_1 = require("./org/bukkit/inventory/ItemStack.js");
const ItemTagAdapterContext_js_1 = require("./org/bukkit/inventory/meta/tags/ItemTagAdapterContext.js");
const ItemTagType_js_1 = require("./org/bukkit/inventory/meta/tags/ItemTagType.js");
const JavaPlugin_js_1 = require("./org/bukkit/plugin/java/JavaPlugin.js");
const JavaPluginLoader_js_1 = require("./org/bukkit/plugin/java/JavaPluginLoader.js");
const Jigsaw_js_1 = require("./org/bukkit/block/Jigsaw.js");
const Jukebox_js_1 = require("./org/bukkit/block/data/type/Jukebox.js");
const Jukebox_js_2 = require("./org/bukkit/block/Jukebox.js");
const KeybindComponent_js_1 = require("./net/md_5/bungee/api/chat/KeybindComponent.js");
const Keybinds_js_1 = require("./net/md_5/bungee/api/chat/Keybinds.js");
const Keyed_js_1 = require("./org/bukkit/Keyed.js");
const KeyedBossBar_js_1 = require("./org/bukkit/boss/KeyedBossBar.js");
const KnowledgeBookMeta_js_1 = require("./org/bukkit/inventory/meta/KnowledgeBookMeta.js");
const Ladder_js_1 = require("./org/bukkit/material/Ladder.js");
const Ladder_js_2 = require("./org/bukkit/block/data/type/Ladder.js");
const Lantern_js_1 = require("./org/bukkit/block/data/type/Lantern.js");
const LargeFireball_js_1 = require("./org/bukkit/entity/LargeFireball.js");
const LazyMetadataValue_js_1 = require("./org/bukkit/metadata/LazyMetadataValue.js");
const LazyMetadataValue_CacheStrategy_js_1 = require("./org/bukkit/metadata/LazyMetadataValue$CacheStrategy.js");
const LeashHitch_js_1 = require("./org/bukkit/entity/LeashHitch.js");
const LeatherArmorMeta_js_1 = require("./org/bukkit/inventory/meta/LeatherArmorMeta.js");
const Leaves_js_1 = require("./org/bukkit/material/Leaves.js");
const Leaves_js_2 = require("./org/bukkit/block/data/type/Leaves.js");
const LeavesDecayEvent_js_1 = require("./org/bukkit/event/block/LeavesDecayEvent.js");
const Lectern_js_1 = require("./org/bukkit/block/data/type/Lectern.js");
const Lectern_js_2 = require("./org/bukkit/block/Lectern.js");
const LecternInventory_js_1 = require("./org/bukkit/inventory/LecternInventory.js");
const Levelled_js_1 = require("./org/bukkit/block/data/Levelled.js");
const Lever_js_1 = require("./org/bukkit/material/Lever.js");
const Lidded_js_1 = require("./org/bukkit/block/Lidded.js");
const Lightable_js_1 = require("./org/bukkit/block/data/Lightable.js");
const LightningStrike_js_1 = require("./org/bukkit/entity/LightningStrike.js");
const LightningStrike_Spigot_js_1 = require("./org/bukkit/entity/LightningStrike$Spigot.js");
const LightningStrikeEvent_js_1 = require("./org/bukkit/event/weather/LightningStrikeEvent.js");
const LightningStrikeEvent_Cause_js_1 = require("./org/bukkit/event/weather/LightningStrikeEvent$Cause.js");
const LineIterator_js_1 = require("./org/apache/commons/io/LineIterator.js");
const LingeringPotion_js_1 = require("./org/bukkit/entity/LingeringPotion.js");
const LingeringPotionSplashEvent_js_1 = require("./org/bukkit/event/entity/LingeringPotionSplashEvent.js");
const LinkOption_js_1 = require("./java/nio/file/LinkOption.js");
const Listener_js_1 = require("./org/bukkit/event/Listener.js");
const LivingEntity_js_1 = require("./org/bukkit/entity/LivingEntity.js");
const Llama_js_1 = require("./org/bukkit/entity/Llama.js");
const Llama_Color_js_1 = require("./org/bukkit/entity/Llama$Color.js");
const LlamaInventory_js_1 = require("./org/bukkit/inventory/LlamaInventory.js");
const LlamaSpit_js_1 = require("./org/bukkit/entity/LlamaSpit.js");
const Locales_js_1 = require("./com/pixlfox/scriptablemc/acf/Locales.js");
const Location_js_1 = require("./org/bukkit/Location.js");
const Lockable_js_1 = require("./org/bukkit/block/Lockable.js");
const LogLevel_js_1 = require("./com/pixlfox/scriptablemc/acf/LogLevel.js");
const LongBuffer_js_1 = require("./java/nio/LongBuffer.js");
const LongGrass_js_1 = require("./org/bukkit/material/LongGrass.js");
const LoomInventory_js_1 = require("./org/bukkit/inventory/LoomInventory.js");
const LootContext_js_1 = require("./org/bukkit/loot/LootContext.js");
const LootTable_js_1 = require("./org/bukkit/loot/LootTable.js");
const LootTables_js_1 = require("./org/bukkit/loot/LootTables.js");
const Lootable_js_1 = require("./org/bukkit/loot/Lootable.js");
const MCTiming_js_1 = require("./com/pixlfox/scriptablemc/acf/lib/timings/MCTiming.js");
const MagmaCube_js_1 = require("./org/bukkit/entity/MagmaCube.js");
const MainHand_js_1 = require("./org/bukkit/inventory/MainHand.js");
const ManuallyAbandonedConversationCanceller_js_1 = require("./org/bukkit/conversations/ManuallyAbandonedConversationCanceller.js");
const MapCanvas_js_1 = require("./org/bukkit/map/MapCanvas.js");
const MapCursor_js_1 = require("./org/bukkit/map/MapCursor.js");
const MapCursor_Type_js_1 = require("./org/bukkit/map/MapCursor$Type.js");
const MapCursorCollection_js_1 = require("./org/bukkit/map/MapCursorCollection.js");
const MapFont_js_1 = require("./org/bukkit/map/MapFont.js");
const MapFont_CharacterSprite_js_1 = require("./org/bukkit/map/MapFont$CharacterSprite.js");
const MapInitializeEvent_js_1 = require("./org/bukkit/event/server/MapInitializeEvent.js");
const MapMeta_js_1 = require("./org/bukkit/inventory/meta/MapMeta.js");
const MapPalette_js_1 = require("./org/bukkit/map/MapPalette.js");
const MapRenderer_js_1 = require("./org/bukkit/map/MapRenderer.js");
const MapView_js_1 = require("./org/bukkit/map/MapView.js");
const MapView_Scale_js_1 = require("./org/bukkit/map/MapView$Scale.js");
const MappedByteBuffer_js_1 = require("./java/nio/MappedByteBuffer.js");
const Material_js_1 = require("./org/bukkit/Material.js");
const MaterialData_js_1 = require("./org/bukkit/material/MaterialData.js");
const MemoryConfiguration_js_1 = require("./org/bukkit/configuration/MemoryConfiguration.js");
const MemoryConfigurationOptions_js_1 = require("./org/bukkit/configuration/MemoryConfigurationOptions.js");
const MemoryKey_js_1 = require("./org/bukkit/entity/memory/MemoryKey.js");
const MemorySection_js_1 = require("./org/bukkit/configuration/MemorySection.js");
const Merchant_js_1 = require("./org/bukkit/inventory/Merchant.js");
const MerchantInventory_js_1 = require("./org/bukkit/inventory/MerchantInventory.js");
const MerchantRecipe_js_1 = require("./org/bukkit/inventory/MerchantRecipe.js");
const MessageFormatter_js_1 = require("./com/pixlfox/scriptablemc/acf/MessageFormatter.js");
const MessagePrompt_js_1 = require("./org/bukkit/conversations/MessagePrompt.js");
const MessageTooLargeException_js_1 = require("./org/bukkit/plugin/messaging/MessageTooLargeException.js");
const MessageType_js_1 = require("./com/pixlfox/scriptablemc/acf/MessageType.js");
const Messenger_js_1 = require("./org/bukkit/plugin/messaging/Messenger.js");
const MetadataConversionException_js_1 = require("./org/bukkit/metadata/MetadataConversionException.js");
const MetadataEvaluationException_js_1 = require("./org/bukkit/metadata/MetadataEvaluationException.js");
const MetadataStore_js_1 = require("./org/bukkit/metadata/MetadataStore.js");
const MetadataStoreBase_js_1 = require("./org/bukkit/metadata/MetadataStoreBase.js");
const MetadataValue_js_1 = require("./org/bukkit/metadata/MetadataValue.js");
const MetadataValueAdapter_js_1 = require("./org/bukkit/metadata/MetadataValueAdapter.js");
const Metadatable_js_1 = require("./org/bukkit/metadata/Metadatable.js");
const Minecart_js_1 = require("./org/bukkit/entity/Minecart.js");
const MinecraftFont_js_1 = require("./org/bukkit/map/MinecraftFont.js");
const MinecraftVersions_js_1 = require("./com/smc/version/MinecraftVersions.js");
const Mirror_js_1 = require("./org/bukkit/block/structure/Mirror.js");
const Mob_js_1 = require("./org/bukkit/entity/Mob.js");
const MoistureChangeEvent_js_1 = require("./org/bukkit/event/block/MoistureChangeEvent.js");
const Monster_js_1 = require("./org/bukkit/entity/Monster.js");
const MonsterEggs_js_1 = require("./org/bukkit/material/MonsterEggs.js");
const Mule_js_1 = require("./org/bukkit/entity/Mule.js");
const Multimap_js_1 = require("./com/google/common/collect/Multimap.js");
const MultipleCommandAlias_js_1 = require("./org/bukkit/command/MultipleCommandAlias.js");
const MultipleFacing_js_1 = require("./org/bukkit/block/data/MultipleFacing.js");
const Multiset_js_1 = require("./com/google/common/collect/Multiset.js");
const Mushroom_js_1 = require("./org/bukkit/material/Mushroom.js");
const MushroomBlockTexture_js_1 = require("./org/bukkit/material/types/MushroomBlockTexture.js");
const MushroomCow_js_1 = require("./org/bukkit/entity/MushroomCow.js");
const MushroomCow_Variant_js_1 = require("./org/bukkit/entity/MushroomCow$Variant.js");
const MysqlWrapper_js_1 = require("./com/smc/utils/MysqlWrapper.js");
const NBTCompound_js_1 = require("./com/smc/nbtapi/NBTCompound.js");
const NBTCompoundList_js_1 = require("./com/smc/nbtapi/NBTCompoundList.js");
const NBTContainer_js_1 = require("./com/smc/nbtapi/NBTContainer.js");
const NBTEntity_js_1 = require("./com/smc/nbtapi/NBTEntity.js");
const NBTFile_js_1 = require("./com/smc/nbtapi/NBTFile.js");
const NBTItem_js_1 = require("./com/smc/nbtapi/NBTItem.js");
const NBTList_js_1 = require("./com/smc/nbtapi/NBTList.js");
const NBTListCompound_js_1 = require("./com/smc/nbtapi/NBTListCompound.js");
const NBTType_js_1 = require("./com/smc/nbtapi/NBTType.js");
const NClob_js_1 = require("./java/sql/NClob.js");
const NPC_js_1 = require("./org/bukkit/entity/NPC.js");
const NameTagVisibility_js_1 = require("./org/bukkit/scoreboard/NameTagVisibility.js");
const Nameable_js_1 = require("./org/bukkit/Nameable.js");
const NamespacedKey_js_1 = require("./org/bukkit/NamespacedKey.js");
const NetherWarts_js_1 = require("./org/bukkit/material/NetherWarts.js");
const NetherWartsState_js_1 = require("./org/bukkit/NetherWartsState.js");
const NoiseGenerator_js_1 = require("./org/bukkit/util/noise/NoiseGenerator.js");
const Note_js_1 = require("./org/bukkit/Note.js");
const Note_Tone_js_1 = require("./org/bukkit/Note$Tone.js");
const NoteBlock_js_1 = require("./org/bukkit/block/data/type/NoteBlock.js");
const NotePlayEvent_js_1 = require("./org/bukkit/event/block/NotePlayEvent.js");
const NullConversationPrefix_js_1 = require("./org/bukkit/conversations/NullConversationPrefix.js");
const NumberConversions_js_1 = require("./org/bukkit/util/NumberConversions.js");
const NumericPrompt_js_1 = require("./org/bukkit/conversations/NumericPrompt.js");
const ObjectInput_js_1 = require("./java/io/ObjectInput.js");
const ObjectInputStream_js_1 = require("./java/io/ObjectInputStream.js");
const ObjectInputStream_GetField_js_1 = require("./java/io/ObjectInputStream$GetField.js");
const ObjectInputValidation_js_1 = require("./java/io/ObjectInputValidation.js");
const ObjectOutput_js_1 = require("./java/io/ObjectOutput.js");
const ObjectOutputStream_js_1 = require("./java/io/ObjectOutputStream.js");
const ObjectOutputStream_PutField_js_1 = require("./java/io/ObjectOutputStream$PutField.js");
const ObjectStreamClass_js_1 = require("./java/io/ObjectStreamClass.js");
const ObjectStreamConstants_js_1 = require("./java/io/ObjectStreamConstants.js");
const ObjectStreamField_js_1 = require("./java/io/ObjectStreamField.js");
const Objective_js_1 = require("./org/bukkit/scoreboard/Objective.js");
const Observer_js_1 = require("./org/bukkit/material/Observer.js");
const Observer_js_2 = require("./org/bukkit/block/data/type/Observer.js");
const Ocelot_js_1 = require("./org/bukkit/entity/Ocelot.js");
const Ocelot_Type_js_1 = require("./org/bukkit/entity/Ocelot$Type.js");
const OctaveGenerator_js_1 = require("./org/bukkit/util/noise/OctaveGenerator.js");
const OfflinePlayer_js_1 = require("./org/bukkit/OfflinePlayer.js");
const OpenOption_js_1 = require("./java/nio/file/OpenOption.js");
const Openable_js_1 = require("./org/bukkit/material/Openable.js");
const Openable_js_2 = require("./org/bukkit/block/data/Openable.js");
const OptionalContextResolver_js_1 = require("./com/pixlfox/scriptablemc/acf/contexts/OptionalContextResolver.js");
const Orientable_js_1 = require("./org/bukkit/block/data/Orientable.js");
const OutputStream_js_1 = require("./java/io/OutputStream.js");
const Pagination_js_1 = require("./fr/minuskube/inv/content/Pagination.js");
const Painting_js_1 = require("./org/bukkit/entity/Painting.js");
const Panda_js_1 = require("./org/bukkit/entity/Panda.js");
const Panda_Gene_js_1 = require("./org/bukkit/entity/Panda$Gene.js");
const PaperCommandManager_js_1 = require("./com/pixlfox/scriptablemc/acf/PaperCommandManager.js");
const ParameterMetaData_js_1 = require("./java/sql/ParameterMetaData.js");
const Parameters_js_1 = require("./khttp/structures/parameters/Parameters.js");
const Parrot_js_1 = require("./org/bukkit/entity/Parrot.js");
const Parrot_Variant_js_1 = require("./org/bukkit/entity/Parrot$Variant.js");
const Particle_js_1 = require("./org/bukkit/Particle.js");
const Path_js_1 = require("./java/nio/file/Path.js");
const PathMatcher_js_1 = require("./java/nio/file/PathMatcher.js");
const Pattern_js_1 = require("./org/bukkit/block/banner/Pattern.js");
const PatternType_js_1 = require("./org/bukkit/block/banner/PatternType.js");
const PerlinNoiseGenerator_js_1 = require("./org/bukkit/util/noise/PerlinNoiseGenerator.js");
const PerlinOctaveGenerator_js_1 = require("./org/bukkit/util/noise/PerlinOctaveGenerator.js");
const Permissible_js_1 = require("./org/bukkit/permissions/Permissible.js");
const PermissibleBase_js_1 = require("./org/bukkit/permissions/PermissibleBase.js");
const Permission_js_1 = require("./org/bukkit/permissions/Permission.js");
const PermissionAttachment_js_1 = require("./org/bukkit/permissions/PermissionAttachment.js");
const PermissionAttachmentInfo_js_1 = require("./org/bukkit/permissions/PermissionAttachmentInfo.js");
const PermissionDefault_js_1 = require("./org/bukkit/permissions/PermissionDefault.js");
const PermissionRemovedExecutor_js_1 = require("./org/bukkit/permissions/PermissionRemovedExecutor.js");
const PersistentDataAdapterContext_js_1 = require("./org/bukkit/persistence/PersistentDataAdapterContext.js");
const PersistentDataContainer_js_1 = require("./org/bukkit/persistence/PersistentDataContainer.js");
const PersistentDataHolder_js_1 = require("./org/bukkit/persistence/PersistentDataHolder.js");
const PersistentDataType_js_1 = require("./org/bukkit/persistence/PersistentDataType.js");
const Phantom_js_1 = require("./org/bukkit/entity/Phantom.js");
const Pig_js_1 = require("./org/bukkit/entity/Pig.js");
const PigZapEvent_js_1 = require("./org/bukkit/event/entity/PigZapEvent.js");
const PigZombie_js_1 = require("./org/bukkit/entity/PigZombie.js");
const PigZombieAngerEvent_js_1 = require("./org/bukkit/event/entity/PigZombieAngerEvent.js");
const Pillager_js_1 = require("./org/bukkit/entity/Pillager.js");
const Piston_js_1 = require("./org/bukkit/block/data/type/Piston.js");
const PistonBaseMaterial_js_1 = require("./org/bukkit/material/PistonBaseMaterial.js");
const PistonExtensionMaterial_js_1 = require("./org/bukkit/material/PistonExtensionMaterial.js");
const PistonHead_js_1 = require("./org/bukkit/block/data/type/PistonHead.js");
const PistonMoveReaction_js_1 = require("./org/bukkit/block/PistonMoveReaction.js");
const Player_js_1 = require("./org/bukkit/entity/Player.js");
const Player_Spigot_js_1 = require("./org/bukkit/entity/Player$Spigot.js");
const PlayerAdvancementDoneEvent_js_1 = require("./org/bukkit/event/player/PlayerAdvancementDoneEvent.js");
const PlayerAnimationEvent_js_1 = require("./org/bukkit/event/player/PlayerAnimationEvent.js");
const PlayerAnimationType_js_1 = require("./org/bukkit/event/player/PlayerAnimationType.js");
const PlayerArmorStandManipulateEvent_js_1 = require("./org/bukkit/event/player/PlayerArmorStandManipulateEvent.js");
const PlayerBedEnterEvent_js_1 = require("./org/bukkit/event/player/PlayerBedEnterEvent.js");
const PlayerBedEnterEvent_BedEnterResult_js_1 = require("./org/bukkit/event/player/PlayerBedEnterEvent$BedEnterResult.js");
const PlayerBedLeaveEvent_js_1 = require("./org/bukkit/event/player/PlayerBedLeaveEvent.js");
const PlayerBucketEmptyEvent_js_1 = require("./org/bukkit/event/player/PlayerBucketEmptyEvent.js");
const PlayerBucketEvent_js_1 = require("./org/bukkit/event/player/PlayerBucketEvent.js");
const PlayerBucketFillEvent_js_1 = require("./org/bukkit/event/player/PlayerBucketFillEvent.js");
const PlayerChangedMainHandEvent_js_1 = require("./org/bukkit/event/player/PlayerChangedMainHandEvent.js");
const PlayerChangedWorldEvent_js_1 = require("./org/bukkit/event/player/PlayerChangedWorldEvent.js");
const PlayerChannelEvent_js_1 = require("./org/bukkit/event/player/PlayerChannelEvent.js");
const PlayerChatEvent_js_1 = require("./org/bukkit/event/player/PlayerChatEvent.js");
const PlayerChatTabCompleteEvent_js_1 = require("./org/bukkit/event/player/PlayerChatTabCompleteEvent.js");
const PlayerCommandPreprocessEvent_js_1 = require("./org/bukkit/event/player/PlayerCommandPreprocessEvent.js");
const PlayerCommandSendEvent_js_1 = require("./org/bukkit/event/player/PlayerCommandSendEvent.js");
const PlayerDeathEvent_js_1 = require("./org/bukkit/event/entity/PlayerDeathEvent.js");
const PlayerDropItemEvent_js_1 = require("./org/bukkit/event/player/PlayerDropItemEvent.js");
const PlayerEditBookEvent_js_1 = require("./org/bukkit/event/player/PlayerEditBookEvent.js");
const PlayerEggThrowEvent_js_1 = require("./org/bukkit/event/player/PlayerEggThrowEvent.js");
const PlayerEvent_js_1 = require("./org/bukkit/event/player/PlayerEvent.js");
const PlayerExpChangeEvent_js_1 = require("./org/bukkit/event/player/PlayerExpChangeEvent.js");
const PlayerFishEvent_js_1 = require("./org/bukkit/event/player/PlayerFishEvent.js");
const PlayerFishEvent_State_js_1 = require("./org/bukkit/event/player/PlayerFishEvent$State.js");
const PlayerGameModeChangeEvent_js_1 = require("./org/bukkit/event/player/PlayerGameModeChangeEvent.js");
const PlayerInteractAtEntityEvent_js_1 = require("./org/bukkit/event/player/PlayerInteractAtEntityEvent.js");
const PlayerInteractEntityEvent_js_1 = require("./org/bukkit/event/player/PlayerInteractEntityEvent.js");
const PlayerInteractEvent_js_1 = require("./org/bukkit/event/player/PlayerInteractEvent.js");
const PlayerInventory_js_1 = require("./org/bukkit/inventory/PlayerInventory.js");
const PlayerItemBreakEvent_js_1 = require("./org/bukkit/event/player/PlayerItemBreakEvent.js");
const PlayerItemConsumeEvent_js_1 = require("./org/bukkit/event/player/PlayerItemConsumeEvent.js");
const PlayerItemDamageEvent_js_1 = require("./org/bukkit/event/player/PlayerItemDamageEvent.js");
const PlayerItemHeldEvent_js_1 = require("./org/bukkit/event/player/PlayerItemHeldEvent.js");
const PlayerItemMendEvent_js_1 = require("./org/bukkit/event/player/PlayerItemMendEvent.js");
const PlayerJoinEvent_js_1 = require("./org/bukkit/event/player/PlayerJoinEvent.js");
const PlayerKickEvent_js_1 = require("./org/bukkit/event/player/PlayerKickEvent.js");
const PlayerLeashEntityEvent_js_1 = require("./org/bukkit/event/entity/PlayerLeashEntityEvent.js");
const PlayerLevelChangeEvent_js_1 = require("./org/bukkit/event/player/PlayerLevelChangeEvent.js");
const PlayerLocaleChangeEvent_js_1 = require("./org/bukkit/event/player/PlayerLocaleChangeEvent.js");
const PlayerLoginEvent_js_1 = require("./org/bukkit/event/player/PlayerLoginEvent.js");
const PlayerLoginEvent_Result_js_1 = require("./org/bukkit/event/player/PlayerLoginEvent$Result.js");
const PlayerMoveEvent_js_1 = require("./org/bukkit/event/player/PlayerMoveEvent.js");
const PlayerNamePrompt_js_1 = require("./org/bukkit/conversations/PlayerNamePrompt.js");
const PlayerPickupArrowEvent_js_1 = require("./org/bukkit/event/player/PlayerPickupArrowEvent.js");
const PlayerPickupItemEvent_js_1 = require("./org/bukkit/event/player/PlayerPickupItemEvent.js");
const PlayerPortalEvent_js_1 = require("./org/bukkit/event/player/PlayerPortalEvent.js");
const PlayerPreLoginEvent_js_1 = require("./org/bukkit/event/player/PlayerPreLoginEvent.js");
const PlayerPreLoginEvent_Result_js_1 = require("./org/bukkit/event/player/PlayerPreLoginEvent$Result.js");
const PlayerQuitEvent_js_1 = require("./org/bukkit/event/player/PlayerQuitEvent.js");
const PlayerRecipeDiscoverEvent_js_1 = require("./org/bukkit/event/player/PlayerRecipeDiscoverEvent.js");
const PlayerRegisterChannelEvent_js_1 = require("./org/bukkit/event/player/PlayerRegisterChannelEvent.js");
const PlayerResourcePackStatusEvent_js_1 = require("./org/bukkit/event/player/PlayerResourcePackStatusEvent.js");
const PlayerResourcePackStatusEvent_Status_js_1 = require("./org/bukkit/event/player/PlayerResourcePackStatusEvent$Status.js");
const PlayerRespawnEvent_js_1 = require("./org/bukkit/event/player/PlayerRespawnEvent.js");
const PlayerRiptideEvent_js_1 = require("./org/bukkit/event/player/PlayerRiptideEvent.js");
const PlayerShearEntityEvent_js_1 = require("./org/bukkit/event/player/PlayerShearEntityEvent.js");
const PlayerStatisticIncrementEvent_js_1 = require("./org/bukkit/event/player/PlayerStatisticIncrementEvent.js");
const PlayerSwapHandItemsEvent_js_1 = require("./org/bukkit/event/player/PlayerSwapHandItemsEvent.js");
const PlayerTakeLecternBookEvent_js_1 = require("./org/bukkit/event/player/PlayerTakeLecternBookEvent.js");
const PlayerTeleportEvent_js_1 = require("./org/bukkit/event/player/PlayerTeleportEvent.js");
const PlayerTeleportEvent_TeleportCause_js_1 = require("./org/bukkit/event/player/PlayerTeleportEvent$TeleportCause.js");
const PlayerToggleFlightEvent_js_1 = require("./org/bukkit/event/player/PlayerToggleFlightEvent.js");
const PlayerToggleSneakEvent_js_1 = require("./org/bukkit/event/player/PlayerToggleSneakEvent.js");
const PlayerToggleSprintEvent_js_1 = require("./org/bukkit/event/player/PlayerToggleSprintEvent.js");
const PlayerUnleashEntityEvent_js_1 = require("./org/bukkit/event/player/PlayerUnleashEntityEvent.js");
const PlayerUnregisterChannelEvent_js_1 = require("./org/bukkit/event/player/PlayerUnregisterChannelEvent.js");
const PlayerVelocityEvent_js_1 = require("./org/bukkit/event/player/PlayerVelocityEvent.js");
const Plugin_js_1 = require("./org/bukkit/plugin/Plugin.js");
const PluginAwareness_js_1 = require("./org/bukkit/plugin/PluginAwareness.js");
const PluginBase_js_1 = require("./org/bukkit/plugin/PluginBase.js");
const PluginChannelDirection_js_1 = require("./org/bukkit/plugin/messaging/PluginChannelDirection.js");
const PluginCommand_js_1 = require("./org/bukkit/command/PluginCommand.js");
const PluginCommandYamlParser_js_1 = require("./org/bukkit/command/PluginCommandYamlParser.js");
const PluginDescriptionFile_js_1 = require("./org/bukkit/plugin/PluginDescriptionFile.js");
const PluginDisableEvent_js_1 = require("./org/bukkit/event/server/PluginDisableEvent.js");
const PluginEnableEvent_js_1 = require("./org/bukkit/event/server/PluginEnableEvent.js");
const PluginEvent_js_1 = require("./org/bukkit/event/server/PluginEvent.js");
const PluginIdentifiableCommand_js_1 = require("./org/bukkit/command/PluginIdentifiableCommand.js");
const PluginLoadOrder_js_1 = require("./org/bukkit/plugin/PluginLoadOrder.js");
const PluginLoader_js_1 = require("./org/bukkit/plugin/PluginLoader.js");
const PluginLogger_js_1 = require("./org/bukkit/plugin/PluginLogger.js");
const PluginManager_js_1 = require("./org/bukkit/plugin/PluginManager.js");
const PluginMessageListener_js_1 = require("./org/bukkit/plugin/messaging/PluginMessageListener.js");
const PluginMessageListenerRegistration_js_1 = require("./org/bukkit/plugin/messaging/PluginMessageListenerRegistration.js");
const PluginMessageRecipient_js_1 = require("./org/bukkit/plugin/messaging/PluginMessageRecipient.js");
const PluginNameConversationPrefix_js_1 = require("./org/bukkit/conversations/PluginNameConversationPrefix.js");
const PluginsCommand_js_1 = require("./org/bukkit/command/defaults/PluginsCommand.js");
const PolarBear_js_1 = require("./org/bukkit/entity/PolarBear.js");
const PortalCreateEvent_js_1 = require("./org/bukkit/event/world/PortalCreateEvent.js");
const PortalCreateEvent_CreateReason_js_1 = require("./org/bukkit/event/world/PortalCreateEvent$CreateReason.js");
const PortalType_js_1 = require("./org/bukkit/PortalType.js");
const Pose_js_1 = require("./org/bukkit/entity/Pose.js");
const Potion_js_1 = require("./org/bukkit/potion/Potion.js");
const PotionBrewer_js_1 = require("./org/bukkit/potion/PotionBrewer.js");
const PotionData_js_1 = require("./org/bukkit/potion/PotionData.js");
const PotionEffect_js_1 = require("./org/bukkit/potion/PotionEffect.js");
const PotionEffectType_js_1 = require("./org/bukkit/potion/PotionEffectType.js");
const PotionEffectTypeWrapper_js_1 = require("./org/bukkit/potion/PotionEffectTypeWrapper.js");
const PotionMeta_js_1 = require("./org/bukkit/inventory/meta/PotionMeta.js");
const PotionSplashEvent_js_1 = require("./org/bukkit/event/entity/PotionSplashEvent.js");
const PotionType_js_1 = require("./org/bukkit/potion/PotionType.js");
const Powerable_js_1 = require("./org/bukkit/block/data/Powerable.js");
const PoweredMinecart_js_1 = require("./org/bukkit/entity/minecart/PoweredMinecart.js");
const PoweredRail_js_1 = require("./org/bukkit/material/PoweredRail.js");
const PrepareAnvilEvent_js_1 = require("./org/bukkit/event/inventory/PrepareAnvilEvent.js");
const PrepareItemCraftEvent_js_1 = require("./org/bukkit/event/inventory/PrepareItemCraftEvent.js");
const PrepareItemEnchantEvent_js_1 = require("./org/bukkit/event/enchantment/PrepareItemEnchantEvent.js");
const PreparedStatement_js_1 = require("./java/sql/PreparedStatement.js");
const PressurePlate_js_1 = require("./org/bukkit/material/PressurePlate.js");
const PressureSensor_js_1 = require("./org/bukkit/material/PressureSensor.js");
const PrintStream_js_1 = require("./java/io/PrintStream.js");
const PrintWriter_js_1 = require("./java/io/PrintWriter.js");
const Projectile_js_1 = require("./org/bukkit/entity/Projectile.js");
const ProjectileHitEvent_js_1 = require("./org/bukkit/event/entity/ProjectileHitEvent.js");
const ProjectileLaunchEvent_js_1 = require("./org/bukkit/event/entity/ProjectileLaunchEvent.js");
const ProjectileSource_js_1 = require("./org/bukkit/projectiles/ProjectileSource.js");
const Prompt_js_1 = require("./org/bukkit/conversations/Prompt.js");
const ProxiedCommandSender_js_1 = require("./org/bukkit/command/ProxiedCommandSender.js");
const PufferFish_js_1 = require("./org/bukkit/entity/PufferFish.js");
const Pumpkin_js_1 = require("./org/bukkit/material/Pumpkin.js");
const Rabbit_js_1 = require("./org/bukkit/entity/Rabbit.js");
const Rabbit_Type_js_1 = require("./org/bukkit/entity/Rabbit$Type.js");
const Raid_js_1 = require("./org/bukkit/Raid.js");
const Raid_RaidStatus_js_1 = require("./org/bukkit/Raid$RaidStatus.js");
const RaidEvent_js_1 = require("./org/bukkit/event/raid/RaidEvent.js");
const RaidFinishEvent_js_1 = require("./org/bukkit/event/raid/RaidFinishEvent.js");
const RaidSpawnWaveEvent_js_1 = require("./org/bukkit/event/raid/RaidSpawnWaveEvent.js");
const RaidStopEvent_js_1 = require("./org/bukkit/event/raid/RaidStopEvent.js");
const RaidStopEvent_Reason_js_1 = require("./org/bukkit/event/raid/RaidStopEvent$Reason.js");
const RaidTriggerEvent_js_1 = require("./org/bukkit/event/raid/RaidTriggerEvent.js");
const Raider_js_1 = require("./org/bukkit/entity/Raider.js");
const Rail_js_1 = require("./org/bukkit/block/data/Rail.js");
const Rail_Shape_js_1 = require("./org/bukkit/block/data/Rail$Shape.js");
const Rails_js_1 = require("./org/bukkit/material/Rails.js");
const Ravager_js_1 = require("./org/bukkit/entity/Ravager.js");
const RayTraceResult_js_1 = require("./org/bukkit/util/RayTraceResult.js");
const ReadableByteChannel_js_1 = require("./java/nio/channels/ReadableByteChannel.js");
const Reader_js_1 = require("./java/io/Reader.js");
const Recipe_js_1 = require("./org/bukkit/inventory/Recipe.js");
const RecipeChoice_js_1 = require("./org/bukkit/inventory/RecipeChoice.js");
const Redstone_js_1 = require("./org/bukkit/material/Redstone.js");
const RedstoneRail_js_1 = require("./org/bukkit/block/data/type/RedstoneRail.js");
const RedstoneTorch_js_1 = require("./org/bukkit/material/RedstoneTorch.js");
const RedstoneWallTorch_js_1 = require("./org/bukkit/block/data/type/RedstoneWallTorch.js");
const RedstoneWire_js_1 = require("./org/bukkit/material/RedstoneWire.js");
const RedstoneWire_js_2 = require("./org/bukkit/block/data/type/RedstoneWire.js");
const RedstoneWire_Connection_js_1 = require("./org/bukkit/block/data/type/RedstoneWire$Connection.js");
const Ref_js_1 = require("./java/sql/Ref.js");
const RegexPrompt_js_1 = require("./org/bukkit/conversations/RegexPrompt.js");
const RegisteredCommand_js_1 = require("./com/pixlfox/scriptablemc/acf/RegisteredCommand.js");
const RegisteredListener_js_1 = require("./org/bukkit/plugin/RegisteredListener.js");
const RegisteredServiceProvider_js_1 = require("./org/bukkit/plugin/RegisteredServiceProvider.js");
const Registry_js_1 = require("./org/bukkit/Registry.js");
const ReloadCommand_js_1 = require("./org/bukkit/command/defaults/ReloadCommand.js");
const RemoteConsoleCommandSender_js_1 = require("./org/bukkit/command/RemoteConsoleCommandSender.js");
const RemoteServerCommandEvent_js_1 = require("./org/bukkit/event/server/RemoteServerCommandEvent.js");
const RenderType_js_1 = require("./org/bukkit/scoreboard/RenderType.js");
const Repairable_js_1 = require("./org/bukkit/inventory/meta/Repairable.js");
const Repeater_js_1 = require("./org/bukkit/block/data/type/Repeater.js");
const Request_js_1 = require("./khttp/requests/Request.js");
const ReservedChannelException_js_1 = require("./org/bukkit/plugin/messaging/ReservedChannelException.js");
const Response_js_1 = require("./khttp/responses/Response.js");
const ResultSet_js_1 = require("./java/sql/ResultSet.js");
const ResultSetMetaData_js_1 = require("./java/sql/ResultSetMetaData.js");
const RideableMinecart_js_1 = require("./org/bukkit/entity/minecart/RideableMinecart.js");
const RootCommand_js_1 = require("./com/pixlfox/scriptablemc/acf/RootCommand.js");
const Rotatable_js_1 = require("./org/bukkit/block/data/Rotatable.js");
const Rotation_js_1 = require("./org/bukkit/Rotation.js");
const RowId_js_1 = require("./java/sql/RowId.js");
const RowIdLifetime_js_1 = require("./java/sql/RowIdLifetime.js");
const SQLException_js_1 = require("./java/sql/SQLException.js");
const SQLType_js_1 = require("./java/sql/SQLType.js");
const SQLWarning_js_1 = require("./java/sql/SQLWarning.js");
const SQLXML_js_1 = require("./java/sql/SQLXML.js");
const Salmon_js_1 = require("./org/bukkit/entity/Salmon.js");
const Sandstone_js_1 = require("./org/bukkit/material/Sandstone.js");
const SandstoneType_js_1 = require("./org/bukkit/SandstoneType.js");
const Sapling_js_1 = require("./org/bukkit/block/data/type/Sapling.js");
const Sapling_js_2 = require("./org/bukkit/material/Sapling.js");
const Savepoint_js_1 = require("./java/sql/Savepoint.js");
const Scaffolding_js_1 = require("./org/bukkit/block/data/type/Scaffolding.js");
const ScatteringByteChannel_js_1 = require("./java/nio/channels/ScatteringByteChannel.js");
const Score_js_1 = require("./org/bukkit/scoreboard/Score.js");
const ScoreComponent_js_1 = require("./net/md_5/bungee/api/chat/ScoreComponent.js");
const Scoreboard_js_1 = require("./org/bukkit/scoreboard/Scoreboard.js");
const ScoreboardManager_js_1 = require("./org/bukkit/scoreboard/ScoreboardManager.js");
const ScriptEngineConfig_js_1 = require("./com/pixlfox/scriptablemc/ScriptEngineConfig.js");
const ScriptEngineDebuggerConfig_js_1 = require("./com/pixlfox/scriptablemc/ScriptEngineDebuggerConfig.js");
const ScriptEngineMain_js_1 = require("./com/pixlfox/scriptablemc/ScriptEngineMain.js");
const ScriptablePluginContext_js_1 = require("./com/pixlfox/scriptablemc/core/ScriptablePluginContext.js");
const ScriptablePluginEngine_js_1 = require("./com/pixlfox/scriptablemc/core/ScriptablePluginEngine.js");
const SeaPickle_js_1 = require("./org/bukkit/block/data/type/SeaPickle.js");
const SeekableByteChannel_js_1 = require("./java/nio/channels/SeekableByteChannel.js");
const SelectorComponent_js_1 = require("./net/md_5/bungee/api/chat/SelectorComponent.js");
const Serializable_js_1 = require("./java/io/Serializable.js");
const SerializableAs_js_1 = require("./org/bukkit/configuration/serialization/SerializableAs.js");
const SerializablePermission_js_1 = require("./java/io/SerializablePermission.js");
const Server_js_1 = require("./org/bukkit/Server.js");
const Server_Spigot_js_1 = require("./org/bukkit/Server$Spigot.js");
const ServerCommandEvent_js_1 = require("./org/bukkit/event/server/ServerCommandEvent.js");
const ServerEvent_js_1 = require("./org/bukkit/event/server/ServerEvent.js");
const ServerListPingEvent_js_1 = require("./org/bukkit/event/server/ServerListPingEvent.js");
const ServerLoadEvent_js_1 = require("./org/bukkit/event/server/ServerLoadEvent.js");
const ServerLoadEvent_LoadType_js_1 = require("./org/bukkit/event/server/ServerLoadEvent$LoadType.js");
const ServerOperator_js_1 = require("./org/bukkit/permissions/ServerOperator.js");
const ServiceEvent_js_1 = require("./org/bukkit/event/server/ServiceEvent.js");
const ServicePriority_js_1 = require("./org/bukkit/plugin/ServicePriority.js");
const ServiceRegisterEvent_js_1 = require("./org/bukkit/event/server/ServiceRegisterEvent.js");
const ServiceUnregisterEvent_js_1 = require("./org/bukkit/event/server/ServiceUnregisterEvent.js");
const ServicesManager_js_1 = require("./org/bukkit/plugin/ServicesManager.js");
const SetMultimap_js_1 = require("./com/google/common/collect/SetMultimap.js");
const ShapedRecipe_js_1 = require("./org/bukkit/inventory/ShapedRecipe.js");
const ShapelessRecipe_js_1 = require("./org/bukkit/inventory/ShapelessRecipe.js");
const Sheep_js_1 = require("./org/bukkit/entity/Sheep.js");
const SheepDyeWoolEvent_js_1 = require("./org/bukkit/event/entity/SheepDyeWoolEvent.js");
const SheepRegrowWoolEvent_js_1 = require("./org/bukkit/event/entity/SheepRegrowWoolEvent.js");
const ShortBuffer_js_1 = require("./java/nio/ShortBuffer.js");
const Shulker_js_1 = require("./org/bukkit/entity/Shulker.js");
const ShulkerBox_js_1 = require("./org/bukkit/block/ShulkerBox.js");
const ShulkerBullet_js_1 = require("./org/bukkit/entity/ShulkerBullet.js");
const Sign_js_1 = require("./org/bukkit/material/Sign.js");
const Sign_js_2 = require("./org/bukkit/block/data/type/Sign.js");
const Sign_js_3 = require("./org/bukkit/block/Sign.js");
const SignChangeEvent_js_1 = require("./org/bukkit/event/block/SignChangeEvent.js");
const Silverfish_js_1 = require("./org/bukkit/entity/Silverfish.js");
const SimpleAttachableMaterialData_js_1 = require("./org/bukkit/material/SimpleAttachableMaterialData.js");
const SimpleCommandMap_js_1 = require("./org/bukkit/command/SimpleCommandMap.js");
const SimplePluginManager_js_1 = require("./org/bukkit/plugin/SimplePluginManager.js");
const SimpleServicesManager_js_1 = require("./org/bukkit/plugin/SimpleServicesManager.js");
const SimplexNoiseGenerator_js_1 = require("./org/bukkit/util/noise/SimplexNoiseGenerator.js");
const SimplexOctaveGenerator_js_1 = require("./org/bukkit/util/noise/SimplexOctaveGenerator.js");
const Sittable_js_1 = require("./org/bukkit/entity/Sittable.js");
const SizedFireball_js_1 = require("./org/bukkit/entity/SizedFireball.js");
const Skeleton_js_1 = require("./org/bukkit/entity/Skeleton.js");
const Skeleton_SkeletonType_js_1 = require("./org/bukkit/entity/Skeleton$SkeletonType.js");
const SkeletonHorse_js_1 = require("./org/bukkit/entity/SkeletonHorse.js");
const Skull_js_1 = require("./org/bukkit/material/Skull.js");
const Skull_js_2 = require("./org/bukkit/block/Skull.js");
const SkullMeta_js_1 = require("./org/bukkit/inventory/meta/SkullMeta.js");
const SkullType_js_1 = require("./org/bukkit/SkullType.js");
const Slab_js_1 = require("./org/bukkit/block/data/type/Slab.js");
const Slab_Type_js_1 = require("./org/bukkit/block/data/type/Slab$Type.js");
const Slime_js_1 = require("./org/bukkit/entity/Slime.js");
const SlimeSplitEvent_js_1 = require("./org/bukkit/event/entity/SlimeSplitEvent.js");
const SlotIterator_js_1 = require("./fr/minuskube/inv/content/SlotIterator.js");
const SlotIterator_Type_js_1 = require("./fr/minuskube/inv/content/SlotIterator$Type.js");
const SlotPos_js_1 = require("./fr/minuskube/inv/content/SlotPos.js");
const SmallFireball_js_1 = require("./org/bukkit/entity/SmallFireball.js");
const SmartInventory_js_1 = require("./fr/minuskube/inv/SmartInventory.js");
const SmartInventory_js_2 = require("./com/smc/smartinvs/SmartInventory.js");
const SmartInventory_Builder_js_1 = require("./fr/minuskube/inv/SmartInventory$Builder.js");
const SmartInventoryProvider_js_1 = require("./com/smc/smartinvs/SmartInventoryProvider.js");
const Smoker_js_1 = require("./org/bukkit/block/Smoker.js");
const SmokingRecipe_js_1 = require("./org/bukkit/inventory/SmokingRecipe.js");
const SmoothBrick_js_1 = require("./org/bukkit/material/SmoothBrick.js");
const Snow_js_1 = require("./org/bukkit/block/data/type/Snow.js");
const Snowable_js_1 = require("./org/bukkit/block/data/Snowable.js");
const Snowball_js_1 = require("./org/bukkit/entity/Snowball.js");
const Snowman_js_1 = require("./org/bukkit/entity/Snowman.js");
const Sound_js_1 = require("./org/bukkit/Sound.js");
const SoundCategory_js_1 = require("./org/bukkit/SoundCategory.js");
const SoundGroup_js_1 = require("./org/bukkit/SoundGroup.js");
const SpawnChangeEvent_js_1 = require("./org/bukkit/event/world/SpawnChangeEvent.js");
const SpawnEgg_js_1 = require("./org/bukkit/material/SpawnEgg.js");
const SpawnEggMeta_js_1 = require("./org/bukkit/inventory/meta/SpawnEggMeta.js");
const SpawnerMinecart_js_1 = require("./org/bukkit/entity/minecart/SpawnerMinecart.js");
const SpawnerSpawnEvent_js_1 = require("./org/bukkit/event/entity/SpawnerSpawnEvent.js");
const SpectralArrow_js_1 = require("./org/bukkit/entity/SpectralArrow.js");
const Spellcaster_js_1 = require("./org/bukkit/entity/Spellcaster.js");
const Spellcaster_Spell_js_1 = require("./org/bukkit/entity/Spellcaster$Spell.js");
const Spider_js_1 = require("./org/bukkit/entity/Spider.js");
const SplashPotion_js_1 = require("./org/bukkit/entity/SplashPotion.js");
const SpongeAbsorbEvent_js_1 = require("./org/bukkit/event/block/SpongeAbsorbEvent.js");
const Squid_js_1 = require("./org/bukkit/entity/Squid.js");
const Stairs_js_1 = require("./org/bukkit/material/Stairs.js");
const Stairs_js_2 = require("./org/bukkit/block/data/type/Stairs.js");
const Stairs_Shape_js_1 = require("./org/bukkit/block/data/type/Stairs$Shape.js");
const StandardMessenger_js_1 = require("./org/bukkit/plugin/messaging/StandardMessenger.js");
const Statement_js_1 = require("./java/sql/Statement.js");
const Statistic_js_1 = require("./org/bukkit/Statistic.js");
const Statistic_Type_js_1 = require("./org/bukkit/Statistic$Type.js");
const Steerable_js_1 = require("./org/bukkit/entity/Steerable.js");
const Step_js_1 = require("./org/bukkit/material/Step.js");
const StonecutterInventory_js_1 = require("./org/bukkit/inventory/StonecutterInventory.js");
const StonecuttingRecipe_js_1 = require("./org/bukkit/inventory/StonecuttingRecipe.js");
const StorageMinecart_js_1 = require("./org/bukkit/entity/minecart/StorageMinecart.js");
const Stray_js_1 = require("./org/bukkit/entity/Stray.js");
const StringPrompt_js_1 = require("./org/bukkit/conversations/StringPrompt.js");
const StringUtil_js_1 = require("./org/bukkit/util/StringUtil.js");
const Struct_js_1 = require("./java/sql/Struct.js");
const Structure_js_1 = require("./org/bukkit/block/Structure.js");
const StructureBlock_js_1 = require("./org/bukkit/block/data/type/StructureBlock.js");
const StructureBlock_Mode_js_1 = require("./org/bukkit/block/data/type/StructureBlock$Mode.js");
const StructureGrowEvent_js_1 = require("./org/bukkit/event/world/StructureGrowEvent.js");
const StructureRotation_js_1 = require("./org/bukkit/block/structure/StructureRotation.js");
const StructureType_js_1 = require("./org/bukkit/StructureType.js");
const SuspiciousStewMeta_js_1 = require("./org/bukkit/inventory/meta/SuspiciousStewMeta.js");
const Switch_js_1 = require("./org/bukkit/block/data/type/Switch.js");
const Switch_Face_js_1 = require("./org/bukkit/block/data/type/Switch$Face.js");
const TNT_js_1 = require("./org/bukkit/block/data/type/TNT.js");
const TNTPrimed_js_1 = require("./org/bukkit/entity/TNTPrimed.js");
const TabCompleteEvent_js_1 = require("./org/bukkit/event/server/TabCompleteEvent.js");
const TabCompleter_js_1 = require("./org/bukkit/command/TabCompleter.js");
const TabExecutor_js_1 = require("./org/bukkit/command/TabExecutor.js");
const Tag_js_1 = require("./org/bukkit/Tag.js");
const Tameable_js_1 = require("./org/bukkit/entity/Tameable.js");
const Team_js_1 = require("./org/bukkit/scoreboard/Team.js");
const Team_Option_js_1 = require("./org/bukkit/scoreboard/Team$Option.js");
const Team_OptionStatus_js_1 = require("./org/bukkit/scoreboard/Team$OptionStatus.js");
const TechnicalPiston_js_1 = require("./org/bukkit/block/data/type/TechnicalPiston.js");
const TechnicalPiston_Type_js_1 = require("./org/bukkit/block/data/type/TechnicalPiston$Type.js");
const TextComponent_js_1 = require("./net/md_5/bungee/api/chat/TextComponent.js");
const TexturedMaterial_js_1 = require("./org/bukkit/material/TexturedMaterial.js");
const ThrowableProjectile_js_1 = require("./org/bukkit/entity/ThrowableProjectile.js");
const ThrownExpBottle_js_1 = require("./org/bukkit/entity/ThrownExpBottle.js");
const ThrownPotion_js_1 = require("./org/bukkit/entity/ThrownPotion.js");
const ThunderChangeEvent_js_1 = require("./org/bukkit/event/weather/ThunderChangeEvent.js");
const TileState_js_1 = require("./org/bukkit/block/TileState.js");
const Time_js_1 = require("./java/sql/Time.js");
const TimeSkipEvent_js_1 = require("./org/bukkit/event/world/TimeSkipEvent.js");
const TimeSkipEvent_SkipReason_js_1 = require("./org/bukkit/event/world/TimeSkipEvent$SkipReason.js");
const TimedRegisteredListener_js_1 = require("./org/bukkit/plugin/TimedRegisteredListener.js");
const Timestamp_js_1 = require("./java/sql/Timestamp.js");
const TimingManager_js_1 = require("./com/pixlfox/scriptablemc/acf/lib/timings/TimingManager.js");
const TimingsCommand_js_1 = require("./org/bukkit/command/defaults/TimingsCommand.js");
const TippedArrow_js_1 = require("./org/bukkit/entity/TippedArrow.js");
const Torch_js_1 = require("./org/bukkit/material/Torch.js");
const TradeSelectEvent_js_1 = require("./org/bukkit/event/inventory/TradeSelectEvent.js");
const TraderLlama_js_1 = require("./org/bukkit/entity/TraderLlama.js");
const TranslatableComponent_js_1 = require("./net/md_5/bungee/api/chat/TranslatableComponent.js");
const TrapDoor_js_1 = require("./org/bukkit/material/TrapDoor.js");
const TrapDoor_js_2 = require("./org/bukkit/block/data/type/TrapDoor.js");
const Tree_js_1 = require("./org/bukkit/material/Tree.js");
const TreeSpecies_js_1 = require("./org/bukkit/TreeSpecies.js");
const TreeType_js_1 = require("./org/bukkit/TreeType.js");
const Trident_js_1 = require("./org/bukkit/entity/Trident.js");
const Tripwire_js_1 = require("./org/bukkit/material/Tripwire.js");
const Tripwire_js_2 = require("./org/bukkit/block/data/type/Tripwire.js");
const TripwireHook_js_1 = require("./org/bukkit/material/TripwireHook.js");
const TripwireHook_js_2 = require("./org/bukkit/block/data/type/TripwireHook.js");
const TropicalFish_js_1 = require("./org/bukkit/entity/TropicalFish.js");
const TropicalFish_Pattern_js_1 = require("./org/bukkit/entity/TropicalFish$Pattern.js");
const TropicalFishBucketMeta_js_1 = require("./org/bukkit/inventory/meta/TropicalFishBucketMeta.js");
const Turtle_js_1 = require("./org/bukkit/entity/Turtle.js");
const TurtleEgg_js_1 = require("./org/bukkit/block/data/type/TurtleEgg.js");
const UndefinedNullability_js_1 = require("./org/bukkit/UndefinedNullability.js");
const UnknownDependencyException_js_1 = require("./org/bukkit/plugin/UnknownDependencyException.js");
const UnsafeValues_js_1 = require("./org/bukkit/UnsafeValues.js");
const UsageMode_js_1 = require("./org/bukkit/block/structure/UsageMode.js");
const UserPrincipal_js_1 = require("./java/nio/file/attribute/UserPrincipal.js");
const UserPrincipalLookupService_js_1 = require("./java/nio/file/attribute/UserPrincipalLookupService.js");
const Utility_js_1 = require("./org/bukkit/Utility.js");
const ValidatingPrompt_js_1 = require("./org/bukkit/conversations/ValidatingPrompt.js");
const Vector_js_1 = require("./org/bukkit/util/Vector.js");
const Vehicle_js_1 = require("./org/bukkit/entity/Vehicle.js");
const VehicleBlockCollisionEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleBlockCollisionEvent.js");
const VehicleCollisionEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleCollisionEvent.js");
const VehicleCreateEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleCreateEvent.js");
const VehicleDamageEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleDamageEvent.js");
const VehicleDestroyEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleDestroyEvent.js");
const VehicleEnterEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleEnterEvent.js");
const VehicleEntityCollisionEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleEntityCollisionEvent.js");
const VehicleEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleEvent.js");
const VehicleExitEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleExitEvent.js");
const VehicleMoveEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleMoveEvent.js");
const VehicleUpdateEvent_js_1 = require("./org/bukkit/event/vehicle/VehicleUpdateEvent.js");
const Version_js_1 = require("./com/smc/version/Version.js");
const VersionCommand_js_1 = require("./org/bukkit/command/defaults/VersionCommand.js");
const Vex_js_1 = require("./org/bukkit/entity/Vex.js");
const Villager_js_1 = require("./org/bukkit/entity/Villager.js");
const Villager_Profession_js_1 = require("./org/bukkit/entity/Villager$Profession.js");
const Villager_Type_js_1 = require("./org/bukkit/entity/Villager$Type.js");
const VillagerAcquireTradeEvent_js_1 = require("./org/bukkit/event/entity/VillagerAcquireTradeEvent.js");
const VillagerCareerChangeEvent_js_1 = require("./org/bukkit/event/entity/VillagerCareerChangeEvent.js");
const VillagerCareerChangeEvent_ChangeReason_js_1 = require("./org/bukkit/event/entity/VillagerCareerChangeEvent$ChangeReason.js");
const VillagerReplenishTradeEvent_js_1 = require("./org/bukkit/event/entity/VillagerReplenishTradeEvent.js");
const Vindicator_js_1 = require("./org/bukkit/entity/Vindicator.js");
const Vine_js_1 = require("./org/bukkit/material/Vine.js");
const WallSign_js_1 = require("./org/bukkit/block/data/type/WallSign.js");
const WanderingTrader_js_1 = require("./org/bukkit/entity/WanderingTrader.js");
const Warning_js_1 = require("./org/bukkit/Warning.js");
const Warning_WarningState_js_1 = require("./org/bukkit/Warning$WarningState.js");
const WatchEvent_Kind_js_1 = require("./java/nio/file/WatchEvent$Kind.js");
const WatchEvent_Modifier_js_1 = require("./java/nio/file/WatchEvent$Modifier.js");
const WatchKey_js_1 = require("./java/nio/file/WatchKey.js");
const WatchService_js_1 = require("./java/nio/file/WatchService.js");
const Watchable_js_1 = require("./java/nio/file/Watchable.js");
const WaterMob_js_1 = require("./org/bukkit/entity/WaterMob.js");
const Waterlogged_js_1 = require("./org/bukkit/block/data/Waterlogged.js");
const WeatherChangeEvent_js_1 = require("./org/bukkit/event/weather/WeatherChangeEvent.js");
const WeatherEvent_js_1 = require("./org/bukkit/event/weather/WeatherEvent.js");
const WeatherType_js_1 = require("./org/bukkit/WeatherType.js");
const Witch_js_1 = require("./org/bukkit/entity/Witch.js");
const Wither_js_1 = require("./org/bukkit/entity/Wither.js");
const WitherSkeleton_js_1 = require("./org/bukkit/entity/WitherSkeleton.js");
const WitherSkull_js_1 = require("./org/bukkit/entity/WitherSkull.js");
const Wolf_js_1 = require("./org/bukkit/entity/Wolf.js");
const Wood_js_1 = require("./org/bukkit/material/Wood.js");
const WoodenStep_js_1 = require("./org/bukkit/material/WoodenStep.js");
const Wool_js_1 = require("./org/bukkit/material/Wool.js");
const World_js_1 = require("./org/bukkit/World.js");
const World_Environment_js_1 = require("./org/bukkit/World$Environment.js");
const World_Spigot_js_1 = require("./org/bukkit/World$Spigot.js");
const WorldBorder_js_1 = require("./org/bukkit/WorldBorder.js");
const WorldCreator_js_1 = require("./org/bukkit/WorldCreator.js");
const WorldEvent_js_1 = require("./org/bukkit/event/world/WorldEvent.js");
const WorldInitEvent_js_1 = require("./org/bukkit/event/world/WorldInitEvent.js");
const WorldLoadEvent_js_1 = require("./org/bukkit/event/world/WorldLoadEvent.js");
const WorldSaveEvent_js_1 = require("./org/bukkit/event/world/WorldSaveEvent.js");
const WorldType_js_1 = require("./org/bukkit/WorldType.js");
const WorldUnloadEvent_js_1 = require("./org/bukkit/event/world/WorldUnloadEvent.js");
const Wrapper_js_1 = require("./java/sql/Wrapper.js");
const WritableByteChannel_js_1 = require("./java/nio/channels/WritableByteChannel.js");
const Writer_js_1 = require("./java/io/Writer.js");
const YamlConfiguration_js_1 = require("./org/bukkit/configuration/file/YamlConfiguration.js");
const YamlConfigurationOptions_js_1 = require("./org/bukkit/configuration/file/YamlConfigurationOptions.js");
const YamlConstructor_js_1 = require("./org/bukkit/configuration/file/YamlConstructor.js");
const YamlRepresenter_js_1 = require("./org/bukkit/configuration/file/YamlRepresenter.js");
const Zombie_js_1 = require("./org/bukkit/entity/Zombie.js");
const ZombieHorse_js_1 = require("./org/bukkit/entity/ZombieHorse.js");
const ZombieVillager_js_1 = require("./org/bukkit/entity/ZombieVillager.js");
const Array_js_1 = require("./java/sql/Array.js");
var org;
(function (org) {
    var bukkit;
    (function (bukkit) {
        var entity;
        (function (entity) {
            entity.AbstractArrow = AbstractArrow_js_1.default;
            entity.AbstractArrow$PickupStatus = AbstractArrow_PickupStatus_js_1.default;
            entity.AbstractHorse = AbstractHorse_js_1.default;
            entity.AbstractVillager = AbstractVillager_js_1.default;
            entity.Ageable = Ageable_js_1.default;
            entity.Ambient = Ambient_js_1.default;
            entity.AnimalTamer = AnimalTamer_js_1.default;
            entity.Animals = Animals_js_1.default;
            entity.AreaEffectCloud = AreaEffectCloud_js_1.default;
            entity.ArmorStand = ArmorStand_js_1.default;
            entity.ArmorStand$LockType = ArmorStand_LockType_js_1.default;
            entity.Arrow = Arrow_js_1.default;
            entity.Bat = Bat_js_1.default;
            entity.Bee = Bee_js_1.default;
            entity.Blaze = Blaze_js_1.default;
            entity.Boat = Boat_js_1.default;
            entity.Boss = Boss_js_1.default;
            entity.Breedable = Breedable_js_1.default;
            entity.Cat = Cat_js_1.default;
            entity.Cat$Type = Cat_Type_js_1.default;
            entity.CaveSpider = CaveSpider_js_1.default;
            entity.ChestedHorse = ChestedHorse_js_1.default;
            entity.Chicken = Chicken_js_1.default;
            entity.Cod = Cod_js_1.default;
            entity.ComplexEntityPart = ComplexEntityPart_js_1.default;
            entity.ComplexLivingEntity = ComplexLivingEntity_js_1.default;
            entity.Cow = Cow_js_1.default;
            entity.Creature = Creature_js_1.default;
            entity.Creeper = Creeper_js_1.default;
            entity.Damageable = Damageable_js_1.default;
            entity.Dolphin = Dolphin_js_1.default;
            entity.Donkey = Donkey_js_1.default;
            entity.DragonFireball = DragonFireball_js_1.default;
            entity.Drowned = Drowned_js_1.default;
            entity.Egg = Egg_js_1.default;
            entity.ElderGuardian = ElderGuardian_js_1.default;
            entity.EnderCrystal = EnderCrystal_js_1.default;
            entity.EnderDragon = EnderDragon_js_1.default;
            entity.EnderDragon$Phase = EnderDragon_Phase_js_1.default;
            entity.EnderDragonPart = EnderDragonPart_js_1.default;
            entity.EnderPearl = EnderPearl_js_1.default;
            entity.EnderSignal = EnderSignal_js_1.default;
            entity.Enderman = Enderman_js_1.default;
            entity.Endermite = Endermite_js_1.default;
            entity.Entity = Entity_js_1.default;
            entity.Entity$Spigot = Entity_Spigot_js_1.default;
            entity.EntityCategory = EntityCategory_js_1.default;
            entity.EntityType = EntityType_js_1.default;
            entity.Evoker = Evoker_js_1.default;
            entity.Evoker$Spell = Evoker_Spell_js_1.default;
            entity.EvokerFangs = EvokerFangs_js_1.default;
            entity.ExperienceOrb = ExperienceOrb_js_1.default;
            entity.Explosive = Explosive_js_1.default;
            entity.FallingBlock = FallingBlock_js_1.default;
            entity.Fireball = Fireball_js_1.default;
            entity.Firework = Firework_js_1.default;
            entity.Fish = Fish_js_1.default;
            entity.FishHook = FishHook_js_1.default;
            entity.FishHook$HookState = FishHook_HookState_js_1.default;
            entity.Flying = Flying_js_1.default;
            entity.Fox = Fox_js_1.default;
            entity.Fox$Type = Fox_Type_js_1.default;
            entity.Ghast = Ghast_js_1.default;
            entity.Giant = Giant_js_1.default;
            entity.Golem = Golem_js_1.default;
            entity.Guardian = Guardian_js_1.default;
            entity.Hanging = Hanging_js_1.default;
            entity.Horse = Horse_js_1.default;
            entity.Horse$Color = Horse_Color_js_1.default;
            entity.Horse$Style = Horse_Style_js_1.default;
            entity.Horse$Variant = Horse_Variant_js_1.default;
            entity.HumanEntity = HumanEntity_js_1.default;
            entity.Husk = Husk_js_1.default;
            entity.Illager = Illager_js_1.default;
            entity.Illusioner = Illusioner_js_1.default;
            entity.IronGolem = IronGolem_js_1.default;
            entity.Item = Item_js_1.default;
            entity.ItemFrame = ItemFrame_js_1.default;
            entity.LargeFireball = LargeFireball_js_1.default;
            entity.LeashHitch = LeashHitch_js_1.default;
            entity.LightningStrike = LightningStrike_js_1.default;
            entity.LightningStrike$Spigot = LightningStrike_Spigot_js_1.default;
            entity.LingeringPotion = LingeringPotion_js_1.default;
            entity.LivingEntity = LivingEntity_js_1.default;
            entity.Llama = Llama_js_1.default;
            entity.Llama$Color = Llama_Color_js_1.default;
            entity.LlamaSpit = LlamaSpit_js_1.default;
            entity.MagmaCube = MagmaCube_js_1.default;
            entity.Minecart = Minecart_js_1.default;
            entity.Mob = Mob_js_1.default;
            entity.Monster = Monster_js_1.default;
            entity.Mule = Mule_js_1.default;
            entity.MushroomCow = MushroomCow_js_1.default;
            entity.MushroomCow$Variant = MushroomCow_Variant_js_1.default;
            entity.NPC = NPC_js_1.default;
            entity.Ocelot = Ocelot_js_1.default;
            entity.Ocelot$Type = Ocelot_Type_js_1.default;
            entity.Painting = Painting_js_1.default;
            entity.Panda = Panda_js_1.default;
            entity.Panda$Gene = Panda_Gene_js_1.default;
            entity.Parrot = Parrot_js_1.default;
            entity.Parrot$Variant = Parrot_Variant_js_1.default;
            entity.Phantom = Phantom_js_1.default;
            entity.Pig = Pig_js_1.default;
            entity.PigZombie = PigZombie_js_1.default;
            entity.Pillager = Pillager_js_1.default;
            entity.Player = Player_js_1.default;
            entity.Player$Spigot = Player_Spigot_js_1.default;
            entity.PolarBear = PolarBear_js_1.default;
            entity.Pose = Pose_js_1.default;
            entity.Projectile = Projectile_js_1.default;
            entity.PufferFish = PufferFish_js_1.default;
            entity.Rabbit = Rabbit_js_1.default;
            entity.Rabbit$Type = Rabbit_Type_js_1.default;
            entity.Raider = Raider_js_1.default;
            entity.Ravager = Ravager_js_1.default;
            entity.Salmon = Salmon_js_1.default;
            entity.Sheep = Sheep_js_1.default;
            entity.Shulker = Shulker_js_1.default;
            entity.ShulkerBullet = ShulkerBullet_js_1.default;
            entity.Silverfish = Silverfish_js_1.default;
            entity.Sittable = Sittable_js_1.default;
            entity.SizedFireball = SizedFireball_js_1.default;
            entity.Skeleton = Skeleton_js_1.default;
            entity.Skeleton$SkeletonType = Skeleton_SkeletonType_js_1.default;
            entity.SkeletonHorse = SkeletonHorse_js_1.default;
            entity.Slime = Slime_js_1.default;
            entity.SmallFireball = SmallFireball_js_1.default;
            entity.Snowball = Snowball_js_1.default;
            entity.Snowman = Snowman_js_1.default;
            entity.SpectralArrow = SpectralArrow_js_1.default;
            entity.Spellcaster = Spellcaster_js_1.default;
            entity.Spellcaster$Spell = Spellcaster_Spell_js_1.default;
            entity.Spider = Spider_js_1.default;
            entity.SplashPotion = SplashPotion_js_1.default;
            entity.Squid = Squid_js_1.default;
            entity.Steerable = Steerable_js_1.default;
            entity.Stray = Stray_js_1.default;
            entity.TNTPrimed = TNTPrimed_js_1.default;
            entity.Tameable = Tameable_js_1.default;
            entity.ThrowableProjectile = ThrowableProjectile_js_1.default;
            entity.ThrownExpBottle = ThrownExpBottle_js_1.default;
            entity.ThrownPotion = ThrownPotion_js_1.default;
            entity.TippedArrow = TippedArrow_js_1.default;
            entity.TraderLlama = TraderLlama_js_1.default;
            entity.Trident = Trident_js_1.default;
            entity.TropicalFish = TropicalFish_js_1.default;
            entity.TropicalFish$Pattern = TropicalFish_Pattern_js_1.default;
            entity.Turtle = Turtle_js_1.default;
            entity.Vehicle = Vehicle_js_1.default;
            entity.Vex = Vex_js_1.default;
            entity.Villager = Villager_js_1.default;
            entity.Villager$Profession = Villager_Profession_js_1.default;
            entity.Villager$Type = Villager_Type_js_1.default;
            entity.Vindicator = Vindicator_js_1.default;
            entity.WanderingTrader = WanderingTrader_js_1.default;
            entity.WaterMob = WaterMob_js_1.default;
            entity.Witch = Witch_js_1.default;
            entity.Wither = Wither_js_1.default;
            entity.WitherSkeleton = WitherSkeleton_js_1.default;
            entity.WitherSkull = WitherSkull_js_1.default;
            entity.Wolf = Wolf_js_1.default;
            entity.Zombie = Zombie_js_1.default;
            entity.ZombieHorse = ZombieHorse_js_1.default;
            entity.ZombieVillager = ZombieVillager_js_1.default;
        })(entity = bukkit.entity || (bukkit.entity = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var inventory;
        (function (inventory) {
            inventory.AbstractHorseInventory = AbstractHorseInventory_js_1.default;
            inventory.AnvilInventory = AnvilInventory_js_1.default;
            inventory.BeaconInventory = BeaconInventory_js_1.default;
            inventory.BlastingRecipe = BlastingRecipe_js_1.default;
            inventory.BlockInventoryHolder = BlockInventoryHolder_js_1.default;
            inventory.BrewerInventory = BrewerInventory_js_1.default;
            inventory.CampfireRecipe = CampfireRecipe_js_1.default;
            inventory.CartographyInventory = CartographyInventory_js_1.default;
            inventory.ComplexRecipe = ComplexRecipe_js_1.default;
            inventory.CookingRecipe = CookingRecipe_js_1.default;
            inventory.CraftingInventory = CraftingInventory_js_1.default;
            inventory.DoubleChestInventory = DoubleChestInventory_js_1.default;
            inventory.EnchantingInventory = EnchantingInventory_js_1.default;
            inventory.EntityEquipment = EntityEquipment_js_1.default;
            inventory.EquipmentSlot = EquipmentSlot_js_1.default;
            inventory.FurnaceInventory = FurnaceInventory_js_1.default;
            inventory.FurnaceRecipe = FurnaceRecipe_js_1.default;
            inventory.GrindstoneInventory = GrindstoneInventory_js_1.default;
            inventory.HorseInventory = HorseInventory_js_1.default;
            inventory.Inventory = Inventory_js_1.default;
            inventory.InventoryHolder = InventoryHolder_js_1.default;
            inventory.InventoryView = InventoryView_js_1.default;
            inventory.InventoryView$Property = InventoryView_Property_js_1.default;
            inventory.ItemFactory = ItemFactory_js_1.default;
            inventory.ItemFlag = ItemFlag_js_1.default;
            inventory.ItemStack = ItemStack_js_1.default;
            inventory.LecternInventory = LecternInventory_js_1.default;
            inventory.LlamaInventory = LlamaInventory_js_1.default;
            inventory.LoomInventory = LoomInventory_js_1.default;
            inventory.MainHand = MainHand_js_1.default;
            inventory.Merchant = Merchant_js_1.default;
            inventory.MerchantInventory = MerchantInventory_js_1.default;
            inventory.MerchantRecipe = MerchantRecipe_js_1.default;
            inventory.PlayerInventory = PlayerInventory_js_1.default;
            inventory.Recipe = Recipe_js_1.default;
            inventory.RecipeChoice = RecipeChoice_js_1.default;
            inventory.ShapedRecipe = ShapedRecipe_js_1.default;
            inventory.ShapelessRecipe = ShapelessRecipe_js_1.default;
            inventory.SmokingRecipe = SmokingRecipe_js_1.default;
            inventory.StonecutterInventory = StonecutterInventory_js_1.default;
            inventory.StonecuttingRecipe = StonecuttingRecipe_js_1.default;
        })(inventory = bukkit.inventory || (bukkit.inventory = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
var java;
(function (java) {
    var nio;
    (function (nio) {
        var channels;
        (function (channels) {
            var spi;
            (function (spi) {
                spi.AbstractInterruptibleChannel = AbstractInterruptibleChannel_js_1.default;
            })(spi = channels.spi || (channels.spi = {}));
        })(channels = nio.channels || (nio.channels = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (java) {
    var nio;
    (function (nio) {
        var file;
        (function (file) {
            file.AccessMode = AccessMode_js_1.default;
            file.CopyOption = CopyOption_js_1.default;
            file.DirectoryStream = DirectoryStream_js_1.default;
            file.DirectoryStream$Filter = DirectoryStream_Filter_js_1.default;
            file.FileStore = FileStore_js_1.default;
            file.FileSystem = FileSystem_js_1.default;
            file.LinkOption = LinkOption_js_1.default;
            file.OpenOption = OpenOption_js_1.default;
            file.Path = Path_js_1.default;
            file.PathMatcher = PathMatcher_js_1.default;
            file.WatchEvent$Kind = WatchEvent_Kind_js_1.default;
            file.WatchEvent$Modifier = WatchEvent_Modifier_js_1.default;
            file.WatchKey = WatchKey_js_1.default;
            file.WatchService = WatchService_js_1.default;
            file.Watchable = Watchable_js_1.default;
        })(file = nio.file || (nio.file = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var block;
            (function (block) {
                block.Action = Action_js_1.default;
                block.BlockBreakEvent = BlockBreakEvent_js_1.default;
                block.BlockBurnEvent = BlockBurnEvent_js_1.default;
                block.BlockCanBuildEvent = BlockCanBuildEvent_js_1.default;
                block.BlockCookEvent = BlockCookEvent_js_1.default;
                block.BlockDamageEvent = BlockDamageEvent_js_1.default;
                block.BlockDispenseArmorEvent = BlockDispenseArmorEvent_js_1.default;
                block.BlockDispenseEvent = BlockDispenseEvent_js_1.default;
                block.BlockDropItemEvent = BlockDropItemEvent_js_1.default;
                block.BlockEvent = BlockEvent_js_1.default;
                block.BlockExpEvent = BlockExpEvent_js_1.default;
                block.BlockExplodeEvent = BlockExplodeEvent_js_1.default;
                block.BlockFadeEvent = BlockFadeEvent_js_1.default;
                block.BlockFertilizeEvent = BlockFertilizeEvent_js_1.default;
                block.BlockFormEvent = BlockFormEvent_js_1.default;
                block.BlockFromToEvent = BlockFromToEvent_js_1.default;
                block.BlockGrowEvent = BlockGrowEvent_js_1.default;
                block.BlockIgniteEvent = BlockIgniteEvent_js_1.default;
                block.BlockIgniteEvent$IgniteCause = BlockIgniteEvent_IgniteCause_js_1.default;
                block.BlockMultiPlaceEvent = BlockMultiPlaceEvent_js_1.default;
                block.BlockPhysicsEvent = BlockPhysicsEvent_js_1.default;
                block.BlockPistonEvent = BlockPistonEvent_js_1.default;
                block.BlockPistonExtendEvent = BlockPistonExtendEvent_js_1.default;
                block.BlockPistonRetractEvent = BlockPistonRetractEvent_js_1.default;
                block.BlockPlaceEvent = BlockPlaceEvent_js_1.default;
                block.BlockRedstoneEvent = BlockRedstoneEvent_js_1.default;
                block.BlockShearEntityEvent = BlockShearEntityEvent_js_1.default;
                block.BlockSpreadEvent = BlockSpreadEvent_js_1.default;
                block.CauldronLevelChangeEvent = CauldronLevelChangeEvent_js_1.default;
                block.CauldronLevelChangeEvent$ChangeReason = CauldronLevelChangeEvent_ChangeReason_js_1.default;
                block.EntityBlockFormEvent = EntityBlockFormEvent_js_1.default;
                block.FluidLevelChangeEvent = FluidLevelChangeEvent_js_1.default;
                block.LeavesDecayEvent = LeavesDecayEvent_js_1.default;
                block.MoistureChangeEvent = MoistureChangeEvent_js_1.default;
                block.NotePlayEvent = NotePlayEvent_js_1.default;
                block.SignChangeEvent = SignChangeEvent_js_1.default;
                block.SpongeAbsorbEvent = SpongeAbsorbEvent_js_1.default;
            })(block = event.block || (event.block = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var advancement;
        (function (advancement) {
            advancement.Advancement = Advancement_js_1.default;
            advancement.AdvancementProgress = AdvancementProgress_js_1.default;
        })(advancement = bukkit.advancement || (bukkit.advancement = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var block;
        (function (block) {
            var data;
            (function (data) {
                data.Ageable = Ageable_js_2.default;
                data.AnaloguePowerable = AnaloguePowerable_js_1.default;
                data.Attachable = Attachable_js_1.default;
                data.Bisected = Bisected_js_1.default;
                data.Bisected$Half = Bisected_Half_js_1.default;
                data.BlockData = BlockData_js_1.default;
                data.Directional = Directional_js_2.default;
                data.FaceAttachable = FaceAttachable_js_1.default;
                data.FaceAttachable$AttachedFace = FaceAttachable_AttachedFace_js_1.default;
                data.Levelled = Levelled_js_1.default;
                data.Lightable = Lightable_js_1.default;
                data.MultipleFacing = MultipleFacing_js_1.default;
                data.Openable = Openable_js_2.default;
                data.Orientable = Orientable_js_1.default;
                data.Powerable = Powerable_js_1.default;
                data.Rail = Rail_js_1.default;
                data.Rail$Shape = Rail_Shape_js_1.default;
                data.Rotatable = Rotatable_js_1.default;
                data.Snowable = Snowable_js_1.default;
                data.Waterlogged = Waterlogged_js_1.default;
            })(data = block.data || (block.data = {}));
        })(block = bukkit.block || (bukkit.block = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var entity;
            (function (entity) {
                entity.AreaEffectCloudApplyEvent = AreaEffectCloudApplyEvent_js_1.default;
                entity.BatToggleSleepEvent = BatToggleSleepEvent_js_1.default;
                entity.CreatureSpawnEvent = CreatureSpawnEvent_js_1.default;
                entity.CreatureSpawnEvent$SpawnReason = CreatureSpawnEvent_SpawnReason_js_1.default;
                entity.CreeperPowerEvent = CreeperPowerEvent_js_1.default;
                entity.CreeperPowerEvent$PowerCause = CreeperPowerEvent_PowerCause_js_1.default;
                entity.EnderDragonChangePhaseEvent = EnderDragonChangePhaseEvent_js_1.default;
                entity.EntityAirChangeEvent = EntityAirChangeEvent_js_1.default;
                entity.EntityBreakDoorEvent = EntityBreakDoorEvent_js_1.default;
                entity.EntityBreedEvent = EntityBreedEvent_js_1.default;
                entity.EntityChangeBlockEvent = EntityChangeBlockEvent_js_1.default;
                entity.EntityCombustByBlockEvent = EntityCombustByBlockEvent_js_1.default;
                entity.EntityCombustByEntityEvent = EntityCombustByEntityEvent_js_1.default;
                entity.EntityCombustEvent = EntityCombustEvent_js_1.default;
                entity.EntityCreatePortalEvent = EntityCreatePortalEvent_js_1.default;
                entity.EntityDamageByBlockEvent = EntityDamageByBlockEvent_js_1.default;
                entity.EntityDamageByEntityEvent = EntityDamageByEntityEvent_js_1.default;
                entity.EntityDamageEvent = EntityDamageEvent_js_1.default;
                entity.EntityDamageEvent$DamageCause = EntityDamageEvent_DamageCause_js_1.default;
                entity.EntityDamageEvent$DamageModifier = EntityDamageEvent_DamageModifier_js_1.default;
                entity.EntityDeathEvent = EntityDeathEvent_js_1.default;
                entity.EntityDropItemEvent = EntityDropItemEvent_js_1.default;
                entity.EntityEnterBlockEvent = EntityEnterBlockEvent_js_1.default;
                entity.EntityEvent = EntityEvent_js_1.default;
                entity.EntityExplodeEvent = EntityExplodeEvent_js_1.default;
                entity.EntityInteractEvent = EntityInteractEvent_js_1.default;
                entity.EntityPickupItemEvent = EntityPickupItemEvent_js_1.default;
                entity.EntityPlaceEvent = EntityPlaceEvent_js_1.default;
                entity.EntityPortalEnterEvent = EntityPortalEnterEvent_js_1.default;
                entity.EntityPortalEvent = EntityPortalEvent_js_1.default;
                entity.EntityPortalExitEvent = EntityPortalExitEvent_js_1.default;
                entity.EntityPoseChangeEvent = EntityPoseChangeEvent_js_1.default;
                entity.EntityPotionEffectEvent = EntityPotionEffectEvent_js_1.default;
                entity.EntityPotionEffectEvent$Action = EntityPotionEffectEvent_Action_js_1.default;
                entity.EntityPotionEffectEvent$Cause = EntityPotionEffectEvent_Cause_js_1.default;
                entity.EntityRegainHealthEvent = EntityRegainHealthEvent_js_1.default;
                entity.EntityRegainHealthEvent$RegainReason = EntityRegainHealthEvent_RegainReason_js_1.default;
                entity.EntityResurrectEvent = EntityResurrectEvent_js_1.default;
                entity.EntityShootBowEvent = EntityShootBowEvent_js_1.default;
                entity.EntitySpawnEvent = EntitySpawnEvent_js_1.default;
                entity.EntityTameEvent = EntityTameEvent_js_1.default;
                entity.EntityTargetEvent = EntityTargetEvent_js_1.default;
                entity.EntityTargetEvent$TargetReason = EntityTargetEvent_TargetReason_js_1.default;
                entity.EntityTargetLivingEntityEvent = EntityTargetLivingEntityEvent_js_1.default;
                entity.EntityTeleportEvent = EntityTeleportEvent_js_1.default;
                entity.EntityToggleGlideEvent = EntityToggleGlideEvent_js_1.default;
                entity.EntityToggleSwimEvent = EntityToggleSwimEvent_js_1.default;
                entity.EntityTransformEvent = EntityTransformEvent_js_1.default;
                entity.EntityTransformEvent$TransformReason = EntityTransformEvent_TransformReason_js_1.default;
                entity.EntityUnleashEvent = EntityUnleashEvent_js_1.default;
                entity.EntityUnleashEvent$UnleashReason = EntityUnleashEvent_UnleashReason_js_1.default;
                entity.ExpBottleEvent = ExpBottleEvent_js_1.default;
                entity.ExplosionPrimeEvent = ExplosionPrimeEvent_js_1.default;
                entity.FireworkExplodeEvent = FireworkExplodeEvent_js_1.default;
                entity.FoodLevelChangeEvent = FoodLevelChangeEvent_js_1.default;
                entity.HorseJumpEvent = HorseJumpEvent_js_1.default;
                entity.ItemDespawnEvent = ItemDespawnEvent_js_1.default;
                entity.ItemMergeEvent = ItemMergeEvent_js_1.default;
                entity.ItemSpawnEvent = ItemSpawnEvent_js_1.default;
                entity.LingeringPotionSplashEvent = LingeringPotionSplashEvent_js_1.default;
                entity.PigZapEvent = PigZapEvent_js_1.default;
                entity.PigZombieAngerEvent = PigZombieAngerEvent_js_1.default;
                entity.PlayerDeathEvent = PlayerDeathEvent_js_1.default;
                entity.PlayerLeashEntityEvent = PlayerLeashEntityEvent_js_1.default;
                entity.PotionSplashEvent = PotionSplashEvent_js_1.default;
                entity.ProjectileHitEvent = ProjectileHitEvent_js_1.default;
                entity.ProjectileLaunchEvent = ProjectileLaunchEvent_js_1.default;
                entity.SheepDyeWoolEvent = SheepDyeWoolEvent_js_1.default;
                entity.SheepRegrowWoolEvent = SheepRegrowWoolEvent_js_1.default;
                entity.SlimeSplitEvent = SlimeSplitEvent_js_1.default;
                entity.SpawnerSpawnEvent = SpawnerSpawnEvent_js_1.default;
                entity.VillagerAcquireTradeEvent = VillagerAcquireTradeEvent_js_1.default;
                entity.VillagerCareerChangeEvent = VillagerCareerChangeEvent_js_1.default;
                entity.VillagerCareerChangeEvent$ChangeReason = VillagerCareerChangeEvent_ChangeReason_js_1.default;
                entity.VillagerReplenishTradeEvent = VillagerReplenishTradeEvent_js_1.default;
            })(entity = event.entity || (event.entity = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        bukkit.Art = Art_js_1.default;
        bukkit.Axis = Axis_js_1.default;
        bukkit.BanEntry = BanEntry_js_1.default;
        bukkit.BanList = BanList_js_1.default;
        bukkit.BanList$Type = BanList_Type_js_1.default;
        bukkit.BlockChangeDelegate = BlockChangeDelegate_js_1.default;
        bukkit.Bukkit = Bukkit_js_1.default;
        bukkit.ChatColor = ChatColor_js_2.default;
        bukkit.Chunk = Chunk_js_1.default;
        bukkit.ChunkSnapshot = ChunkSnapshot_js_1.default;
        bukkit.CoalType = CoalType_js_1.default;
        bukkit.Color = Color_js_1.default;
        bukkit.CropState = CropState_js_1.default;
        bukkit.Difficulty = Difficulty_js_1.default;
        bukkit.DyeColor = DyeColor_js_1.default;
        bukkit.Effect = Effect_js_1.default;
        bukkit.Effect$Type = Effect_Type_js_1.default;
        bukkit.EntityEffect = EntityEffect_js_1.default;
        bukkit.FireworkEffect = FireworkEffect_js_1.default;
        bukkit.FireworkEffect$Builder = FireworkEffect_Builder_js_1.default;
        bukkit.FireworkEffect$Type = FireworkEffect_Type_js_1.default;
        bukkit.FluidCollisionMode = FluidCollisionMode_js_1.default;
        bukkit.GameMode = GameMode_js_1.default;
        bukkit.GameRule = GameRule_js_1.default;
        bukkit.GrassSpecies = GrassSpecies_js_1.default;
        bukkit.HeightMap = HeightMap_js_1.default;
        bukkit.Instrument = Instrument_js_1.default;
        bukkit.Keyed = Keyed_js_1.default;
        bukkit.Location = Location_js_1.default;
        bukkit.Material = Material_js_1.default;
        bukkit.Nameable = Nameable_js_1.default;
        bukkit.NamespacedKey = NamespacedKey_js_1.default;
        bukkit.NetherWartsState = NetherWartsState_js_1.default;
        bukkit.Note = Note_js_1.default;
        bukkit.Note$Tone = Note_Tone_js_1.default;
        bukkit.OfflinePlayer = OfflinePlayer_js_1.default;
        bukkit.Particle = Particle_js_1.default;
        bukkit.PortalType = PortalType_js_1.default;
        bukkit.Raid = Raid_js_1.default;
        bukkit.Raid$RaidStatus = Raid_RaidStatus_js_1.default;
        bukkit.Registry = Registry_js_1.default;
        bukkit.Rotation = Rotation_js_1.default;
        bukkit.SandstoneType = SandstoneType_js_1.default;
        bukkit.Server = Server_js_1.default;
        bukkit.Server$Spigot = Server_Spigot_js_1.default;
        bukkit.SkullType = SkullType_js_1.default;
        bukkit.Sound = Sound_js_1.default;
        bukkit.SoundCategory = SoundCategory_js_1.default;
        bukkit.SoundGroup = SoundGroup_js_1.default;
        bukkit.Statistic = Statistic_js_1.default;
        bukkit.Statistic$Type = Statistic_Type_js_1.default;
        bukkit.StructureType = StructureType_js_1.default;
        bukkit.Tag = Tag_js_1.default;
        bukkit.TreeSpecies = TreeSpecies_js_1.default;
        bukkit.TreeType = TreeType_js_1.default;
        bukkit.UndefinedNullability = UndefinedNullability_js_1.default;
        bukkit.UnsafeValues = UnsafeValues_js_1.default;
        bukkit.Utility = Utility_js_1.default;
        bukkit.Warning = Warning_js_1.default;
        bukkit.Warning$WarningState = Warning_WarningState_js_1.default;
        bukkit.WeatherType = WeatherType_js_1.default;
        bukkit.World = World_js_1.default;
        bukkit.World$Environment = World_Environment_js_1.default;
        bukkit.World$Spigot = World_Spigot_js_1.default;
        bukkit.WorldBorder = WorldBorder_js_1.default;
        bukkit.WorldCreator = WorldCreator_js_1.default;
        bukkit.WorldType = WorldType_js_1.default;
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var player;
            (function (player) {
                player.AsyncPlayerChatEvent = AsyncPlayerChatEvent_js_1.default;
                player.AsyncPlayerPreLoginEvent = AsyncPlayerPreLoginEvent_js_1.default;
                player.AsyncPlayerPreLoginEvent$Result = AsyncPlayerPreLoginEvent_Result_js_1.default;
                player.PlayerAdvancementDoneEvent = PlayerAdvancementDoneEvent_js_1.default;
                player.PlayerAnimationEvent = PlayerAnimationEvent_js_1.default;
                player.PlayerAnimationType = PlayerAnimationType_js_1.default;
                player.PlayerArmorStandManipulateEvent = PlayerArmorStandManipulateEvent_js_1.default;
                player.PlayerBedEnterEvent = PlayerBedEnterEvent_js_1.default;
                player.PlayerBedEnterEvent$BedEnterResult = PlayerBedEnterEvent_BedEnterResult_js_1.default;
                player.PlayerBedLeaveEvent = PlayerBedLeaveEvent_js_1.default;
                player.PlayerBucketEmptyEvent = PlayerBucketEmptyEvent_js_1.default;
                player.PlayerBucketEvent = PlayerBucketEvent_js_1.default;
                player.PlayerBucketFillEvent = PlayerBucketFillEvent_js_1.default;
                player.PlayerChangedMainHandEvent = PlayerChangedMainHandEvent_js_1.default;
                player.PlayerChangedWorldEvent = PlayerChangedWorldEvent_js_1.default;
                player.PlayerChannelEvent = PlayerChannelEvent_js_1.default;
                player.PlayerChatEvent = PlayerChatEvent_js_1.default;
                player.PlayerChatTabCompleteEvent = PlayerChatTabCompleteEvent_js_1.default;
                player.PlayerCommandPreprocessEvent = PlayerCommandPreprocessEvent_js_1.default;
                player.PlayerCommandSendEvent = PlayerCommandSendEvent_js_1.default;
                player.PlayerDropItemEvent = PlayerDropItemEvent_js_1.default;
                player.PlayerEditBookEvent = PlayerEditBookEvent_js_1.default;
                player.PlayerEggThrowEvent = PlayerEggThrowEvent_js_1.default;
                player.PlayerEvent = PlayerEvent_js_1.default;
                player.PlayerExpChangeEvent = PlayerExpChangeEvent_js_1.default;
                player.PlayerFishEvent = PlayerFishEvent_js_1.default;
                player.PlayerFishEvent$State = PlayerFishEvent_State_js_1.default;
                player.PlayerGameModeChangeEvent = PlayerGameModeChangeEvent_js_1.default;
                player.PlayerInteractAtEntityEvent = PlayerInteractAtEntityEvent_js_1.default;
                player.PlayerInteractEntityEvent = PlayerInteractEntityEvent_js_1.default;
                player.PlayerInteractEvent = PlayerInteractEvent_js_1.default;
                player.PlayerItemBreakEvent = PlayerItemBreakEvent_js_1.default;
                player.PlayerItemConsumeEvent = PlayerItemConsumeEvent_js_1.default;
                player.PlayerItemDamageEvent = PlayerItemDamageEvent_js_1.default;
                player.PlayerItemHeldEvent = PlayerItemHeldEvent_js_1.default;
                player.PlayerItemMendEvent = PlayerItemMendEvent_js_1.default;
                player.PlayerJoinEvent = PlayerJoinEvent_js_1.default;
                player.PlayerKickEvent = PlayerKickEvent_js_1.default;
                player.PlayerLevelChangeEvent = PlayerLevelChangeEvent_js_1.default;
                player.PlayerLocaleChangeEvent = PlayerLocaleChangeEvent_js_1.default;
                player.PlayerLoginEvent = PlayerLoginEvent_js_1.default;
                player.PlayerLoginEvent$Result = PlayerLoginEvent_Result_js_1.default;
                player.PlayerMoveEvent = PlayerMoveEvent_js_1.default;
                player.PlayerPickupArrowEvent = PlayerPickupArrowEvent_js_1.default;
                player.PlayerPickupItemEvent = PlayerPickupItemEvent_js_1.default;
                player.PlayerPortalEvent = PlayerPortalEvent_js_1.default;
                player.PlayerPreLoginEvent = PlayerPreLoginEvent_js_1.default;
                player.PlayerPreLoginEvent$Result = PlayerPreLoginEvent_Result_js_1.default;
                player.PlayerQuitEvent = PlayerQuitEvent_js_1.default;
                player.PlayerRecipeDiscoverEvent = PlayerRecipeDiscoverEvent_js_1.default;
                player.PlayerRegisterChannelEvent = PlayerRegisterChannelEvent_js_1.default;
                player.PlayerResourcePackStatusEvent = PlayerResourcePackStatusEvent_js_1.default;
                player.PlayerResourcePackStatusEvent$Status = PlayerResourcePackStatusEvent_Status_js_1.default;
                player.PlayerRespawnEvent = PlayerRespawnEvent_js_1.default;
                player.PlayerRiptideEvent = PlayerRiptideEvent_js_1.default;
                player.PlayerShearEntityEvent = PlayerShearEntityEvent_js_1.default;
                player.PlayerStatisticIncrementEvent = PlayerStatisticIncrementEvent_js_1.default;
                player.PlayerSwapHandItemsEvent = PlayerSwapHandItemsEvent_js_1.default;
                player.PlayerTakeLecternBookEvent = PlayerTakeLecternBookEvent_js_1.default;
                player.PlayerTeleportEvent = PlayerTeleportEvent_js_1.default;
                player.PlayerTeleportEvent$TeleportCause = PlayerTeleportEvent_TeleportCause_js_1.default;
                player.PlayerToggleFlightEvent = PlayerToggleFlightEvent_js_1.default;
                player.PlayerToggleSneakEvent = PlayerToggleSneakEvent_js_1.default;
                player.PlayerToggleSprintEvent = PlayerToggleSprintEvent_js_1.default;
                player.PlayerUnleashEntityEvent = PlayerUnleashEntityEvent_js_1.default;
                player.PlayerUnregisterChannelEvent = PlayerUnregisterChannelEvent_js_1.default;
                player.PlayerVelocityEvent = PlayerVelocityEvent_js_1.default;
            })(player = event.player || (event.player = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (java) {
    var nio;
    (function (nio) {
        var channels;
        (function (channels) {
            channels.AsynchronousChannel = AsynchronousChannel_js_1.default;
            channels.AsynchronousFileChannel = AsynchronousFileChannel_js_1.default;
            channels.ByteChannel = ByteChannel_js_1.default;
            channels.Channel = Channel_js_1.default;
            channels.CompletionHandler = CompletionHandler_js_1.default;
            channels.FileChannel = FileChannel_js_1.default;
            channels.FileChannel$MapMode = FileChannel_MapMode_js_1.default;
            channels.FileLock = FileLock_js_1.default;
            channels.GatheringByteChannel = GatheringByteChannel_js_1.default;
            channels.InterruptibleChannel = InterruptibleChannel_js_1.default;
            channels.ReadableByteChannel = ReadableByteChannel_js_1.default;
            channels.ScatteringByteChannel = ScatteringByteChannel_js_1.default;
            channels.SeekableByteChannel = SeekableByteChannel_js_1.default;
            channels.WritableByteChannel = WritableByteChannel_js_1.default;
        })(channels = nio.channels || (nio.channels = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var material;
        (function (material) {
            material.Attachable = Attachable_js_2.default;
            material.Banner = Banner_js_1.default;
            material.Bed = Bed_js_1.default;
            material.Button = Button_js_1.default;
            material.Cake = Cake_js_1.default;
            material.Cauldron = Cauldron_js_1.default;
            material.Chest = Chest_js_1.default;
            material.Coal = Coal_js_1.default;
            material.CocoaPlant = CocoaPlant_js_1.default;
            material.CocoaPlant$CocoaPlantSize = CocoaPlant_CocoaPlantSize_js_1.default;
            material.Colorable = Colorable_js_1.default;
            material.Command = Command_js_2.default;
            material.Comparator = Comparator_js_1.default;
            material.Crops = Crops_js_1.default;
            material.DetectorRail = DetectorRail_js_1.default;
            material.Diode = Diode_js_1.default;
            material.Directional = Directional_js_1.default;
            material.DirectionalContainer = DirectionalContainer_js_1.default;
            material.Dispenser = Dispenser_js_1.default;
            material.Door = Door_js_1.default;
            material.Dye = Dye_js_1.default;
            material.EnderChest = EnderChest_js_1.default;
            material.ExtendedRails = ExtendedRails_js_1.default;
            material.FlowerPot = FlowerPot_js_1.default;
            material.Furnace = Furnace_js_2.default;
            material.FurnaceAndDispenser = FurnaceAndDispenser_js_1.default;
            material.Gate = Gate_js_1.default;
            material.Hopper = Hopper_js_1.default;
            material.Ladder = Ladder_js_1.default;
            material.Leaves = Leaves_js_1.default;
            material.Lever = Lever_js_1.default;
            material.LongGrass = LongGrass_js_1.default;
            material.MaterialData = MaterialData_js_1.default;
            material.MonsterEggs = MonsterEggs_js_1.default;
            material.Mushroom = Mushroom_js_1.default;
            material.NetherWarts = NetherWarts_js_1.default;
            material.Observer = Observer_js_1.default;
            material.Openable = Openable_js_1.default;
            material.PistonBaseMaterial = PistonBaseMaterial_js_1.default;
            material.PistonExtensionMaterial = PistonExtensionMaterial_js_1.default;
            material.PoweredRail = PoweredRail_js_1.default;
            material.PressurePlate = PressurePlate_js_1.default;
            material.PressureSensor = PressureSensor_js_1.default;
            material.Pumpkin = Pumpkin_js_1.default;
            material.Rails = Rails_js_1.default;
            material.Redstone = Redstone_js_1.default;
            material.RedstoneTorch = RedstoneTorch_js_1.default;
            material.RedstoneWire = RedstoneWire_js_1.default;
            material.Sandstone = Sandstone_js_1.default;
            material.Sapling = Sapling_js_2.default;
            material.Sign = Sign_js_1.default;
            material.SimpleAttachableMaterialData = SimpleAttachableMaterialData_js_1.default;
            material.Skull = Skull_js_1.default;
            material.SmoothBrick = SmoothBrick_js_1.default;
            material.SpawnEgg = SpawnEgg_js_1.default;
            material.Stairs = Stairs_js_1.default;
            material.Step = Step_js_1.default;
            material.TexturedMaterial = TexturedMaterial_js_1.default;
            material.Torch = Torch_js_1.default;
            material.TrapDoor = TrapDoor_js_1.default;
            material.Tree = Tree_js_1.default;
            material.Tripwire = Tripwire_js_1.default;
            material.TripwireHook = TripwireHook_js_1.default;
            material.Vine = Vine_js_1.default;
            material.Wood = Wood_js_1.default;
            material.WoodenStep = WoodenStep_js_1.default;
            material.Wool = Wool_js_1.default;
        })(material = bukkit.material || (bukkit.material = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var attribute;
        (function (attribute) {
            attribute.Attributable = Attributable_js_1.default;
            attribute.Attribute = Attribute_js_1.default;
            attribute.AttributeInstance = AttributeInstance_js_1.default;
            attribute.AttributeModifier = AttributeModifier_js_1.default;
            attribute.AttributeModifier$Operation = AttributeModifier_Operation_js_1.default;
        })(attribute = bukkit.attribute || (bukkit.attribute = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (java) {
    var nio;
    (function (nio) {
        var file;
        (function (file) {
            var attribute;
            (function (attribute) {
                attribute.AttributeView = AttributeView_js_1.default;
                attribute.BasicFileAttributes = BasicFileAttributes_js_1.default;
                attribute.FileAttribute = FileAttribute_js_1.default;
                attribute.FileAttributeView = FileAttributeView_js_1.default;
                attribute.FileStoreAttributeView = FileStoreAttributeView_js_1.default;
                attribute.FileTime = FileTime_js_1.default;
                attribute.GroupPrincipal = GroupPrincipal_js_1.default;
                attribute.UserPrincipal = UserPrincipal_js_1.default;
                attribute.UserPrincipalLookupService = UserPrincipalLookupService_js_1.default;
            })(attribute = file.attribute || (file.attribute = {}));
        })(file = nio.file || (nio.file = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var plugin;
        (function (plugin) {
            plugin.AuthorNagException = AuthorNagException_js_1.default;
            plugin.EventExecutor = EventExecutor_js_1.default;
            plugin.IllegalPluginAccessException = IllegalPluginAccessException_js_1.default;
            plugin.InvalidDescriptionException = InvalidDescriptionException_js_1.default;
            plugin.InvalidPluginException = InvalidPluginException_js_1.default;
            plugin.Plugin = Plugin_js_1.default;
            plugin.PluginAwareness = PluginAwareness_js_1.default;
            plugin.PluginBase = PluginBase_js_1.default;
            plugin.PluginDescriptionFile = PluginDescriptionFile_js_1.default;
            plugin.PluginLoadOrder = PluginLoadOrder_js_1.default;
            plugin.PluginLoader = PluginLoader_js_1.default;
            plugin.PluginLogger = PluginLogger_js_1.default;
            plugin.PluginManager = PluginManager_js_1.default;
            plugin.RegisteredListener = RegisteredListener_js_1.default;
            plugin.RegisteredServiceProvider = RegisteredServiceProvider_js_1.default;
            plugin.ServicePriority = ServicePriority_js_1.default;
            plugin.ServicesManager = ServicesManager_js_1.default;
            plugin.SimplePluginManager = SimplePluginManager_js_1.default;
            plugin.SimpleServicesManager = SimpleServicesManager_js_1.default;
            plugin.TimedRegisteredListener = TimedRegisteredListener_js_1.default;
            plugin.UnknownDependencyException = UnknownDependencyException_js_1.default;
        })(plugin = bukkit.plugin || (bukkit.plugin = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
var khttp;
(function (khttp) {
    var structures;
    (function (structures) {
        var authorization;
        (function (authorization) {
            authorization.Authorization = Authorization_js_1.default;
            authorization.BasicAuthorization = BasicAuthorization_js_1.default;
        })(authorization = structures.authorization || (structures.authorization = {}));
    })(structures = khttp.structures || (khttp.structures = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var block;
        (function (block) {
            var data;
            (function (data) {
                var type;
                (function (type) {
                    type.Bamboo = Bamboo_js_1.default;
                    type.Bamboo$Leaves = Bamboo_Leaves_js_1.default;
                    type.Bed = Bed_js_3.default;
                    type.Bed$Part = Bed_Part_js_1.default;
                    type.Beehive = Beehive_js_2.default;
                    type.Bell = Bell_js_2.default;
                    type.Bell$Attachment = Bell_Attachment_js_1.default;
                    type.BrewingStand = BrewingStand_js_2.default;
                    type.BubbleColumn = BubbleColumn_js_1.default;
                    type.Cake = Cake_js_2.default;
                    type.Campfire = Campfire_js_2.default;
                    type.Chest = Chest_js_3.default;
                    type.Chest$Type = Chest_Type_js_1.default;
                    type.Cocoa = Cocoa_js_1.default;
                    type.CommandBlock = CommandBlock_js_2.default;
                    type.Comparator = Comparator_js_3.default;
                    type.Comparator$Mode = Comparator_Mode_js_1.default;
                    type.CoralWallFan = CoralWallFan_js_1.default;
                    type.DaylightDetector = DaylightDetector_js_1.default;
                    type.Dispenser = Dispenser_js_2.default;
                    type.Door = Door_js_2.default;
                    type.Door$Hinge = Door_Hinge_js_1.default;
                    type.EndPortalFrame = EndPortalFrame_js_1.default;
                    type.EnderChest = EnderChest_js_2.default;
                    type.Farmland = Farmland_js_1.default;
                    type.Fence = Fence_js_1.default;
                    type.Fire = Fire_js_1.default;
                    type.Furnace = Furnace_js_3.default;
                    type.Gate = Gate_js_2.default;
                    type.GlassPane = GlassPane_js_1.default;
                    type.Hopper = Hopper_js_2.default;
                    type.Jukebox = Jukebox_js_1.default;
                    type.Ladder = Ladder_js_2.default;
                    type.Lantern = Lantern_js_1.default;
                    type.Leaves = Leaves_js_2.default;
                    type.Lectern = Lectern_js_1.default;
                    type.NoteBlock = NoteBlock_js_1.default;
                    type.Observer = Observer_js_2.default;
                    type.Piston = Piston_js_1.default;
                    type.PistonHead = PistonHead_js_1.default;
                    type.RedstoneRail = RedstoneRail_js_1.default;
                    type.RedstoneWallTorch = RedstoneWallTorch_js_1.default;
                    type.RedstoneWire = RedstoneWire_js_2.default;
                    type.RedstoneWire$Connection = RedstoneWire_Connection_js_1.default;
                    type.Repeater = Repeater_js_1.default;
                    type.Sapling = Sapling_js_1.default;
                    type.Scaffolding = Scaffolding_js_1.default;
                    type.SeaPickle = SeaPickle_js_1.default;
                    type.Sign = Sign_js_2.default;
                    type.Slab = Slab_js_1.default;
                    type.Slab$Type = Slab_Type_js_1.default;
                    type.Snow = Snow_js_1.default;
                    type.Stairs = Stairs_js_2.default;
                    type.Stairs$Shape = Stairs_Shape_js_1.default;
                    type.StructureBlock = StructureBlock_js_1.default;
                    type.StructureBlock$Mode = StructureBlock_Mode_js_1.default;
                    type.Switch = Switch_js_1.default;
                    type.Switch$Face = Switch_Face_js_1.default;
                    type.TNT = TNT_js_1.default;
                    type.TechnicalPiston = TechnicalPiston_js_1.default;
                    type.TechnicalPiston$Type = TechnicalPiston_Type_js_1.default;
                    type.TrapDoor = TrapDoor_js_2.default;
                    type.Tripwire = Tripwire_js_2.default;
                    type.TripwireHook = TripwireHook_js_2.default;
                    type.TurtleEgg = TurtleEgg_js_1.default;
                    type.WallSign = WallSign_js_1.default;
                })(type = data.type || (data.type = {}));
            })(data = block.data || (block.data = {}));
        })(block = bukkit.block || (bukkit.block = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var block;
        (function (block) {
            block.Banner = Banner_js_2.default;
            block.Barrel = Barrel_js_1.default;
            block.Beacon = Beacon_js_1.default;
            block.Bed = Bed_js_2.default;
            block.Beehive = Beehive_js_1.default;
            block.Bell = Bell_js_1.default;
            block.Biome = Biome_js_1.default;
            block.BlastFurnace = BlastFurnace_js_1.default;
            block.Block = Block_js_1.default;
            block.BlockFace = BlockFace_js_1.default;
            block.BlockState = BlockState_js_1.default;
            block.BrewingStand = BrewingStand_js_1.default;
            block.Campfire = Campfire_js_1.default;
            block.Chest = Chest_js_2.default;
            block.CommandBlock = CommandBlock_js_1.default;
            block.Comparator = Comparator_js_2.default;
            block.Conduit = Conduit_js_1.default;
            block.Container = Container_js_1.default;
            block.CreatureSpawner = CreatureSpawner_js_1.default;
            block.DaylightDetector = DaylightDetector_js_2.default;
            block.Dispenser = Dispenser_js_3.default;
            block.DoubleChest = DoubleChest_js_1.default;
            block.Dropper = Dropper_js_1.default;
            block.EnchantingTable = EnchantingTable_js_1.default;
            block.EndGateway = EndGateway_js_1.default;
            block.EnderChest = EnderChest_js_3.default;
            block.EntityBlockStorage = EntityBlockStorage_js_1.default;
            block.Furnace = Furnace_js_1.default;
            block.Hopper = Hopper_js_3.default;
            block.Jigsaw = Jigsaw_js_1.default;
            block.Jukebox = Jukebox_js_2.default;
            block.Lectern = Lectern_js_2.default;
            block.Lidded = Lidded_js_1.default;
            block.Lockable = Lockable_js_1.default;
            block.PistonMoveReaction = PistonMoveReaction_js_1.default;
            block.ShulkerBox = ShulkerBox_js_1.default;
            block.Sign = Sign_js_3.default;
            block.Skull = Skull_js_2.default;
            block.Smoker = Smoker_js_1.default;
            block.Structure = Structure_js_1.default;
            block.TileState = TileState_js_1.default;
        })(block = bukkit.block || (bukkit.block = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var inventory;
        (function (inventory) {
            var meta;
            (function (meta) {
                meta.BannerMeta = BannerMeta_js_1.default;
                meta.BlockDataMeta = BlockDataMeta_js_1.default;
                meta.BlockStateMeta = BlockStateMeta_js_1.default;
                meta.BookMeta = BookMeta_js_1.default;
                meta.BookMeta$Generation = BookMeta_Generation_js_1.default;
                meta.BookMeta$Spigot = BookMeta_Spigot_js_1.default;
                meta.CrossbowMeta = CrossbowMeta_js_1.default;
                meta.Damageable = Damageable_js_2.default;
                meta.EnchantmentStorageMeta = EnchantmentStorageMeta_js_1.default;
                meta.FireworkEffectMeta = FireworkEffectMeta_js_1.default;
                meta.FireworkMeta = FireworkMeta_js_1.default;
                meta.ItemMeta = ItemMeta_js_1.default;
                meta.KnowledgeBookMeta = KnowledgeBookMeta_js_1.default;
                meta.LeatherArmorMeta = LeatherArmorMeta_js_1.default;
                meta.MapMeta = MapMeta_js_1.default;
                meta.PotionMeta = PotionMeta_js_1.default;
                meta.Repairable = Repairable_js_1.default;
                meta.SkullMeta = SkullMeta_js_1.default;
                meta.SpawnEggMeta = SpawnEggMeta_js_1.default;
                meta.SuspiciousStewMeta = SuspiciousStewMeta_js_1.default;
                meta.TropicalFishBucketMeta = TropicalFishBucketMeta_js_1.default;
            })(meta = inventory.meta || (inventory.meta = {}));
        })(inventory = bukkit.inventory || (bukkit.inventory = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var boss;
        (function (boss) {
            boss.BarColor = BarColor_js_1.default;
            boss.BarFlag = BarFlag_js_1.default;
            boss.BarStyle = BarStyle_js_1.default;
            boss.BossBar = BossBar_js_1.default;
            boss.DragonBattle = DragonBattle_js_1.default;
            boss.DragonBattle$RespawnPhase = DragonBattle_RespawnPhase_js_1.default;
            boss.KeyedBossBar = KeyedBossBar_js_1.default;
        })(boss = bukkit.boss || (bukkit.boss = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
var com;
(function (com) {
    var pixlfox;
    (function (pixlfox) {
        var scriptablemc;
        (function (scriptablemc) {
            var acf;
            (function (acf) {
                acf.BaseCommand = BaseCommand_js_1.default;
                acf.BukkitCommandCompletionContext = BukkitCommandCompletionContext_js_1.default;
                acf.BukkitCommandExecutionContext = BukkitCommandExecutionContext_js_1.default;
                acf.BukkitCommandIssuer = BukkitCommandIssuer_js_1.default;
                acf.BukkitCommandManager = BukkitCommandManager_js_1.default;
                acf.BukkitConditionContext = BukkitConditionContext_js_1.default;
                acf.BukkitLocales = BukkitLocales_js_1.default;
                acf.BukkitRootCommand = BukkitRootCommand_js_1.default;
                acf.CommandCompletionContext = CommandCompletionContext_js_1.default;
                acf.CommandCompletions = CommandCompletions_js_1.default;
                acf.CommandCompletions$AsyncCommandCompletionHandler = CommandCompletions_AsyncCommandCompletionHandler_js_1.default;
                acf.CommandCompletions$CommandCompletionHandler = CommandCompletions_CommandCompletionHandler_js_1.default;
                acf.CommandConditions = CommandConditions_js_1.default;
                acf.CommandConditions$Condition = CommandConditions_Condition_js_1.default;
                acf.CommandConditions$ParameterCondition = CommandConditions_ParameterCondition_js_1.default;
                acf.CommandContexts = CommandContexts_js_1.default;
                acf.CommandExecutionContext = CommandExecutionContext_js_1.default;
                acf.CommandHelp = CommandHelp_js_1.default;
                acf.CommandHelpFormatter = CommandHelpFormatter_js_1.default;
                acf.CommandIssuer = CommandIssuer_js_1.default;
                acf.CommandManager = CommandManager_js_1.default;
                acf.CommandOperationContext = CommandOperationContext_js_1.default;
                acf.CommandParameter = CommandParameter_js_1.default;
                acf.CommandReplacements = CommandReplacements_js_1.default;
                acf.ConditionContext = ConditionContext_js_1.default;
                acf.ExceptionHandler = ExceptionHandler_js_1.default;
                acf.HelpEntry = HelpEntry_js_1.default;
                acf.IssuerLocaleChangedCallback = IssuerLocaleChangedCallback_js_1.default;
                acf.Locales = Locales_js_1.default;
                acf.LogLevel = LogLevel_js_1.default;
                acf.MessageFormatter = MessageFormatter_js_1.default;
                acf.MessageType = MessageType_js_1.default;
                acf.PaperCommandManager = PaperCommandManager_js_1.default;
                acf.RegisteredCommand = RegisteredCommand_js_1.default;
                acf.RootCommand = RootCommand_js_1.default;
            })(acf = scriptablemc.acf || (scriptablemc.acf = {}));
        })(scriptablemc = pixlfox.scriptablemc || (pixlfox.scriptablemc = {}));
    })(pixlfox = com.pixlfox || (com.pixlfox = {}));
})(com = exports.com || (exports.com = {}));
var net;
(function (net) {
    var md_5;
    (function (md_5) {
        var bungee;
        (function (bungee) {
            var api;
            (function (api) {
                var chat;
                (function (chat) {
                    chat.BaseComponent = BaseComponent_js_1.default;
                    chat.ClickEvent = ClickEvent_js_1.default;
                    chat.ClickEvent$Action = ClickEvent_Action_js_1.default;
                    chat.ComponentBuilder = ComponentBuilder_js_1.default;
                    chat.ComponentBuilder$FormatRetention = ComponentBuilder_FormatRetention_js_1.default;
                    chat.ComponentBuilder$Joiner = ComponentBuilder_Joiner_js_1.default;
                    chat.HoverEvent = HoverEvent_js_1.default;
                    chat.HoverEvent$Action = HoverEvent_Action_js_1.default;
                    chat.KeybindComponent = KeybindComponent_js_1.default;
                    chat.Keybinds = Keybinds_js_1.default;
                    chat.ScoreComponent = ScoreComponent_js_1.default;
                    chat.SelectorComponent = SelectorComponent_js_1.default;
                    chat.TextComponent = TextComponent_js_1.default;
                    chat.TranslatableComponent = TranslatableComponent_js_1.default;
                })(chat = api.chat || (api.chat = {}));
            })(api = bungee.api || (bungee.api = {}));
        })(bungee = md_5.bungee || (md_5.bungee = {}));
    })(md_5 = net.md_5 || (net.md_5 = {}));
})(net = exports.net || (exports.net = {}));
(function (java) {
    var sql;
    (function (sql) {
        sql.Blob = Blob_js_1.default;
        sql.CallableStatement = CallableStatement_js_1.default;
        sql.Clob = Clob_js_1.default;
        sql.Connection = Connection_js_1.default;
        sql.DatabaseMetaData = DatabaseMetaData_js_1.default;
        sql.Date = Date_js_1.default;
        sql.NClob = NClob_js_1.default;
        sql.ParameterMetaData = ParameterMetaData_js_1.default;
        sql.PreparedStatement = PreparedStatement_js_1.default;
        sql.Ref = Ref_js_1.default;
        sql.ResultSet = ResultSet_js_1.default;
        sql.ResultSetMetaData = ResultSetMetaData_js_1.default;
        sql.RowId = RowId_js_1.default;
        sql.RowIdLifetime = RowIdLifetime_js_1.default;
        sql.SQLException = SQLException_js_1.default;
        sql.SQLType = SQLType_js_1.default;
        sql.SQLWarning = SQLWarning_js_1.default;
        sql.SQLXML = SQLXML_js_1.default;
        sql.Savepoint = Savepoint_js_1.default;
        sql.Statement = Statement_js_1.default;
        sql.Struct = Struct_js_1.default;
        sql.Time = Time_js_1.default;
        sql.Timestamp = Timestamp_js_1.default;
        sql.Wrapper = Wrapper_js_1.default;
        sql._Array = Array_js_1.default;
    })(sql = java.sql || (java.sql = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var command;
        (function (command) {
            command.BlockCommandSender = BlockCommandSender_js_1.default;
            command.Command = Command_js_1.default;
            command.CommandException = CommandException_js_1.default;
            command.CommandExecutor = CommandExecutor_js_1.default;
            command.CommandMap = CommandMap_js_1.default;
            command.CommandSender = CommandSender_js_1.default;
            command.CommandSender$Spigot = CommandSender_Spigot_js_1.default;
            command.ConsoleCommandSender = ConsoleCommandSender_js_1.default;
            command.FormattedCommandAlias = FormattedCommandAlias_js_1.default;
            command.MultipleCommandAlias = MultipleCommandAlias_js_1.default;
            command.PluginCommand = PluginCommand_js_1.default;
            command.PluginCommandYamlParser = PluginCommandYamlParser_js_1.default;
            command.PluginIdentifiableCommand = PluginIdentifiableCommand_js_1.default;
            command.ProxiedCommandSender = ProxiedCommandSender_js_1.default;
            command.RemoteConsoleCommandSender = RemoteConsoleCommandSender_js_1.default;
            command.SimpleCommandMap = SimpleCommandMap_js_1.default;
            command.TabCompleter = TabCompleter_js_1.default;
            command.TabExecutor = TabExecutor_js_1.default;
        })(command = bukkit.command || (bukkit.command = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var util;
        (function (util) {
            util.BlockIterator = BlockIterator_js_1.default;
            util.BlockVector = BlockVector_js_1.default;
            util.BoundingBox = BoundingBox_js_1.default;
            util.CachedServerIcon = CachedServerIcon_js_1.default;
            util.ChatPaginator = ChatPaginator_js_1.default;
            util.ChatPaginator$ChatPage = ChatPaginator_ChatPage_js_1.default;
            util.Consumer = Consumer_js_1.default;
            util.EulerAngle = EulerAngle_js_1.default;
            util.FileUtil = FileUtil_js_1.default;
            util.NumberConversions = NumberConversions_js_1.default;
            util.RayTraceResult = RayTraceResult_js_1.default;
            util.StringUtil = StringUtil_js_1.default;
            util.Vector = Vector_js_1.default;
        })(util = bukkit.util || (bukkit.util = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var generator;
        (function (generator) {
            generator.BlockPopulator = BlockPopulator_js_1.default;
            generator.ChunkGenerator = ChunkGenerator_js_1.default;
            generator.ChunkGenerator$BiomeGrid = ChunkGenerator_BiomeGrid_js_1.default;
            generator.ChunkGenerator$ChunkData = ChunkGenerator_ChunkData_js_1.default;
        })(generator = bukkit.generator || (bukkit.generator = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var projectiles;
        (function (projectiles) {
            projectiles.BlockProjectileSource = BlockProjectileSource_js_1.default;
            projectiles.ProjectileSource = ProjectileSource_js_1.default;
        })(projectiles = bukkit.projectiles || (bukkit.projectiles = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var conversations;
        (function (conversations) {
            conversations.BooleanPrompt = BooleanPrompt_js_1.default;
            conversations.Conversable = Conversable_js_1.default;
            conversations.Conversation = Conversation_js_1.default;
            conversations.Conversation$ConversationState = Conversation_ConversationState_js_1.default;
            conversations.ConversationAbandonedEvent = ConversationAbandonedEvent_js_1.default;
            conversations.ConversationAbandonedListener = ConversationAbandonedListener_js_1.default;
            conversations.ConversationCanceller = ConversationCanceller_js_1.default;
            conversations.ConversationContext = ConversationContext_js_1.default;
            conversations.ConversationFactory = ConversationFactory_js_1.default;
            conversations.ConversationPrefix = ConversationPrefix_js_1.default;
            conversations.ExactMatchConversationCanceller = ExactMatchConversationCanceller_js_1.default;
            conversations.FixedSetPrompt = FixedSetPrompt_js_1.default;
            conversations.InactivityConversationCanceller = InactivityConversationCanceller_js_1.default;
            conversations.ManuallyAbandonedConversationCanceller = ManuallyAbandonedConversationCanceller_js_1.default;
            conversations.MessagePrompt = MessagePrompt_js_1.default;
            conversations.NullConversationPrefix = NullConversationPrefix_js_1.default;
            conversations.NumericPrompt = NumericPrompt_js_1.default;
            conversations.PlayerNamePrompt = PlayerNamePrompt_js_1.default;
            conversations.PluginNameConversationPrefix = PluginNameConversationPrefix_js_1.default;
            conversations.Prompt = Prompt_js_1.default;
            conversations.RegexPrompt = RegexPrompt_js_1.default;
            conversations.StringPrompt = StringPrompt_js_1.default;
            conversations.ValidatingPrompt = ValidatingPrompt_js_1.default;
        })(conversations = bukkit.conversations || (bukkit.conversations = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var inventory;
            (function (inventory) {
                inventory.BrewEvent = BrewEvent_js_1.default;
                inventory.BrewingStandFuelEvent = BrewingStandFuelEvent_js_1.default;
                inventory.ClickType = ClickType_js_1.default;
                inventory.CraftItemEvent = CraftItemEvent_js_1.default;
                inventory.DragType = DragType_js_1.default;
                inventory.FurnaceBurnEvent = FurnaceBurnEvent_js_1.default;
                inventory.FurnaceExtractEvent = FurnaceExtractEvent_js_1.default;
                inventory.FurnaceSmeltEvent = FurnaceSmeltEvent_js_1.default;
                inventory.InventoryAction = InventoryAction_js_1.default;
                inventory.InventoryClickEvent = InventoryClickEvent_js_1.default;
                inventory.InventoryCloseEvent = InventoryCloseEvent_js_1.default;
                inventory.InventoryCreativeEvent = InventoryCreativeEvent_js_1.default;
                inventory.InventoryDragEvent = InventoryDragEvent_js_1.default;
                inventory.InventoryEvent = InventoryEvent_js_1.default;
                inventory.InventoryInteractEvent = InventoryInteractEvent_js_1.default;
                inventory.InventoryMoveItemEvent = InventoryMoveItemEvent_js_1.default;
                inventory.InventoryOpenEvent = InventoryOpenEvent_js_1.default;
                inventory.InventoryPickupItemEvent = InventoryPickupItemEvent_js_1.default;
                inventory.InventoryType = InventoryType_js_1.default;
                inventory.InventoryType$SlotType = InventoryType_SlotType_js_1.default;
                inventory.PrepareAnvilEvent = PrepareAnvilEvent_js_1.default;
                inventory.PrepareItemCraftEvent = PrepareItemCraftEvent_js_1.default;
                inventory.TradeSelectEvent = TradeSelectEvent_js_1.default;
            })(inventory = event.inventory || (event.inventory = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var server;
            (function (server) {
                server.BroadcastMessageEvent = BroadcastMessageEvent_js_1.default;
                server.MapInitializeEvent = MapInitializeEvent_js_1.default;
                server.PluginDisableEvent = PluginDisableEvent_js_1.default;
                server.PluginEnableEvent = PluginEnableEvent_js_1.default;
                server.PluginEvent = PluginEvent_js_1.default;
                server.RemoteServerCommandEvent = RemoteServerCommandEvent_js_1.default;
                server.ServerCommandEvent = ServerCommandEvent_js_1.default;
                server.ServerEvent = ServerEvent_js_1.default;
                server.ServerListPingEvent = ServerListPingEvent_js_1.default;
                server.ServerLoadEvent = ServerLoadEvent_js_1.default;
                server.ServerLoadEvent$LoadType = ServerLoadEvent_LoadType_js_1.default;
                server.ServiceEvent = ServiceEvent_js_1.default;
                server.ServiceRegisterEvent = ServiceRegisterEvent_js_1.default;
                server.ServiceUnregisterEvent = ServiceUnregisterEvent_js_1.default;
                server.TabCompleteEvent = TabCompleteEvent_js_1.default;
            })(server = event.server || (event.server = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var util;
        (function (util) {
            var permissions;
            (function (permissions) {
                permissions.BroadcastPermissions = BroadcastPermissions_js_1.default;
                permissions.CommandPermissions = CommandPermissions_js_1.default;
                permissions.DefaultPermissions = DefaultPermissions_js_1.default;
            })(permissions = util.permissions || (util.permissions = {}));
        })(util = bukkit.util || (bukkit.util = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (java) {
    var nio;
    (function (nio) {
        nio.Buffer = Buffer_js_1.default;
        nio.ByteBuffer = ByteBuffer_js_1.default;
        nio.ByteOrder = ByteOrder_js_1.default;
        nio.CharBuffer = CharBuffer_js_1.default;
        nio.DoubleBuffer = DoubleBuffer_js_1.default;
        nio.FloatBuffer = FloatBuffer_js_1.default;
        nio.IntBuffer = IntBuffer_js_1.default;
        nio.LongBuffer = LongBuffer_js_1.default;
        nio.MappedByteBuffer = MappedByteBuffer_js_1.default;
        nio.ShortBuffer = ShortBuffer_js_1.default;
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var command;
        (function (command) {
            var defaults;
            (function (defaults) {
                defaults.BukkitCommand = BukkitCommand_js_1.default;
                defaults.HelpCommand = HelpCommand_js_1.default;
                defaults.PluginsCommand = PluginsCommand_js_1.default;
                defaults.ReloadCommand = ReloadCommand_js_1.default;
                defaults.TimingsCommand = TimingsCommand_js_1.default;
                defaults.VersionCommand = VersionCommand_js_1.default;
            })(defaults = command.defaults || (command.defaults = {}));
        })(command = bukkit.command || (bukkit.command = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var util;
        (function (util) {
            var io;
            (function (io) {
                io.BukkitObjectInputStream = BukkitObjectInputStream_js_1.default;
                io.BukkitObjectOutputStream = BukkitObjectOutputStream_js_1.default;
            })(io = util.io || (util.io = {}));
        })(util = bukkit.util || (bukkit.util = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var scheduler;
        (function (scheduler) {
            scheduler.BukkitRunnable = BukkitRunnable_js_1.default;
            scheduler.BukkitScheduler = BukkitScheduler_js_1.default;
            scheduler.BukkitTask = BukkitTask_js_1.default;
            scheduler.BukkitWorker = BukkitWorker_js_1.default;
        })(scheduler = bukkit.scheduler || (bukkit.scheduler = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var google;
    (function (google) {
        var common;
        (function (common) {
            var io;
            (function (io) {
                io.ByteArrayDataInput = ByteArrayDataInput_js_1.default;
                io.ByteArrayDataOutput = ByteArrayDataOutput_js_1.default;
                io.ByteProcessor = ByteProcessor_js_1.default;
                io.ByteStreams = ByteStreams_js_1.default;
            })(io = common.io || (common.io = {}));
        })(common = google.common || (google.common = {}));
    })(google = com.google || (com.google = {}));
})(com = exports.com || (exports.com = {}));
(function (java) {
    var io;
    (function (io) {
        io.ByteArrayInputStream = ByteArrayInputStream_js_1.default;
        io.ByteArrayOutputStream = ByteArrayOutputStream_js_1.default;
        io.Closeable = Closeable_js_1.default;
        io.DataInput = DataInput_js_1.default;
        io.DataOutput = DataOutput_js_1.default;
        io.File = File_js_1.default;
        io.FileDescriptor = FileDescriptor_js_1.default;
        io.FileFilter = FileFilter_js_1.default;
        io.FileInputStream = FileInputStream_js_1.default;
        io.FileOutputStream = FileOutputStream_js_1.default;
        io.FilenameFilter = FilenameFilter_js_1.default;
        io.FilterOutputStream = FilterOutputStream_js_1.default;
        io.Flushable = Flushable_js_1.default;
        io.InputStream = InputStream_js_1.default;
        io.ObjectInput = ObjectInput_js_1.default;
        io.ObjectInputStream = ObjectInputStream_js_1.default;
        io.ObjectInputStream$GetField = ObjectInputStream_GetField_js_1.default;
        io.ObjectInputValidation = ObjectInputValidation_js_1.default;
        io.ObjectOutput = ObjectOutput_js_1.default;
        io.ObjectOutputStream = ObjectOutputStream_js_1.default;
        io.ObjectOutputStream$PutField = ObjectOutputStream_PutField_js_1.default;
        io.ObjectStreamClass = ObjectStreamClass_js_1.default;
        io.ObjectStreamConstants = ObjectStreamConstants_js_1.default;
        io.ObjectStreamField = ObjectStreamField_js_1.default;
        io.OutputStream = OutputStream_js_1.default;
        io.PrintStream = PrintStream_js_1.default;
        io.PrintWriter = PrintWriter_js_1.default;
        io.Reader = Reader_js_1.default;
        io.Serializable = Serializable_js_1.default;
        io.SerializablePermission = SerializablePermission_js_1.default;
        io.Writer = Writer_js_1.default;
    })(io = java.io || (java.io = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            event.Cancellable = Cancellable_js_1.default;
            event.Event = Event_js_1.default;
            event.Event$Result = Event_Result_js_1.default;
            event.EventException = EventException_js_1.default;
            event.EventHandler = EventHandler_js_1.default;
            event.EventPriority = EventPriority_js_1.default;
            event.HandlerList = HandlerList_js_1.default;
            event.Listener = Listener_js_1.default;
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (khttp) {
    var structures;
    (function (structures) {
        var maps;
        (function (maps) {
            maps.CaseInsensitiveMap = CaseInsensitiveMap_js_1.default;
        })(maps = structures.maps || (structures.maps = {}));
    })(structures = khttp.structures || (khttp.structures = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var plugin;
        (function (plugin) {
            var messaging;
            (function (messaging) {
                messaging.ChannelNameTooLongException = ChannelNameTooLongException_js_1.default;
                messaging.ChannelNotRegisteredException = ChannelNotRegisteredException_js_1.default;
                messaging.MessageTooLargeException = MessageTooLargeException_js_1.default;
                messaging.Messenger = Messenger_js_1.default;
                messaging.PluginChannelDirection = PluginChannelDirection_js_1.default;
                messaging.PluginMessageListener = PluginMessageListener_js_1.default;
                messaging.PluginMessageListenerRegistration = PluginMessageListenerRegistration_js_1.default;
                messaging.PluginMessageRecipient = PluginMessageRecipient_js_1.default;
                messaging.ReservedChannelException = ReservedChannelException_js_1.default;
                messaging.StandardMessenger = StandardMessenger_js_1.default;
            })(messaging = plugin.messaging || (plugin.messaging = {}));
        })(plugin = bukkit.plugin || (bukkit.plugin = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (java) {
    var nio;
    (function (nio) {
        var charset;
        (function (charset) {
            charset.Charset = Charset_js_1.default;
            charset.CharsetDecoder = CharsetDecoder_js_1.default;
            charset.CharsetEncoder = CharsetEncoder_js_1.default;
            charset.CoderResult = CoderResult_js_1.default;
            charset.CodingErrorAction = CodingErrorAction_js_1.default;
        })(charset = nio.charset || (nio.charset = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (net) {
    var md_5;
    (function (md_5) {
        var bungee;
        (function (bungee) {
            var api;
            (function (api) {
                api.ChatColor = ChatColor_js_1.default;
                api.ChatMessageType = ChatMessageType_js_1.default;
            })(api = bungee.api || (bungee.api = {}));
        })(bungee = md_5.bungee || (md_5.bungee = {}));
    })(md_5 = net.md_5 || (net.md_5 = {}));
})(net = exports.net || (exports.net = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var world;
            (function (world) {
                world.ChunkEvent = ChunkEvent_js_1.default;
                world.ChunkLoadEvent = ChunkLoadEvent_js_1.default;
                world.ChunkPopulateEvent = ChunkPopulateEvent_js_1.default;
                world.ChunkUnloadEvent = ChunkUnloadEvent_js_1.default;
                world.PortalCreateEvent = PortalCreateEvent_js_1.default;
                world.PortalCreateEvent$CreateReason = PortalCreateEvent_CreateReason_js_1.default;
                world.SpawnChangeEvent = SpawnChangeEvent_js_1.default;
                world.StructureGrowEvent = StructureGrowEvent_js_1.default;
                world.TimeSkipEvent = TimeSkipEvent_js_1.default;
                world.TimeSkipEvent$SkipReason = TimeSkipEvent_SkipReason_js_1.default;
                world.WorldEvent = WorldEvent_js_1.default;
                world.WorldInitEvent = WorldInitEvent_js_1.default;
                world.WorldLoadEvent = WorldLoadEvent_js_1.default;
                world.WorldSaveEvent = WorldSaveEvent_js_1.default;
                world.WorldUnloadEvent = WorldUnloadEvent_js_1.default;
            })(world = event.world || (event.world = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
var fr;
(function (fr) {
    var minuskube;
    (function (minuskube) {
        var inv;
        (function (inv) {
            inv.ClickableItem = ClickableItem_js_1.default;
            inv.InventoryListener = InventoryListener_js_1.default;
            inv.InventoryManager = InventoryManager_js_1.default;
            inv.SmartInventory = SmartInventory_js_1.default;
            inv.SmartInventory$Builder = SmartInventory_Builder_js_1.default;
        })(inv = minuskube.inv || (minuskube.inv = {}));
    })(minuskube = fr.minuskube || (fr.minuskube = {}));
})(fr = exports.fr || (exports.fr = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var entity;
        (function (entity) {
            var minecart;
            (function (minecart) {
                minecart.CommandMinecart = CommandMinecart_js_1.default;
                minecart.ExplosiveMinecart = ExplosiveMinecart_js_1.default;
                minecart.HopperMinecart = HopperMinecart_js_1.default;
                minecart.PoweredMinecart = PoweredMinecart_js_1.default;
                minecart.RideableMinecart = RideableMinecart_js_1.default;
                minecart.SpawnerMinecart = SpawnerMinecart_js_1.default;
                minecart.StorageMinecart = StorageMinecart_js_1.default;
            })(minecart = entity.minecart || (entity.minecart = {}));
        })(entity = bukkit.entity || (bukkit.entity = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var configuration;
        (function (configuration) {
            configuration.Configuration = Configuration_js_1.default;
            configuration.ConfigurationOptions = ConfigurationOptions_js_1.default;
            configuration.ConfigurationSection = ConfigurationSection_js_1.default;
            configuration.InvalidConfigurationException = InvalidConfigurationException_js_1.default;
            configuration.MemoryConfiguration = MemoryConfiguration_js_1.default;
            configuration.MemoryConfigurationOptions = MemoryConfigurationOptions_js_1.default;
            configuration.MemorySection = MemorySection_js_1.default;
        })(configuration = bukkit.configuration || (bukkit.configuration = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var configuration;
        (function (configuration) {
            var serialization;
            (function (serialization) {
                serialization.ConfigurationSerializable = ConfigurationSerializable_js_1.default;
                serialization.ConfigurationSerialization = ConfigurationSerialization_js_1.default;
                serialization.DelegateDeserialization = DelegateDeserialization_js_1.default;
                serialization.SerializableAs = SerializableAs_js_1.default;
            })(serialization = configuration.serialization || (configuration.serialization = {}));
        })(configuration = bukkit.configuration || (bukkit.configuration = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (net) {
    var md_5;
    (function (md_5) {
        var bungee;
        (function (bungee) {
            var api;
            (function (api) {
                var chat;
                (function (chat) {
                    var hover;
                    (function (hover) {
                        var content;
                        (function (content) {
                            content.Content = Content_js_1.default;
                        })(content = hover.content || (hover.content = {}));
                    })(hover = chat.hover || (chat.hover = {}));
                })(chat = api.chat || (api.chat = {}));
            })(api = bungee.api || (bungee.api = {}));
        })(bungee = md_5.bungee || (md_5.bungee = {}));
    })(md_5 = net.md_5 || (net.md_5 = {}));
})(net = exports.net || (exports.net = {}));
(function (com) {
    var pixlfox;
    (function (pixlfox) {
        var scriptablemc;
        (function (scriptablemc) {
            var acf;
            (function (acf) {
                var contexts;
                (function (contexts) {
                    contexts.ContextResolver = ContextResolver_js_1.default;
                    contexts.IssuerAwareContextResolver = IssuerAwareContextResolver_js_1.default;
                    contexts.IssuerOnlyContextResolver = IssuerOnlyContextResolver_js_1.default;
                    contexts.OptionalContextResolver = OptionalContextResolver_js_1.default;
                })(contexts = acf.contexts || (acf.contexts = {}));
            })(acf = scriptablemc.acf || (scriptablemc.acf = {}));
        })(scriptablemc = pixlfox.scriptablemc || (pixlfox.scriptablemc = {}));
    })(pixlfox = com.pixlfox || (com.pixlfox = {}));
})(com = exports.com || (exports.com = {}));
(function (khttp) {
    var structures;
    (function (structures) {
        var cookie;
        (function (cookie) {
            cookie.Cookie = Cookie_js_1.default;
            cookie.CookieJar = CookieJar_js_1.default;
        })(cookie = structures.cookie || (structures.cookie = {}));
    })(structures = khttp.structures || (khttp.structures = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var scoreboard;
        (function (scoreboard) {
            scoreboard.Criterias = Criterias_js_1.default;
            scoreboard.DisplaySlot = DisplaySlot_js_1.default;
            scoreboard.NameTagVisibility = NameTagVisibility_js_1.default;
            scoreboard.Objective = Objective_js_1.default;
            scoreboard.RenderType = RenderType_js_1.default;
            scoreboard.Score = Score_js_1.default;
            scoreboard.Scoreboard = Scoreboard_js_1.default;
            scoreboard.ScoreboardManager = ScoreboardManager_js_1.default;
            scoreboard.Team = Team_js_1.default;
            scoreboard.Team$Option = Team_Option_js_1.default;
            scoreboard.Team$OptionStatus = Team_OptionStatus_js_1.default;
        })(scoreboard = bukkit.scoreboard || (bukkit.scoreboard = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var inventory;
        (function (inventory) {
            var meta;
            (function (meta) {
                var tags;
                (function (tags) {
                    tags.CustomItemTagContainer = CustomItemTagContainer_js_1.default;
                    tags.ItemTagAdapterContext = ItemTagAdapterContext_js_1.default;
                    tags.ItemTagType = ItemTagType_js_1.default;
                })(tags = meta.tags || (meta.tags = {}));
            })(meta = inventory.meta || (inventory.meta = {}));
        })(inventory = bukkit.inventory || (bukkit.inventory = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var enchantment;
            (function (enchantment) {
                enchantment.EnchantItemEvent = EnchantItemEvent_js_1.default;
                enchantment.PrepareItemEnchantEvent = PrepareItemEnchantEvent_js_1.default;
            })(enchantment = event.enchantment || (event.enchantment = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var enchantments;
        (function (enchantments) {
            enchantments.Enchantment = Enchantment_js_1.default;
            enchantments.EnchantmentOffer = EnchantmentOffer_js_1.default;
            enchantments.EnchantmentTarget = EnchantmentTarget_js_1.default;
            enchantments.EnchantmentWrapper = EnchantmentWrapper_js_1.default;
        })(enchantments = bukkit.enchantments || (bukkit.enchantments = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var configuration;
        (function (configuration) {
            var file;
            (function (file) {
                file.FileConfiguration = FileConfiguration_js_1.default;
                file.FileConfigurationOptions = FileConfigurationOptions_js_1.default;
                file.YamlConfiguration = YamlConfiguration_js_1.default;
                file.YamlConfigurationOptions = YamlConfigurationOptions_js_1.default;
                file.YamlConstructor = YamlConstructor_js_1.default;
                file.YamlRepresenter = YamlRepresenter_js_1.default;
            })(file = configuration.file || (configuration.file = {}));
        })(configuration = bukkit.configuration || (bukkit.configuration = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (khttp) {
    var structures;
    (function (structures) {
        var files;
        (function (files) {
            files.FileLike = FileLike_js_1.default;
        })(files = structures.files || (structures.files = {}));
    })(structures = khttp.structures || (khttp.structures = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (java) {
    var nio;
    (function (nio) {
        var file;
        (function (file) {
            var spi;
            (function (spi) {
                spi.FileSystemProvider = FileSystemProvider_js_1.default;
            })(spi = file.spi || (file.spi = {}));
        })(file = nio.file || (nio.file = {}));
    })(nio = java.nio || (java.nio = {}));
})(java = exports.java || (exports.java = {}));
(function (org) {
    var apache;
    (function (apache) {
        var commons;
        (function (commons) {
            var io;
            (function (io) {
                io.FileUtils = FileUtils_js_1.default;
                io.LineIterator = LineIterator_js_1.default;
            })(io = commons.io || (commons.io = {}));
        })(commons = apache.commons || (apache.commons = {}));
    })(apache = org.apache || (org.apache = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var metadata;
        (function (metadata) {
            metadata.FixedMetadataValue = FixedMetadataValue_js_1.default;
            metadata.LazyMetadataValue = LazyMetadataValue_js_1.default;
            metadata.LazyMetadataValue$CacheStrategy = LazyMetadataValue_CacheStrategy_js_1.default;
            metadata.MetadataConversionException = MetadataConversionException_js_1.default;
            metadata.MetadataEvaluationException = MetadataEvaluationException_js_1.default;
            metadata.MetadataStore = MetadataStore_js_1.default;
            metadata.MetadataStoreBase = MetadataStoreBase_js_1.default;
            metadata.MetadataValue = MetadataValue_js_1.default;
            metadata.MetadataValueAdapter = MetadataValueAdapter_js_1.default;
            metadata.Metadatable = Metadatable_js_1.default;
        })(metadata = bukkit.metadata || (bukkit.metadata = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var help;
        (function (help) {
            help.GenericCommandHelpTopic = GenericCommandHelpTopic_js_1.default;
            help.HelpMap = HelpMap_js_1.default;
            help.HelpTopic = HelpTopic_js_1.default;
            help.HelpTopicComparator = HelpTopicComparator_js_1.default;
            help.HelpTopicComparator$TopicNameComparator = HelpTopicComparator_TopicNameComparator_js_1.default;
            help.HelpTopicFactory = HelpTopicFactory_js_1.default;
            help.IndexHelpTopic = IndexHelpTopic_js_1.default;
        })(help = bukkit.help || (bukkit.help = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (khttp) {
    var requests;
    (function (requests) {
        requests.GenericRequest = GenericRequest_js_1.default;
        requests.Request = Request_js_1.default;
    })(requests = khttp.requests || (khttp.requests = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (khttp) {
    var responses;
    (function (responses) {
        responses.GenericResponse = GenericResponse_js_1.default;
        responses.Response = Response_js_1.default;
    })(responses = khttp.responses || (khttp.responses = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var hanging;
            (function (hanging) {
                hanging.HangingBreakByEntityEvent = HangingBreakByEntityEvent_js_1.default;
                hanging.HangingBreakEvent = HangingBreakEvent_js_1.default;
                hanging.HangingBreakEvent$RemoveCause = HangingBreakEvent_RemoveCause_js_1.default;
                hanging.HangingEvent = HangingEvent_js_1.default;
                hanging.HangingPlaceEvent = HangingPlaceEvent_js_1.default;
            })(hanging = event.hanging || (event.hanging = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var smc;
    (function (smc) {
        var utils;
        (function (utils) {
            utils.Http = Http_js_1.default;
            utils.ItemBuilder = ItemBuilder_js_1.default;
            utils.MysqlWrapper = MysqlWrapper_js_1.default;
        })(utils = smc.utils || (smc.utils = {}));
    })(smc = com.smc || (com.smc = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var apache;
    (function (apache) {
        var commons;
        (function (commons) {
            var io;
            (function (io) {
                var filefilter;
                (function (filefilter) {
                    filefilter.IOFileFilter = IOFileFilter_js_1.default;
                })(filefilter = io.filefilter || (io.filefilter = {}));
            })(io = commons.io || (commons.io = {}));
        })(commons = apache.commons || (apache.commons = {}));
    })(apache = org.apache || (org.apache = {}));
})(org = exports.org || (exports.org = {}));
(function (fr) {
    var minuskube;
    (function (minuskube) {
        var inv;
        (function (inv) {
            var content;
            (function (content) {
                content.InventoryContents = InventoryContents_js_1.default;
                content.InventoryProvider = InventoryProvider_js_1.default;
                content.Pagination = Pagination_js_1.default;
                content.SlotIterator = SlotIterator_js_1.default;
                content.SlotIterator$Type = SlotIterator_Type_js_1.default;
                content.SlotPos = SlotPos_js_1.default;
            })(content = inv.content || (inv.content = {}));
        })(inv = minuskube.inv || (minuskube.inv = {}));
    })(minuskube = fr.minuskube || (fr.minuskube = {}));
})(fr = exports.fr || (exports.fr = {}));
(function (fr) {
    var minuskube;
    (function (minuskube) {
        var inv;
        (function (inv) {
            var opener;
            (function (opener) {
                opener.InventoryOpener = InventoryOpener_js_1.default;
            })(opener = inv.opener || (inv.opener = {}));
        })(inv = minuskube.inv || (minuskube.inv = {}));
    })(minuskube = fr.minuskube || (fr.minuskube = {}));
})(fr = exports.fr || (exports.fr = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var plugin;
        (function (plugin) {
            var java;
            (function (java) {
                java.JavaPlugin = JavaPlugin_js_1.default;
                java.JavaPluginLoader = JavaPluginLoader_js_1.default;
            })(java = plugin.java || (plugin.java = {}));
        })(plugin = bukkit.plugin || (bukkit.plugin = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var weather;
            (function (weather) {
                weather.LightningStrikeEvent = LightningStrikeEvent_js_1.default;
                weather.LightningStrikeEvent$Cause = LightningStrikeEvent_Cause_js_1.default;
                weather.ThunderChangeEvent = ThunderChangeEvent_js_1.default;
                weather.WeatherChangeEvent = WeatherChangeEvent_js_1.default;
                weather.WeatherEvent = WeatherEvent_js_1.default;
            })(weather = event.weather || (event.weather = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var loot;
        (function (loot) {
            loot.LootContext = LootContext_js_1.default;
            loot.LootTable = LootTable_js_1.default;
            loot.LootTables = LootTables_js_1.default;
            loot.Lootable = Lootable_js_1.default;
        })(loot = bukkit.loot || (bukkit.loot = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var pixlfox;
    (function (pixlfox) {
        var scriptablemc;
        (function (scriptablemc) {
            var acf;
            (function (acf) {
                var lib;
                (function (lib) {
                    var timings;
                    (function (timings) {
                        timings.MCTiming = MCTiming_js_1.default;
                        timings.TimingManager = TimingManager_js_1.default;
                    })(timings = lib.timings || (lib.timings = {}));
                })(lib = acf.lib || (acf.lib = {}));
            })(acf = scriptablemc.acf || (scriptablemc.acf = {}));
        })(scriptablemc = pixlfox.scriptablemc || (pixlfox.scriptablemc = {}));
    })(pixlfox = com.pixlfox || (com.pixlfox = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var map;
        (function (map) {
            map.MapCanvas = MapCanvas_js_1.default;
            map.MapCursor = MapCursor_js_1.default;
            map.MapCursor$Type = MapCursor_Type_js_1.default;
            map.MapCursorCollection = MapCursorCollection_js_1.default;
            map.MapFont = MapFont_js_1.default;
            map.MapFont$CharacterSprite = MapFont_CharacterSprite_js_1.default;
            map.MapPalette = MapPalette_js_1.default;
            map.MapRenderer = MapRenderer_js_1.default;
            map.MapView = MapView_js_1.default;
            map.MapView$Scale = MapView_Scale_js_1.default;
            map.MinecraftFont = MinecraftFont_js_1.default;
        })(map = bukkit.map || (bukkit.map = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var entity;
        (function (entity) {
            var memory;
            (function (memory) {
                memory.MemoryKey = MemoryKey_js_1.default;
            })(memory = entity.memory || (entity.memory = {}));
        })(entity = bukkit.entity || (bukkit.entity = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var smc;
    (function (smc) {
        var version;
        (function (version) {
            version.MinecraftVersions = MinecraftVersions_js_1.default;
            version.Version = Version_js_1.default;
        })(version = smc.version || (smc.version = {}));
    })(smc = com.smc || (com.smc = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var block;
        (function (block) {
            var structure;
            (function (structure) {
                structure.Mirror = Mirror_js_1.default;
                structure.StructureRotation = StructureRotation_js_1.default;
                structure.UsageMode = UsageMode_js_1.default;
            })(structure = block.structure || (block.structure = {}));
        })(block = bukkit.block || (bukkit.block = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var google;
    (function (google) {
        var common;
        (function (common) {
            var collect;
            (function (collect) {
                collect.Multimap = Multimap_js_1.default;
                collect.Multiset = Multiset_js_1.default;
                collect.SetMultimap = SetMultimap_js_1.default;
            })(collect = common.collect || (common.collect = {}));
        })(common = google.common || (google.common = {}));
    })(google = com.google || (com.google = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var material;
        (function (material) {
            var types;
            (function (types) {
                types.MushroomBlockTexture = MushroomBlockTexture_js_1.default;
            })(types = material.types || (material.types = {}));
        })(material = bukkit.material || (bukkit.material = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var smc;
    (function (smc) {
        var nbtapi;
        (function (nbtapi) {
            nbtapi.NBTCompound = NBTCompound_js_1.default;
            nbtapi.NBTCompoundList = NBTCompoundList_js_1.default;
            nbtapi.NBTContainer = NBTContainer_js_1.default;
            nbtapi.NBTEntity = NBTEntity_js_1.default;
            nbtapi.NBTFile = NBTFile_js_1.default;
            nbtapi.NBTItem = NBTItem_js_1.default;
            nbtapi.NBTList = NBTList_js_1.default;
            nbtapi.NBTListCompound = NBTListCompound_js_1.default;
            nbtapi.NBTType = NBTType_js_1.default;
        })(nbtapi = smc.nbtapi || (smc.nbtapi = {}));
    })(smc = com.smc || (com.smc = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var util;
        (function (util) {
            var noise;
            (function (noise) {
                noise.NoiseGenerator = NoiseGenerator_js_1.default;
                noise.OctaveGenerator = OctaveGenerator_js_1.default;
                noise.PerlinNoiseGenerator = PerlinNoiseGenerator_js_1.default;
                noise.PerlinOctaveGenerator = PerlinOctaveGenerator_js_1.default;
                noise.SimplexNoiseGenerator = SimplexNoiseGenerator_js_1.default;
                noise.SimplexOctaveGenerator = SimplexOctaveGenerator_js_1.default;
            })(noise = util.noise || (util.noise = {}));
        })(util = bukkit.util || (bukkit.util = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (khttp) {
    var structures;
    (function (structures) {
        var parameters;
        (function (parameters) {
            parameters.Parameters = Parameters_js_1.default;
        })(parameters = structures.parameters || (structures.parameters = {}));
    })(structures = khttp.structures || (khttp.structures = {}));
})(khttp = exports.khttp || (exports.khttp = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var block;
        (function (block) {
            var banner;
            (function (banner) {
                banner.Pattern = Pattern_js_1.default;
                banner.PatternType = PatternType_js_1.default;
            })(banner = block.banner || (block.banner = {}));
        })(block = bukkit.block || (bukkit.block = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var permissions;
        (function (permissions) {
            permissions.Permissible = Permissible_js_1.default;
            permissions.PermissibleBase = PermissibleBase_js_1.default;
            permissions.Permission = Permission_js_1.default;
            permissions.PermissionAttachment = PermissionAttachment_js_1.default;
            permissions.PermissionAttachmentInfo = PermissionAttachmentInfo_js_1.default;
            permissions.PermissionDefault = PermissionDefault_js_1.default;
            permissions.PermissionRemovedExecutor = PermissionRemovedExecutor_js_1.default;
            permissions.ServerOperator = ServerOperator_js_1.default;
        })(permissions = bukkit.permissions || (bukkit.permissions = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var persistence;
        (function (persistence) {
            persistence.PersistentDataAdapterContext = PersistentDataAdapterContext_js_1.default;
            persistence.PersistentDataContainer = PersistentDataContainer_js_1.default;
            persistence.PersistentDataHolder = PersistentDataHolder_js_1.default;
            persistence.PersistentDataType = PersistentDataType_js_1.default;
        })(persistence = bukkit.persistence || (bukkit.persistence = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var potion;
        (function (potion) {
            potion.Potion = Potion_js_1.default;
            potion.PotionBrewer = PotionBrewer_js_1.default;
            potion.PotionData = PotionData_js_1.default;
            potion.PotionEffect = PotionEffect_js_1.default;
            potion.PotionEffectType = PotionEffectType_js_1.default;
            potion.PotionEffectTypeWrapper = PotionEffectTypeWrapper_js_1.default;
            potion.PotionType = PotionType_js_1.default;
        })(potion = bukkit.potion || (bukkit.potion = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var raid;
            (function (raid) {
                raid.RaidEvent = RaidEvent_js_1.default;
                raid.RaidFinishEvent = RaidFinishEvent_js_1.default;
                raid.RaidSpawnWaveEvent = RaidSpawnWaveEvent_js_1.default;
                raid.RaidStopEvent = RaidStopEvent_js_1.default;
                raid.RaidStopEvent$Reason = RaidStopEvent_Reason_js_1.default;
                raid.RaidTriggerEvent = RaidTriggerEvent_js_1.default;
            })(raid = event.raid || (event.raid = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
(function (com) {
    var pixlfox;
    (function (pixlfox) {
        var scriptablemc;
        (function (scriptablemc) {
            scriptablemc.ScriptEngineConfig = ScriptEngineConfig_js_1.default;
            scriptablemc.ScriptEngineDebuggerConfig = ScriptEngineDebuggerConfig_js_1.default;
            scriptablemc.ScriptEngineMain = ScriptEngineMain_js_1.default;
        })(scriptablemc = pixlfox.scriptablemc || (pixlfox.scriptablemc = {}));
    })(pixlfox = com.pixlfox || (com.pixlfox = {}));
})(com = exports.com || (exports.com = {}));
(function (com) {
    var pixlfox;
    (function (pixlfox) {
        var scriptablemc;
        (function (scriptablemc) {
            var core;
            (function (core) {
                core.ScriptablePluginContext = ScriptablePluginContext_js_1.default;
                core.ScriptablePluginEngine = ScriptablePluginEngine_js_1.default;
            })(core = scriptablemc.core || (scriptablemc.core = {}));
        })(scriptablemc = pixlfox.scriptablemc || (pixlfox.scriptablemc = {}));
    })(pixlfox = com.pixlfox || (com.pixlfox = {}));
})(com = exports.com || (exports.com = {}));
(function (com) {
    var smc;
    (function (smc) {
        var smartinvs;
        (function (smartinvs) {
            smartinvs.SmartInventory = SmartInventory_js_2.default;
            smartinvs.SmartInventoryProvider = SmartInventoryProvider_js_1.default;
        })(smartinvs = smc.smartinvs || (smc.smartinvs = {}));
    })(smc = com.smc || (com.smc = {}));
})(com = exports.com || (exports.com = {}));
(function (org) {
    var bukkit;
    (function (bukkit) {
        var event;
        (function (event) {
            var vehicle;
            (function (vehicle) {
                vehicle.VehicleBlockCollisionEvent = VehicleBlockCollisionEvent_js_1.default;
                vehicle.VehicleCollisionEvent = VehicleCollisionEvent_js_1.default;
                vehicle.VehicleCreateEvent = VehicleCreateEvent_js_1.default;
                vehicle.VehicleDamageEvent = VehicleDamageEvent_js_1.default;
                vehicle.VehicleDestroyEvent = VehicleDestroyEvent_js_1.default;
                vehicle.VehicleEnterEvent = VehicleEnterEvent_js_1.default;
                vehicle.VehicleEntityCollisionEvent = VehicleEntityCollisionEvent_js_1.default;
                vehicle.VehicleEvent = VehicleEvent_js_1.default;
                vehicle.VehicleExitEvent = VehicleExitEvent_js_1.default;
                vehicle.VehicleMoveEvent = VehicleMoveEvent_js_1.default;
                vehicle.VehicleUpdateEvent = VehicleUpdateEvent_js_1.default;
            })(vehicle = event.vehicle || (event.vehicle = {}));
        })(event = bukkit.event || (bukkit.event = {}));
    })(bukkit = org.bukkit || (org.bukkit = {}));
})(org = exports.org || (exports.org = {}));
