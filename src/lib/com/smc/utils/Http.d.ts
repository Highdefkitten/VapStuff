import Authorization from '../../../khttp/structures/authorization/Authorization.js';
import Response from '../../../khttp/responses/Response.js';
export default class Http {
    static get $javaClass(): any;
    static delete(url: string): Response;
    static delete(url: string, headers: any): Response;
    static delete(url: string, headers: any, params: any): Response;
    static delete(url: string, headers: any, params: any, data: any): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static delete(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static get(url: string): Response;
    static get(url: string, headers: any): Response;
    static get(url: string, headers: any, params: any): Response;
    static get(url: string, headers: any, params: any, data: any): Response;
    static get(url: string, headers: any, params: any, data: any, json: any): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static get(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static head(url: string): Response;
    static head(url: string, headers: any): Response;
    static head(url: string, headers: any, params: any): Response;
    static head(url: string, headers: any, params: any, data: any): Response;
    static head(url: string, headers: any, params: any, data: any, json: any): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static head(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static options(url: string): Response;
    static options(url: string, headers: any): Response;
    static options(url: string, headers: any, params: any): Response;
    static options(url: string, headers: any, params: any, data: any): Response;
    static options(url: string, headers: any, params: any, data: any, json: any): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static options(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static patch(url: string): Response;
    static patch(url: string, headers: any): Response;
    static patch(url: string, headers: any, params: any): Response;
    static patch(url: string, headers: any, params: any, data: any): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static patch(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static post(url: string): Response;
    static post(url: string, headers: any): Response;
    static post(url: string, headers: any, params: any): Response;
    static post(url: string, headers: any, params: any, data: any): Response;
    static post(url: string, headers: any, params: any, data: any, json: any): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static post(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
    static put(url: string): Response;
    static put(url: string, headers: any): Response;
    static put(url: string, headers: any, params: any): Response;
    static put(url: string, headers: any, params: any, data: any): Response;
    static put(url: string, headers: any, params: any, data: any, json: any): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean): Response;
    static put(url: string, headers: any, params: any, data: any, json: any, auth: Authorization, cookies: any, timeout: number, allowRedirects: boolean, stream: boolean, files: Array<any>): Response;
}
